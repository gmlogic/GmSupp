'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Hglp")>  _
Partial Public Class DataClassesHglpDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub InsertTRDR(instance As Hglp.TRDR)
    End Sub
    Partial Private Sub UpdateTRDR(instance As Hglp.TRDR)
    End Sub
    Partial Private Sub DeleteTRDR(instance As Hglp.TRDR)
    End Sub
    Partial Private Sub InsertTRDBRANCH(instance As Hglp.TRDBRANCH)
    End Sub
    Partial Private Sub UpdateTRDBRANCH(instance As Hglp.TRDBRANCH)
    End Sub
    Partial Private Sub DeleteTRDBRANCH(instance As Hglp.TRDBRANCH)
    End Sub
    Partial Private Sub InsertSOCARRIER(instance As Hglp.SOCARRIER)
    End Sub
    Partial Private Sub UpdateSOCARRIER(instance As Hglp.SOCARRIER)
    End Sub
    Partial Private Sub DeleteSOCARRIER(instance As Hglp.SOCARRIER)
    End Sub
    Partial Private Sub InsertPRIORITY(instance As Hglp.PRIORITY)
    End Sub
    Partial Private Sub UpdatePRIORITY(instance As Hglp.PRIORITY)
    End Sub
    Partial Private Sub DeletePRIORITY(instance As Hglp.PRIORITY)
    End Sub
    Partial Private Sub InsertccCTrdBCity(instance As Hglp.ccCTrdBCity)
    End Sub
    Partial Private Sub UpdateccCTrdBCity(instance As Hglp.ccCTrdBCity)
    End Sub
    Partial Private Sub DeleteccCTrdBCity(instance As Hglp.ccCTrdBCity)
    End Sub
    Partial Private Sub InsertccCTrdBRoute(instance As Hglp.ccCTrdBRoute)
    End Sub
    Partial Private Sub UpdateccCTrdBRoute(instance As Hglp.ccCTrdBRoute)
    End Sub
    Partial Private Sub DeleteccCTrdBRoute(instance As Hglp.ccCTrdBRoute)
    End Sub
    Partial Private Sub InsertDISTRICT(instance As Hglp.DISTRICT)
    End Sub
    Partial Private Sub UpdateDISTRICT(instance As Hglp.DISTRICT)
    End Sub
    Partial Private Sub DeleteDISTRICT(instance As Hglp.DISTRICT)
    End Sub
    Partial Private Sub InsertccCRouting(instance As Hglp.ccCRouting)
    End Sub
    Partial Private Sub UpdateccCRouting(instance As Hglp.ccCRouting)
    End Sub
    Partial Private Sub DeleteccCRouting(instance As Hglp.ccCRouting)
    End Sub
    Partial Private Sub InsertcccSetting(instance As Hglp.cccSetting)
    End Sub
    Partial Private Sub UpdatecccSetting(instance As Hglp.cccSetting)
    End Sub
    Partial Private Sub DeletecccSetting(instance As Hglp.cccSetting)
    End Sub
    Partial Private Sub InsertcccPriceList(instance As Hglp.cccPriceList)
    End Sub
    Partial Private Sub UpdatecccPriceList(instance As Hglp.cccPriceList)
    End Sub
    Partial Private Sub DeletecccPriceList(instance As Hglp.cccPriceList)
    End Sub
    Partial Private Sub InsertFPRM(instance As Hglp.FPRM)
    End Sub
    Partial Private Sub UpdateFPRM(instance As Hglp.FPRM)
    End Sub
    Partial Private Sub DeleteFPRM(instance As Hglp.FPRM)
    End Sub
    Partial Private Sub InsertMTRDOC(instance As Hglp.MTRDOC)
    End Sub
    Partial Private Sub UpdateMTRDOC(instance As Hglp.MTRDOC)
    End Sub
    Partial Private Sub DeleteMTRDOC(instance As Hglp.MTRDOC)
    End Sub
    Partial Private Sub InsertFINPAYTERM(instance As Hglp.FINPAYTERM)
    End Sub
    Partial Private Sub UpdateFINPAYTERM(instance As Hglp.FINPAYTERM)
    End Sub
    Partial Private Sub DeleteFINPAYTERM(instance As Hglp.FINPAYTERM)
    End Sub
    Partial Private Sub InsertMTRUNIT(instance As Hglp.MTRUNIT)
    End Sub
    Partial Private Sub UpdateMTRUNIT(instance As Hglp.MTRUNIT)
    End Sub
    Partial Private Sub DeleteMTRUNIT(instance As Hglp.MTRUNIT)
    End Sub
    Partial Private Sub InsertcccPriceListLine(instance As Hglp.cccPriceListLine)
    End Sub
    Partial Private Sub UpdatecccPriceListLine(instance As Hglp.cccPriceListLine)
    End Sub
    Partial Private Sub DeletecccPriceListLine(instance As Hglp.cccPriceListLine)
    End Sub
    Partial Private Sub InsertMTREXTRA(instance As Hglp.MTREXTRA)
    End Sub
    Partial Private Sub UpdateMTREXTRA(instance As Hglp.MTREXTRA)
    End Sub
    Partial Private Sub DeleteMTREXTRA(instance As Hglp.MTREXTRA)
    End Sub
    Partial Private Sub InsertTPRM(instance As Hglp.TPRM)
    End Sub
    Partial Private Sub UpdateTPRM(instance As Hglp.TPRM)
    End Sub
    Partial Private Sub DeleteTPRM(instance As Hglp.TPRM)
    End Sub
    Partial Private Sub InsertGROUP(instance As Hglp.GROUP)
    End Sub
    Partial Private Sub UpdateGROUP(instance As Hglp.GROUP)
    End Sub
    Partial Private Sub DeleteGROUP(instance As Hglp.GROUP)
    End Sub
    Partial Private Sub InsertTRDTRN(instance As Hglp.TRDTRN)
    End Sub
    Partial Private Sub UpdateTRDTRN(instance As Hglp.TRDTRN)
    End Sub
    Partial Private Sub DeleteTRDTRN(instance As Hglp.TRDTRN)
    End Sub
    Partial Private Sub InsertTRDEXTRA(instance As Hglp.TRDEXTRA)
    End Sub
    Partial Private Sub UpdateTRDEXTRA(instance As Hglp.TRDEXTRA)
    End Sub
    Partial Private Sub DeleteTRDEXTRA(instance As Hglp.TRDEXTRA)
    End Sub
    Partial Private Sub InsertPRSN(instance As Hglp.PRSN)
    End Sub
    Partial Private Sub UpdatePRSN(instance As Hglp.PRSN)
    End Sub
    Partial Private Sub DeletePRSN(instance As Hglp.PRSN)
    End Sub
    Partial Private Sub InsertCHEQUE(instance As Hglp.CHEQUE)
    End Sub
    Partial Private Sub UpdateCHEQUE(instance As Hglp.CHEQUE)
    End Sub
    Partial Private Sub DeleteCHEQUE(instance As Hglp.CHEQUE)
    End Sub
    Partial Private Sub InsertSERIES(instance As Hglp.SERIES)
    End Sub
    Partial Private Sub UpdateSERIES(instance As Hglp.SERIES)
    End Sub
    Partial Private Sub DeleteSERIES(instance As Hglp.SERIES)
    End Sub
    Partial Private Sub InsertSERIESNUM(instance As Hglp.SERIESNUM)
    End Sub
    Partial Private Sub UpdateSERIESNUM(instance As Hglp.SERIESNUM)
    End Sub
    Partial Private Sub DeleteSERIESNUM(instance As Hglp.SERIESNUM)
    End Sub
    Partial Private Sub InsertSPCOSTANAL(instance As Hglp.SPCOSTANAL)
    End Sub
    Partial Private Sub UpdateSPCOSTANAL(instance As Hglp.SPCOSTANAL)
    End Sub
    Partial Private Sub DeleteSPCOSTANAL(instance As Hglp.SPCOSTANAL)
    End Sub
    Partial Private Sub InsertTRDFINDATA(instance As Hglp.TRDFINDATA)
    End Sub
    Partial Private Sub UpdateTRDFINDATA(instance As Hglp.TRDFINDATA)
    End Sub
    Partial Private Sub DeleteTRDFINDATA(instance As Hglp.TRDFINDATA)
    End Sub
    Partial Private Sub InsertTRDBALSHEET(instance As Hglp.TRDBALSHEET)
    End Sub
    Partial Private Sub UpdateTRDBALSHEET(instance As Hglp.TRDBALSHEET)
    End Sub
    Partial Private Sub DeleteTRDBALSHEET(instance As Hglp.TRDBALSHEET)
    End Sub
    Partial Private Sub InsertTEMPLATE(instance As Hglp.TEMPLATE)
    End Sub
    Partial Private Sub UpdateTEMPLATE(instance As Hglp.TEMPLATE)
    End Sub
    Partial Private Sub DeleteTEMPLATE(instance As Hglp.TEMPLATE)
    End Sub
    Partial Private Sub InsertVAT(instance As Hglp.VAT)
    End Sub
    Partial Private Sub UpdateVAT(instance As Hglp.VAT)
    End Sub
    Partial Private Sub DeleteVAT(instance As Hglp.VAT)
    End Sub
    Partial Private Sub InsertTRDFLINE(instance As Hglp.TRDFLINE)
    End Sub
    Partial Private Sub UpdateTRDFLINE(instance As Hglp.TRDFLINE)
    End Sub
    Partial Private Sub DeleteTRDFLINE(instance As Hglp.TRDFLINE)
    End Sub
    Partial Private Sub InsertCHQTPRM(instance As Hglp.CHQTPRM)
    End Sub
    Partial Private Sub UpdateCHQTPRM(instance As Hglp.CHQTPRM)
    End Sub
    Partial Private Sub DeleteCHQTPRM(instance As Hglp.CHQTPRM)
    End Sub
    Partial Private Sub InsertFINDOC(instance As Hglp.FINDOC)
    End Sub
    Partial Private Sub UpdateFINDOC(instance As Hglp.FINDOC)
    End Sub
    Partial Private Sub DeleteFINDOC(instance As Hglp.FINDOC)
    End Sub
    Partial Private Sub InsertWHOUSEBIN(instance As Hglp.WHOUSEBIN)
    End Sub
    Partial Private Sub UpdateWHOUSEBIN(instance As Hglp.WHOUSEBIN)
    End Sub
    Partial Private Sub DeleteWHOUSEBIN(instance As Hglp.WHOUSEBIN)
    End Sub
    Partial Private Sub InsertcccSettingsLine(instance As Hglp.cccSettingsLine)
    End Sub
    Partial Private Sub UpdatecccSettingsLine(instance As Hglp.cccSettingsLine)
    End Sub
    Partial Private Sub DeletecccSettingsLine(instance As Hglp.cccSettingsLine)
    End Sub
    Partial Private Sub InsertMTRLINE(instance As Hglp.MTRLINE)
    End Sub
    Partial Private Sub UpdateMTRLINE(instance As Hglp.MTRLINE)
    End Sub
    Partial Private Sub DeleteMTRLINE(instance As Hglp.MTRLINE)
    End Sub
    Partial Private Sub InsertMTRL(instance As Hglp.MTRL)
    End Sub
    Partial Private Sub UpdateMTRL(instance As Hglp.MTRL)
    End Sub
    Partial Private Sub DeleteMTRL(instance As Hglp.MTRL)
    End Sub
    Partial Private Sub InsertBRANCH(instance As Hglp.BRANCH)
    End Sub
    Partial Private Sub UpdateBRANCH(instance As Hglp.BRANCH)
    End Sub
    Partial Private Sub DeleteBRANCH(instance As Hglp.BRANCH)
    End Sub
    Partial Private Sub InsertUSER(instance As Hglp.USER)
    End Sub
    Partial Private Sub UpdateUSER(instance As Hglp.USER)
    End Sub
    Partial Private Sub DeleteUSER(instance As Hglp.USER)
    End Sub
    Partial Private Sub InsertWHOUSEG(instance As Hglp.WHOUSEG)
    End Sub
    Partial Private Sub UpdateWHOUSEG(instance As Hglp.WHOUSEG)
    End Sub
    Partial Private Sub DeleteWHOUSEG(instance As Hglp.WHOUSEG)
    End Sub
    Partial Private Sub InsertWHOUSE(instance As Hglp.WHOUSE)
    End Sub
    Partial Private Sub UpdateWHOUSE(instance As Hglp.WHOUSE)
    End Sub
    Partial Private Sub DeleteWHOUSE(instance As Hglp.WHOUSE)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.GmSupp.My.MySettings.Default.GenConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property TRDRs() As System.Data.Linq.Table(Of Hglp.TRDR)
		Get
			Return Me.GetTable(Of Hglp.TRDR)
		End Get
	End Property
	
	Public ReadOnly Property TRDBRANCHes() As System.Data.Linq.Table(Of Hglp.TRDBRANCH)
		Get
			Return Me.GetTable(Of Hglp.TRDBRANCH)
		End Get
	End Property
	
	Public ReadOnly Property SOCARRIERs() As System.Data.Linq.Table(Of Hglp.SOCARRIER)
		Get
			Return Me.GetTable(Of Hglp.SOCARRIER)
		End Get
	End Property
	
	Public ReadOnly Property PRIORITies() As System.Data.Linq.Table(Of Hglp.PRIORITY)
		Get
			Return Me.GetTable(Of Hglp.PRIORITY)
		End Get
	End Property
	
	Public ReadOnly Property ccCTrdBCities() As System.Data.Linq.Table(Of Hglp.ccCTrdBCity)
		Get
			Return Me.GetTable(Of Hglp.ccCTrdBCity)
		End Get
	End Property
	
	Public ReadOnly Property ccCTrdBRoutes() As System.Data.Linq.Table(Of Hglp.ccCTrdBRoute)
		Get
			Return Me.GetTable(Of Hglp.ccCTrdBRoute)
		End Get
	End Property
	
	Public ReadOnly Property DISTRICTs() As System.Data.Linq.Table(Of Hglp.DISTRICT)
		Get
			Return Me.GetTable(Of Hglp.DISTRICT)
		End Get
	End Property
	
	Public ReadOnly Property ccCRoutings() As System.Data.Linq.Table(Of Hglp.ccCRouting)
		Get
			Return Me.GetTable(Of Hglp.ccCRouting)
		End Get
	End Property
	
	Public ReadOnly Property ccCVTrdBRoutings() As System.Data.Linq.Table(Of Hglp.ccCVTrdBRouting)
		Get
			Return Me.GetTable(Of Hglp.ccCVTrdBRouting)
		End Get
	End Property
	
	Public ReadOnly Property cccSettings() As System.Data.Linq.Table(Of Hglp.cccSetting)
		Get
			Return Me.GetTable(Of Hglp.cccSetting)
		End Get
	End Property
	
	Public ReadOnly Property cccPriceLists() As System.Data.Linq.Table(Of Hglp.cccPriceList)
		Get
			Return Me.GetTable(Of Hglp.cccPriceList)
		End Get
	End Property
	
	Public ReadOnly Property FPRMs() As System.Data.Linq.Table(Of Hglp.FPRM)
		Get
			Return Me.GetTable(Of Hglp.FPRM)
		End Get
	End Property
	
	Public ReadOnly Property MTRDOCs() As System.Data.Linq.Table(Of Hglp.MTRDOC)
		Get
			Return Me.GetTable(Of Hglp.MTRDOC)
		End Get
	End Property
	
	Public ReadOnly Property FINPAYTERMs() As System.Data.Linq.Table(Of Hglp.FINPAYTERM)
		Get
			Return Me.GetTable(Of Hglp.FINPAYTERM)
		End Get
	End Property
	
	Public ReadOnly Property MTRUNITs() As System.Data.Linq.Table(Of Hglp.MTRUNIT)
		Get
			Return Me.GetTable(Of Hglp.MTRUNIT)
		End Get
	End Property
	
	Public ReadOnly Property cccPriceListLines() As System.Data.Linq.Table(Of Hglp.cccPriceListLine)
		Get
			Return Me.GetTable(Of Hglp.cccPriceListLine)
		End Get
	End Property
	
	Public ReadOnly Property MTREXTRAs() As System.Data.Linq.Table(Of Hglp.MTREXTRA)
		Get
			Return Me.GetTable(Of Hglp.MTREXTRA)
		End Get
	End Property
	
	Public ReadOnly Property TPRMs() As System.Data.Linq.Table(Of Hglp.TPRM)
		Get
			Return Me.GetTable(Of Hglp.TPRM)
		End Get
	End Property
	
	Public ReadOnly Property GROUPs() As System.Data.Linq.Table(Of Hglp.GROUP)
		Get
			Return Me.GetTable(Of Hglp.GROUP)
		End Get
	End Property
	
	Public ReadOnly Property TRDTRNs() As System.Data.Linq.Table(Of Hglp.TRDTRN)
		Get
			Return Me.GetTable(Of Hglp.TRDTRN)
		End Get
	End Property
	
	Public ReadOnly Property TRDEXTRAs() As System.Data.Linq.Table(Of Hglp.TRDEXTRA)
		Get
			Return Me.GetTable(Of Hglp.TRDEXTRA)
		End Get
	End Property
	
	Public ReadOnly Property ccCVTrdBRoutes() As System.Data.Linq.Table(Of Hglp.ccCVTrdBRoute)
		Get
			Return Me.GetTable(Of Hglp.ccCVTrdBRoute)
		End Get
	End Property
	
	Public ReadOnly Property VTRDTRNs() As System.Data.Linq.Table(Of Hglp.VTRDTRN)
		Get
			Return Me.GetTable(Of Hglp.VTRDTRN)
		End Get
	End Property
	
	Public ReadOnly Property PRSNs() As System.Data.Linq.Table(Of Hglp.PRSN)
		Get
			Return Me.GetTable(Of Hglp.PRSN)
		End Get
	End Property
	
	Public ReadOnly Property ccCVSoCarrierProPayments() As System.Data.Linq.Table(Of Hglp.ccCVSoCarrierProPayment)
		Get
			Return Me.GetTable(Of Hglp.ccCVSoCarrierProPayment)
		End Get
	End Property
	
	Public ReadOnly Property CHEQUEs() As System.Data.Linq.Table(Of Hglp.CHEQUE)
		Get
			Return Me.GetTable(Of Hglp.CHEQUE)
		End Get
	End Property
	
	Public ReadOnly Property SERIES() As System.Data.Linq.Table(Of Hglp.SERIES)
		Get
			Return Me.GetTable(Of Hglp.SERIES)
		End Get
	End Property
	
	Public ReadOnly Property SERIESNUMs() As System.Data.Linq.Table(Of Hglp.SERIESNUM)
		Get
			Return Me.GetTable(Of Hglp.SERIESNUM)
		End Get
	End Property
	
	Public ReadOnly Property SPCOSTANALs() As System.Data.Linq.Table(Of Hglp.SPCOSTANAL)
		Get
			Return Me.GetTable(Of Hglp.SPCOSTANAL)
		End Get
	End Property
	
	Public ReadOnly Property ccCVFinPayTerms() As System.Data.Linq.Table(Of Hglp.ccCVFinPayTerm)
		Get
			Return Me.GetTable(Of Hglp.ccCVFinPayTerm)
		End Get
	End Property
	
	Public ReadOnly Property TRDFINDATAs() As System.Data.Linq.Table(Of Hglp.TRDFINDATA)
		Get
			Return Me.GetTable(Of Hglp.TRDFINDATA)
		End Get
	End Property
	
	Public ReadOnly Property ccCVCurBals() As System.Data.Linq.Table(Of Hglp.ccCVCurBal)
		Get
			Return Me.GetTable(Of Hglp.ccCVCurBal)
		End Get
	End Property
	
	Public ReadOnly Property ccCVChequeOpens() As System.Data.Linq.Table(Of Hglp.ccCVChequeOpen)
		Get
			Return Me.GetTable(Of Hglp.ccCVChequeOpen)
		End Get
	End Property
	
	Public ReadOnly Property TRDBALSHEETs() As System.Data.Linq.Table(Of Hglp.TRDBALSHEET)
		Get
			Return Me.GetTable(Of Hglp.TRDBALSHEET)
		End Get
	End Property
	
	Public ReadOnly Property ccCVPriceListLines() As System.Data.Linq.Table(Of Hglp.ccCVPriceListLine)
		Get
			Return Me.GetTable(Of Hglp.ccCVPriceListLine)
		End Get
	End Property
	
	Public ReadOnly Property TEMPLATEs() As System.Data.Linq.Table(Of Hglp.TEMPLATE)
		Get
			Return Me.GetTable(Of Hglp.TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property VMTRSTATs() As System.Data.Linq.Table(Of Hglp.VMTRSTAT)
		Get
			Return Me.GetTable(Of Hglp.VMTRSTAT)
		End Get
	End Property
	
	Public ReadOnly Property VATs() As System.Data.Linq.Table(Of Hglp.VAT)
		Get
			Return Me.GetTable(Of Hglp.VAT)
		End Get
	End Property
	
	Public ReadOnly Property TRDFLINEs() As System.Data.Linq.Table(Of Hglp.TRDFLINE)
		Get
			Return Me.GetTable(Of Hglp.TRDFLINE)
		End Get
	End Property
	
	Public ReadOnly Property CHQTPRMs() As System.Data.Linq.Table(Of Hglp.CHQTPRM)
		Get
			Return Me.GetTable(Of Hglp.CHQTPRM)
		End Get
	End Property
	
	Public ReadOnly Property FINDOCs() As System.Data.Linq.Table(Of Hglp.FINDOC)
		Get
			Return Me.GetTable(Of Hglp.FINDOC)
		End Get
	End Property
	
	Public ReadOnly Property WHOUSEBINs() As System.Data.Linq.Table(Of Hglp.WHOUSEBIN)
		Get
			Return Me.GetTable(Of Hglp.WHOUSEBIN)
		End Get
	End Property
	
	Public ReadOnly Property cccSettingsLines() As System.Data.Linq.Table(Of Hglp.cccSettingsLine)
		Get
			Return Me.GetTable(Of Hglp.cccSettingsLine)
		End Get
	End Property
	
	Public ReadOnly Property ccCVShipments() As System.Data.Linq.Table(Of Hglp.ccCVShipment)
		Get
			Return Me.GetTable(Of Hglp.ccCVShipment)
		End Get
	End Property
	
	Public ReadOnly Property MTRLINEs() As System.Data.Linq.Table(Of Hglp.MTRLINE)
		Get
			Return Me.GetTable(Of Hglp.MTRLINE)
		End Get
	End Property
	
	Public ReadOnly Property MTRLs() As System.Data.Linq.Table(Of Hglp.MTRL)
		Get
			Return Me.GetTable(Of Hglp.MTRL)
		End Get
	End Property
	
	Public ReadOnly Property BRANCHes() As System.Data.Linq.Table(Of Hglp.BRANCH)
		Get
			Return Me.GetTable(Of Hglp.BRANCH)
		End Get
	End Property
	
	Public ReadOnly Property USERs() As System.Data.Linq.Table(Of Hglp.USER)
		Get
			Return Me.GetTable(Of Hglp.USER)
		End Get
	End Property
	
	Public ReadOnly Property WHOUSEGs() As System.Data.Linq.Table(Of Hglp.WHOUSEG)
		Get
			Return Me.GetTable(Of Hglp.WHOUSEG)
		End Get
	End Property
	
	Public ReadOnly Property WHOUSEs() As System.Data.Linq.Table(Of Hglp.WHOUSE)
		Get
			Return Me.GetTable(Of Hglp.WHOUSE)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clDiscStep1", IsComposable:=true)>  _
	Public Function fn_clDiscStep1(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbranch As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal item As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbusiness As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal ship As System.Nullable(Of Integer)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, trdbranch, item, trdr, trdbusiness, ship).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clDiscStep2", IsComposable:=true)>  _
	Public Function fn_clDiscStep2(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbranch As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal item As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbusiness As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal ship As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal qty As System.Nullable(Of Double)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, trdbranch, item, trdr, trdbusiness, ship, qty).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clDiscStep3", IsComposable:=true)>  _
	Public Function fn_clDiscStep3(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal item As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal qty As System.Nullable(Of Double)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, item, trdr, qty).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clDiscStep4", IsComposable:=true)>  _
	Public Function fn_clDiscStep4(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal item As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByVal qty As System.Nullable(Of Double)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, item, qty).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clpriceStep1", IsComposable:=true)>  _
	Public Function fn_clpriceStep1(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbranch As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal mtrl As System.Nullable(Of Integer)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, trdbranch, trdr, mtrl).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clpriceStep1_1", IsComposable:=true)>  _
	Public Function fn_clpriceStep1_1(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbranch As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal mtrl As System.Nullable(Of Integer)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, trdbranch, trdr, mtrl).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clpriceStep2", IsComposable:=true)>  _
	Public Function fn_clpriceStep2(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbranch As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal item As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal ship As System.Nullable(Of Integer)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, trdbranch, item, trdr, ship).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_clpriceStep3", IsComposable:=true)>  _
	Public Function fn_clpriceStep3(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal whouse As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdbranch As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trdr As System.Nullable(Of Integer)) As System.Nullable(Of Double)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tdate, whouse, trdbranch, trdr).ReturnValue,System.Nullable(Of Double))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.testFetchWhouses")>  _
	Public Function testFetchWhouses(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MTRL", DbType:="Int")> ByVal mTRL As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CODE", DbType:="VarChar(25)")> ByVal cODE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="COMPANY", DbType:="Int")> ByVal cOMPANY As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SODTYPE", DbType:="Int")> ByVal sODTYPE As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WHOUSE", DbType:="VarChar(MAX)")> ByVal wHOUSE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MTRACN", DbType:="VarChar(MAX)")> ByVal mTRACN As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DFROM", DbType:="DateTime")> ByVal dFROM As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DTO", DbType:="DateTime")> ByVal dTO As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FISCPRD", DbType:="Int")> ByVal fISCPRD As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PERIOD", DbType:="Int")> ByVal pERIOD As System.Nullable(Of Integer)) As ISingleResult(Of Hglp.testFetchWhousesResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), mTRL, cODE, cOMPANY, sODTYPE, wHOUSE, mTRACN, dFROM, dTO, fISCPRD, pERIOD)
		Return CType(result.ReturnValue,ISingleResult(Of Hglp.testFetchWhousesResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fnCheQueOpen", IsComposable:=true)>  _
	Public Function fnCheQueOpen(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal cheque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date)) As IQueryable(Of Hglp.fnCheQueOpenResult)
		Return Me.CreateMethodCallQuery(Of Hglp.fnCheQueOpenResult)(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cheque, tdate)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fnCheQueBal", IsComposable:=true)>  _
	Public Function fnCheQueBal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal cheque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date)) As IQueryable(Of Hglp.fnCheQueBalResult)
		Return Me.CreateMethodCallQuery(Of Hglp.fnCheQueBalResult)(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cheque, tdate)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fn_GmGetTransformsDocs", IsComposable:=true)>  _
	Public Function fn_GmGetTransformsDocs(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal findoc As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Level", DbType:="Int")> ByVal level As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal tfprms As System.Nullable(Of Integer)) As String
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), findoc, level, tfprms).ReturnValue,String)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FetchWhouses")>  _
	Public Function FetchWhouses(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MTRL", DbType:="Int")> ByVal mTRL As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CODE", DbType:="VarChar(25)")> ByVal cODE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="COMPANY", DbType:="Int")> ByVal cOMPANY As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SODTYPE", DbType:="Int")> ByVal sODTYPE As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WHOUSE", DbType:="VarChar(MAX)")> ByVal wHOUSE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DFROM", DbType:="DateTime")> ByVal dFROM As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DTO", DbType:="DateTime")> ByVal dTO As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FISCPRD", DbType:="Int")> ByVal fISCPRD As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PERIOD", DbType:="Int")> ByVal pERIOD As System.Nullable(Of Integer)) As ISingleResult(Of Hglp.FetchWhousesResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), mTRL, cODE, cOMPANY, sODTYPE, wHOUSE, dFROM, dTO, fISCPRD, pERIOD)
		Return CType(result.ReturnValue,ISingleResult(Of Hglp.FetchWhousesResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FetchWhousesDaily")>  _
	Public Function FetchWhousesDaily( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MTRL", DbType:="Int")> ByVal mTRL As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CODE", DbType:="VarChar(25)")> ByVal cODE As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="COMPANY", DbType:="Int")> ByVal cOMPANY As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SODTYPE", DbType:="Int")> ByVal sODTYPE As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WHOUSE", DbType:="VarChar(MAX)")> ByVal wHOUSE As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MTRACN", DbType:="VarChar(MAX)")> ByVal mTRACN As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DFROM", DbType:="DateTime")> ByVal dFROM As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DTO", DbType:="DateTime")> ByVal dTO As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FISCPRD", DbType:="Int")> ByVal fISCPRD As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PERIOD", DbType:="Int")> ByVal pERIOD As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SOSOURCE", DbType:="Int")> ByVal sOSOURCE As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FPRMS", DbType:="VarChar(MAX)")> ByVal fPRMS As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TFPRMS", DbType:="VarChar(MAX)")> ByVal tFPRMS As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TRDBUSINESS", DbType:="VarChar(MAX)")> ByVal tRDBUSINESS As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ISCANCEL", DbType:="SmallInt")> ByVal iSCANCEL As System.Nullable(Of Short),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FULLYTRANSF", DbType:="VarChar(MAX)")> ByVal fULLYTRANSF As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SLCODE", DbType:="VarChar(25)")> ByVal sLCODE As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TRDRCODE", DbType:="VarChar(25)")> ByVal tRDRCODE As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SLGROUP", DbType:="VarChar(MAX)")> ByVal sLGROUP As String) As ISingleResult(Of Hglp.FetchWhousesDailyResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), mTRL, cODE, cOMPANY, sODTYPE, wHOUSE, mTRACN, dFROM, dTO, fISCPRD, pERIOD, sOSOURCE, fPRMS, tFPRMS, tRDBUSINESS, iSCANCEL, fULLYTRANSF, sLCODE, tRDRCODE, sLGROUP)
		Return CType(result.ReturnValue,ISingleResult(Of Hglp.FetchWhousesDailyResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FetchChequeInSpecificDate")>  _
	Public Function FetchChequeInSpecificDate(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CODE", DbType:="VarChar(25)")> ByVal cODE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="COMPANY", DbType:="Int")> ByVal cOMPANY As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SOSOURCE", DbType:="Int")> ByVal sOSOURCE As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CHEQUE", DbType:="VarChar(MAX)")> ByVal cHEQUE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DSPF", DbType:="DateTime")> ByVal dSPF As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DFROM", DbType:="DateTime")> ByVal dFROM As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DTO", DbType:="DateTime")> ByVal dTO As System.Nullable(Of Date)) As ISingleResult(Of Hglp.FetchChequeInSpecificDateResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cODE, cOMPANY, sOSOURCE, cHEQUE, dSPF, dFROM, dTO)
		Return CType(result.ReturnValue,ISingleResult(Of Hglp.FetchChequeInSpecificDateResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fnCheQueOpenAll", IsComposable:=true)>  _
	Public Function fnCheQueOpenAll(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal cheque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal tdate As System.Nullable(Of Date)) As IQueryable(Of Hglp.fnCheQueOpenAllResult)
		Return Me.CreateMethodCallQuery(Of Hglp.fnCheQueOpenAllResult)(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cheque, tdate)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FetchWhousesBal")>  _
	Public Function FetchWhousesBal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MTRL", DbType:="Int")> ByVal mTRL As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CODE", DbType:="VarChar(25)")> ByVal cODE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="COMPANY", DbType:="Int")> ByVal cOMPANY As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SODTYPE", DbType:="Int")> ByVal sODTYPE As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WHOUSE", DbType:="VarChar(MAX)")> ByVal wHOUSE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MTRACN", DbType:="VarChar(MAX)")> ByVal mTRACN As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DFROM", DbType:="DateTime")> ByVal dFROM As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DTO", DbType:="DateTime")> ByVal dTO As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="FISCPRD", DbType:="Int")> ByVal fISCPRD As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PERIOD", DbType:="Int")> ByVal pERIOD As System.Nullable(Of Integer)) As ISingleResult(Of Hglp.FetchWhousesBalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), mTRL, cODE, cOMPANY, sODTYPE, wHOUSE, mTRACN, dFROM, dTO, fISCPRD, pERIOD)
		Return CType(result.ReturnValue,ISingleResult(Of Hglp.FetchWhousesBalResult))
	End Function
End Class

Namespace Hglp
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRDR")>  _
	Partial Public Class TRDR
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _LOCKID As System.Nullable(Of Integer)
		
		Private _SODTYPE As Short
		
		Private _TRDR As Integer
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _AFM As String
		
		Private _CHKAFM As Short
		
		Private _OLDEH As String
		
		Private _OLAFM As String
		
		Private _ISACTIVE As Short
		
		Private _ISPROSP As Short
		
		Private _ISCMPT As Short
		
		Private _COUNTRY As System.Nullable(Of Short)
		
		Private _SOCURRENCY As Short
		
		Private _BRANCH As System.Nullable(Of Short)
		
		Private _ADDRESS As String
		
		Private _ZIP As String
		
		Private _DISTRICT As String
		
		Private _CITY As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _AREAS As System.Nullable(Of Short)
		
		Private _PHONE01 As String
		
		Private _PHONE02 As String
		
		Private _FAX As String
		
		Private _JOBTYPE As System.Nullable(Of Short)
		
		Private _JOBTYPETRD As String
		
		Private _TRDGROUP As System.Nullable(Of Integer)
		
		Private _TRDPGROUP As System.Nullable(Of Short)
		
		Private _WEBPAGE As String
		
		Private _EMAIL As String
		
		Private _EMAILACC As String
		
		Private _TRDCATEGORY As System.Nullable(Of Short)
		
		Private _TRDBUSINESS As System.Nullable(Of Short)
		
		Private _SHIPMENT As System.Nullable(Of Short)
		
		Private _PAYMENT As System.Nullable(Of Short)
		
		Private _PRCCATEGORY As System.Nullable(Of Short)
		
		Private _COMMISION As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _PRIORITY As System.Nullable(Of Short)
		
		Private _PRCPOLICY As System.Nullable(Of Short)
		
		Private _DSCPOLICY As System.Nullable(Of Short)
		
		Private _ISVALCREDIT As System.Nullable(Of Short)
		
		Private _SOCARRIER As System.Nullable(Of Short)
		
		Private _TRUCKS As System.Nullable(Of Short)
		
		Private _ROUTING As System.Nullable(Of Short)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _COLLECTOR As System.Nullable(Of Integer)
		
		Private _CODE1 As String
		
		Private _IRSDATA As String
		
		Private _VATSTS As Short
		
		Private _VATPROVISIONS As System.Nullable(Of Short)
		
		Private _RECEIPTCARD As String
		
		Private _KEPYOSTS As Short
		
		Private _KEPYOMD As Short
		
		Private _GSISMD As Short
		
		Private _CMPMODE As Short
		
		Private _EFKFLAG As Short
		
		Private _ACNMSK As String
		
		Private _OPITMODE As Short
		
		Private _OPITFINDOC As Short
		
		Private _CRCONTROL As System.Nullable(Of Short)
		
		Private _CRDLINES1 As System.Nullable(Of Short)
		
		Private _CRDLIMIT1 As System.Nullable(Of Double)
		
		Private _CRDLINES2 As System.Nullable(Of Short)
		
		Private _CRDLIMIT2 As System.Nullable(Of Double)
		
		Private _CRDLINES3 As System.Nullable(Of Short)
		
		Private _CRDLIMIT3 As System.Nullable(Of Double)
		
		Private _CRDLINES4 As System.Nullable(Of Short)
		
		Private _CRDLIMIT4 As System.Nullable(Of Double)
		
		Private _CRDLINES5 As System.Nullable(Of Short)
		
		Private _CRDLIMIT5 As System.Nullable(Of Double)
		
		Private _DISCOUNT As System.Nullable(Of Double)
		
		Private _MAXPRCDISC As System.Nullable(Of Double)
		
		Private _CHKMAXPRCDISC As Short
		
		Private _PAYHFROM As System.Nullable(Of Date)
		
		Private _PAYHTO As System.Nullable(Of Date)
		
		Private _PAYEVERY As System.Nullable(Of Short)
		
		Private _PAYDAY As System.Nullable(Of Short)
		
		Private _PAYWEEK As System.Nullable(Of Short)
		
		Private _VISITEVERY As String
		
		Private _WARNING As String
		
		Private _EXPGROUP As System.Nullable(Of Short)
		
		Private _GASCUSTYPE As System.Nullable(Of Short)
		
		Private _SOSCORE As System.Nullable(Of Integer)
		
		Private _BANK As System.Nullable(Of Integer)
		
		Private _BANKBRANCH As System.Nullable(Of Integer)
		
		Private _BANKACCNUMBER As String
		
		Private _BANKRATE1 As System.Nullable(Of Double)
		
		Private _BANKRATE2 As System.Nullable(Of Double)
		
		Private _ACNMSK1 As String
		
		Private _ACNMSKS As String
		
		Private _ACNMSKX As String
		
		Private _BANCTYPE As System.Nullable(Of Short)
		
		Private _MINBAL As System.Nullable(Of Double)
		
		Private _MAXBAL As System.Nullable(Of Double)
		
		Private _IBAN As String
		
		Private _SWIFT As String
		
		Private _SPCCHAR As String
		
		Private _CODELINEMD As Short
		
		Private _TRDTYPE1 As Short
		
		Private _PRJCS As System.Nullable(Of Integer)
		
		Private _ISCONTRACTOR As Short
		
		Private _SPCOST As System.Nullable(Of Short)
		
		Private _CONWHOUSE As System.Nullable(Of Short)
		
		Private _BGBULSTAT As String
		
		Private _REMARKS As String
		
		Private _ECOLLABORATION As System.Nullable(Of Short)
		
		Private _WASTETYPE As String
		
		Private _S1INVMD As System.Nullable(Of Short)
		
		Private _SOPAYCODE As System.Nullable(Of Short)
		
		Private _NUMCG As String
		
		Private _INPAYVAT As Short
		
		Private _CBEARER As String
		
		Private _RELTRDR As System.Nullable(Of Integer)
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _CUSDATE As System.Nullable(Of Date)
		
		Private _CUSUSER As System.Nullable(Of Short)
		
		Private _TRDBRANCHes As EntitySet(Of TRDBRANCH)
		
		Private _TRDEXTRA As EntityRef(Of TRDEXTRA)
		
		Private _TRDFINDATAs As EntitySet(Of TRDFINDATA)
		
		Private _TRDBALSHEETs As EntitySet(Of TRDBALSHEET)
		
		Private _TRDFLINEs As EntitySet(Of TRDFLINE)
		
		Private _FINDOCs As EntitySet(Of FINDOC)
		
		Private _PRSN As EntityRef(Of PRSN)
		
		Private _PRSN1 As EntityRef(Of PRSN)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnLOCKIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCKIDChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnAFMChanging(value As String)
    End Sub
    Partial Private Sub OnAFMChanged()
    End Sub
    Partial Private Sub OnCHKAFMChanging(value As Short)
    End Sub
    Partial Private Sub OnCHKAFMChanged()
    End Sub
    Partial Private Sub OnOLDEHChanging(value As String)
    End Sub
    Partial Private Sub OnOLDEHChanged()
    End Sub
    Partial Private Sub OnOLAFMChanging(value As String)
    End Sub
    Partial Private Sub OnOLAFMChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnISPROSPChanging(value As Short)
    End Sub
    Partial Private Sub OnISPROSPChanged()
    End Sub
    Partial Private Sub OnISCMPTChanging(value As Short)
    End Sub
    Partial Private Sub OnISCMPTChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCURRENCYChanged()
    End Sub
    Partial Private Sub OnBRANCHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBRANCHChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnDISTRICT1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDISTRICT1Changed()
    End Sub
    Partial Private Sub OnAREASChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnAREASChanged()
    End Sub
    Partial Private Sub OnPHONE01Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE01Changed()
    End Sub
    Partial Private Sub OnPHONE02Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE02Changed()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnJOBTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnJOBTYPEChanged()
    End Sub
    Partial Private Sub OnJOBTYPETRDChanging(value As String)
    End Sub
    Partial Private Sub OnJOBTYPETRDChanged()
    End Sub
    Partial Private Sub OnTRDGROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDGROUPChanged()
    End Sub
    Partial Private Sub OnTRDPGROUPChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRDPGROUPChanged()
    End Sub
    Partial Private Sub OnWEBPAGEChanging(value As String)
    End Sub
    Partial Private Sub OnWEBPAGEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnEMAILACCChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILACCChanged()
    End Sub
    Partial Private Sub OnTRDCATEGORYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRDCATEGORYChanged()
    End Sub
    Partial Private Sub OnTRDBUSINESSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRDBUSINESSChanged()
    End Sub
    Partial Private Sub OnSHIPMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSHIPMENTChanged()
    End Sub
    Partial Private Sub OnPAYMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPAYMENTChanged()
    End Sub
    Partial Private Sub OnPRCCATEGORYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRCCATEGORYChanged()
    End Sub
    Partial Private Sub OnCOMMISIONChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOMMISIONChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnPRIORITYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRIORITYChanged()
    End Sub
    Partial Private Sub OnPRCPOLICYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRCPOLICYChanged()
    End Sub
    Partial Private Sub OnDSCPOLICYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDSCPOLICYChanged()
    End Sub
    Partial Private Sub OnISVALCREDITChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnISVALCREDITChanged()
    End Sub
    Partial Private Sub OnSOCARRIERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCARRIERChanged()
    End Sub
    Partial Private Sub OnTRUCKSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRUCKSChanged()
    End Sub
    Partial Private Sub OnROUTINGChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnROUTINGChanged()
    End Sub
    Partial Private Sub OnSALESMANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALESMANChanged()
    End Sub
    Partial Private Sub OnCOLLECTORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOLLECTORChanged()
    End Sub
    Partial Private Sub OnCODE1Changing(value As String)
    End Sub
    Partial Private Sub OnCODE1Changed()
    End Sub
    Partial Private Sub OnIRSDATAChanging(value As String)
    End Sub
    Partial Private Sub OnIRSDATAChanged()
    End Sub
    Partial Private Sub OnVATSTSChanging(value As Short)
    End Sub
    Partial Private Sub OnVATSTSChanged()
    End Sub
    Partial Private Sub OnVATPROVISIONSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATPROVISIONSChanged()
    End Sub
    Partial Private Sub OnRECEIPTCARDChanging(value As String)
    End Sub
    Partial Private Sub OnRECEIPTCARDChanged()
    End Sub
    Partial Private Sub OnKEPYOSTSChanging(value As Short)
    End Sub
    Partial Private Sub OnKEPYOSTSChanged()
    End Sub
    Partial Private Sub OnKEPYOMDChanging(value As Short)
    End Sub
    Partial Private Sub OnKEPYOMDChanged()
    End Sub
    Partial Private Sub OnGSISMDChanging(value As Short)
    End Sub
    Partial Private Sub OnGSISMDChanged()
    End Sub
    Partial Private Sub OnCMPMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnCMPMODEChanged()
    End Sub
    Partial Private Sub OnEFKFLAGChanging(value As Short)
    End Sub
    Partial Private Sub OnEFKFLAGChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnOPITMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnOPITMODEChanged()
    End Sub
    Partial Private Sub OnOPITFINDOCChanging(value As Short)
    End Sub
    Partial Private Sub OnOPITFINDOCChanged()
    End Sub
    Partial Private Sub OnCRCONTROLChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRCONTROLChanged()
    End Sub
    Partial Private Sub OnCRDLINES1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRDLINES1Changed()
    End Sub
    Partial Private Sub OnCRDLIMIT1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCRDLIMIT1Changed()
    End Sub
    Partial Private Sub OnCRDLINES2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRDLINES2Changed()
    End Sub
    Partial Private Sub OnCRDLIMIT2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCRDLIMIT2Changed()
    End Sub
    Partial Private Sub OnCRDLINES3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRDLINES3Changed()
    End Sub
    Partial Private Sub OnCRDLIMIT3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCRDLIMIT3Changed()
    End Sub
    Partial Private Sub OnCRDLINES4Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRDLINES4Changed()
    End Sub
    Partial Private Sub OnCRDLIMIT4Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCRDLIMIT4Changed()
    End Sub
    Partial Private Sub OnCRDLINES5Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRDLINES5Changed()
    End Sub
    Partial Private Sub OnCRDLIMIT5Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCRDLIMIT5Changed()
    End Sub
    Partial Private Sub OnDISCOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISCOUNTChanged()
    End Sub
    Partial Private Sub OnMAXPRCDISCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMAXPRCDISCChanged()
    End Sub
    Partial Private Sub OnCHKMAXPRCDISCChanging(value As Short)
    End Sub
    Partial Private Sub OnCHKMAXPRCDISCChanged()
    End Sub
    Partial Private Sub OnPAYHFROMChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPAYHFROMChanged()
    End Sub
    Partial Private Sub OnPAYHTOChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPAYHTOChanged()
    End Sub
    Partial Private Sub OnPAYEVERYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPAYEVERYChanged()
    End Sub
    Partial Private Sub OnPAYDAYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPAYDAYChanged()
    End Sub
    Partial Private Sub OnPAYWEEKChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPAYWEEKChanged()
    End Sub
    Partial Private Sub OnVISITEVERYChanging(value As String)
    End Sub
    Partial Private Sub OnVISITEVERYChanged()
    End Sub
    Partial Private Sub OnWARNINGChanging(value As String)
    End Sub
    Partial Private Sub OnWARNINGChanged()
    End Sub
    Partial Private Sub OnEXPGROUPChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXPGROUPChanged()
    End Sub
    Partial Private Sub OnGASCUSTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGASCUSTYPEChanged()
    End Sub
    Partial Private Sub OnSOSCOREChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSOSCOREChanged()
    End Sub
    Partial Private Sub OnBANKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANKChanged()
    End Sub
    Partial Private Sub OnBANKBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANKBRANCHChanged()
    End Sub
    Partial Private Sub OnBANKACCNUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnBANKACCNUMBERChanged()
    End Sub
    Partial Private Sub OnBANKRATE1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBANKRATE1Changed()
    End Sub
    Partial Private Sub OnBANKRATE2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBANKRATE2Changed()
    End Sub
    Partial Private Sub OnACNMSK1Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK1Changed()
    End Sub
    Partial Private Sub OnACNMSKSChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKSChanged()
    End Sub
    Partial Private Sub OnACNMSKXChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKXChanged()
    End Sub
    Partial Private Sub OnBANCTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBANCTYPEChanged()
    End Sub
    Partial Private Sub OnMINBALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMINBALChanged()
    End Sub
    Partial Private Sub OnMAXBALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMAXBALChanged()
    End Sub
    Partial Private Sub OnIBANChanging(value As String)
    End Sub
    Partial Private Sub OnIBANChanged()
    End Sub
    Partial Private Sub OnSWIFTChanging(value As String)
    End Sub
    Partial Private Sub OnSWIFTChanged()
    End Sub
    Partial Private Sub OnSPCCHARChanging(value As String)
    End Sub
    Partial Private Sub OnSPCCHARChanged()
    End Sub
    Partial Private Sub OnCODELINEMDChanging(value As Short)
    End Sub
    Partial Private Sub OnCODELINEMDChanged()
    End Sub
    Partial Private Sub OnTRDTYPE1Changing(value As Short)
    End Sub
    Partial Private Sub OnTRDTYPE1Changed()
    End Sub
    Partial Private Sub OnPRJCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJCSChanged()
    End Sub
    Partial Private Sub OnISCONTRACTORChanging(value As Short)
    End Sub
    Partial Private Sub OnISCONTRACTORChanged()
    End Sub
    Partial Private Sub OnSPCOSTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSPCOSTChanged()
    End Sub
    Partial Private Sub OnCONWHOUSEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCONWHOUSEChanged()
    End Sub
    Partial Private Sub OnBGBULSTATChanging(value As String)
    End Sub
    Partial Private Sub OnBGBULSTATChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnECOLLABORATIONChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnECOLLABORATIONChanged()
    End Sub
    Partial Private Sub OnWASTETYPEChanging(value As String)
    End Sub
    Partial Private Sub OnWASTETYPEChanged()
    End Sub
    Partial Private Sub OnS1INVMDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnS1INVMDChanged()
    End Sub
    Partial Private Sub OnSOPAYCODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOPAYCODEChanged()
    End Sub
    Partial Private Sub OnNUMCGChanging(value As String)
    End Sub
    Partial Private Sub OnNUMCGChanged()
    End Sub
    Partial Private Sub OnINPAYVATChanging(value As Short)
    End Sub
    Partial Private Sub OnINPAYVATChanged()
    End Sub
    Partial Private Sub OnCBEARERChanging(value As String)
    End Sub
    Partial Private Sub OnCBEARERChanged()
    End Sub
    Partial Private Sub OnRELTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRELTRDRChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnCUSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCUSDATEChanged()
    End Sub
    Partial Private Sub OnCUSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCUSUSERChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._TRDBRANCHes = New EntitySet(Of TRDBRANCH)(AddressOf Me.attach_TRDBRANCHes, AddressOf Me.detach_TRDBRANCHes)
			Me._TRDEXTRA = CType(Nothing, EntityRef(Of TRDEXTRA))
			Me._TRDFINDATAs = New EntitySet(Of TRDFINDATA)(AddressOf Me.attach_TRDFINDATAs, AddressOf Me.detach_TRDFINDATAs)
			Me._TRDBALSHEETs = New EntitySet(Of TRDBALSHEET)(AddressOf Me.attach_TRDBALSHEETs, AddressOf Me.detach_TRDBALSHEETs)
			Me._TRDFLINEs = New EntitySet(Of TRDFLINE)(AddressOf Me.attach_TRDFLINEs, AddressOf Me.detach_TRDFLINEs)
			Me._FINDOCs = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs, AddressOf Me.detach_FINDOCs)
			Me._PRSN = CType(Nothing, EntityRef(Of PRSN))
			Me._PRSN1 = CType(Nothing, EntityRef(Of PRSN))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCKID", DbType:="Int")>  _
		Public Property LOCKID() As System.Nullable(Of Integer)
			Get
				Return Me._LOCKID
			End Get
			Set
				If (Me._LOCKID.Equals(value) = false) Then
					Me.OnLOCKIDChanging(value)
					Me.SendPropertyChanging
					Me._LOCKID = value
					Me.SendPropertyChanged("LOCKID")
					Me.OnLOCKIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFM", DbType:="VarChar(20)")>  _
		Public Property AFM() As String
			Get
				Return Me._AFM
			End Get
			Set
				If (String.Equals(Me._AFM, value) = false) Then
					Me.OnAFMChanging(value)
					Me.SendPropertyChanging
					Me._AFM = value
					Me.SendPropertyChanged("AFM")
					Me.OnAFMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHKAFM", DbType:="SmallInt NOT NULL")>  _
		Public Property CHKAFM() As Short
			Get
				Return Me._CHKAFM
			End Get
			Set
				If ((Me._CHKAFM = value)  _
							= false) Then
					Me.OnCHKAFMChanging(value)
					Me.SendPropertyChanging
					Me._CHKAFM = value
					Me.SendPropertyChanged("CHKAFM")
					Me.OnCHKAFMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLDEH", DbType:="VarChar(12)")>  _
		Public Property OLDEH() As String
			Get
				Return Me._OLDEH
			End Get
			Set
				If (String.Equals(Me._OLDEH, value) = false) Then
					Me.OnOLDEHChanging(value)
					Me.SendPropertyChanging
					Me._OLDEH = value
					Me.SendPropertyChanged("OLDEH")
					Me.OnOLDEHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLAFM", DbType:="VarChar(15)")>  _
		Public Property OLAFM() As String
			Get
				Return Me._OLAFM
			End Get
			Set
				If (String.Equals(Me._OLAFM, value) = false) Then
					Me.OnOLAFMChanging(value)
					Me.SendPropertyChanging
					Me._OLAFM = value
					Me.SendPropertyChanged("OLAFM")
					Me.OnOLAFMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISPROSP", DbType:="SmallInt NOT NULL")>  _
		Public Property ISPROSP() As Short
			Get
				Return Me._ISPROSP
			End Get
			Set
				If ((Me._ISPROSP = value)  _
							= false) Then
					Me.OnISPROSPChanging(value)
					Me.SendPropertyChanging
					Me._ISPROSP = value
					Me.SendPropertyChanged("ISPROSP")
					Me.OnISPROSPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCMPT", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCMPT() As Short
			Get
				Return Me._ISCMPT
			End Get
			Set
				If ((Me._ISCMPT = value)  _
							= false) Then
					Me.OnISCMPTChanging(value)
					Me.SendPropertyChanging
					Me._ISCMPT = value
					Me.SendPropertyChanged("ISCMPT")
					Me.OnISCMPTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt")>  _
		Public Property COUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._COUNTRY
			End Get
			Set
				If (Me._COUNTRY.Equals(value) = false) Then
					Me.OnCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._COUNTRY = value
					Me.SendPropertyChanged("COUNTRY")
					Me.OnCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me.OnSOCURRENCYChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCY = value
					Me.SendPropertyChanged("SOCURRENCY")
					Me.OnSOCURRENCYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt")>  _
		Public Property BRANCH() As System.Nullable(Of Short)
			Get
				Return Me._BRANCH
			End Get
			Set
				If (Me._BRANCH.Equals(value) = false) Then
					Me.OnBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BRANCH = value
					Me.SendPropertyChanged("BRANCH")
					Me.OnBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(100)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me.OnADDRESSChanging(value)
					Me.SendPropertyChanging
					Me._ADDRESS = value
					Me.SendPropertyChanged("ADDRESS")
					Me.OnADDRESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)")>  _
		Public Property ZIP() As String
			Get
				Return Me._ZIP
			End Get
			Set
				If (String.Equals(Me._ZIP, value) = false) Then
					Me.OnZIPChanging(value)
					Me.SendPropertyChanging
					Me._ZIP = value
					Me.SendPropertyChanged("ZIP")
					Me.OnZIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="VarChar(30)")>  _
		Public Property DISTRICT() As String
			Get
				Return Me._DISTRICT
			End Get
			Set
				If (String.Equals(Me._DISTRICT, value) = false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me.OnCITYChanging(value)
					Me.SendPropertyChanging
					Me._CITY = value
					Me.SendPropertyChanged("CITY")
					Me.OnCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me.OnDISTRICT1Changing(value)
					Me.SendPropertyChanging
					Me._DISTRICT1 = value
					Me.SendPropertyChanged("DISTRICT1")
					Me.OnDISTRICT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREAS", DbType:="SmallInt")>  _
		Public Property AREAS() As System.Nullable(Of Short)
			Get
				Return Me._AREAS
			End Get
			Set
				If (Me._AREAS.Equals(value) = false) Then
					Me.OnAREASChanging(value)
					Me.SendPropertyChanging
					Me._AREAS = value
					Me.SendPropertyChanged("AREAS")
					Me.OnAREASChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE01", DbType:="VarChar(20)")>  _
		Public Property PHONE01() As String
			Get
				Return Me._PHONE01
			End Get
			Set
				If (String.Equals(Me._PHONE01, value) = false) Then
					Me.OnPHONE01Changing(value)
					Me.SendPropertyChanging
					Me._PHONE01 = value
					Me.SendPropertyChanged("PHONE01")
					Me.OnPHONE01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE02", DbType:="VarChar(20)")>  _
		Public Property PHONE02() As String
			Get
				Return Me._PHONE02
			End Get
			Set
				If (String.Equals(Me._PHONE02, value) = false) Then
					Me.OnPHONE02Changing(value)
					Me.SendPropertyChanging
					Me._PHONE02 = value
					Me.SendPropertyChanged("PHONE02")
					Me.OnPHONE02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="VarChar(20)")>  _
		Public Property FAX() As String
			Get
				Return Me._FAX
			End Get
			Set
				If (String.Equals(Me._FAX, value) = false) Then
					Me.OnFAXChanging(value)
					Me.SendPropertyChanging
					Me._FAX = value
					Me.SendPropertyChanged("FAX")
					Me.OnFAXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOBTYPE", DbType:="SmallInt")>  _
		Public Property JOBTYPE() As System.Nullable(Of Short)
			Get
				Return Me._JOBTYPE
			End Get
			Set
				If (Me._JOBTYPE.Equals(value) = false) Then
					Me.OnJOBTYPEChanging(value)
					Me.SendPropertyChanging
					Me._JOBTYPE = value
					Me.SendPropertyChanged("JOBTYPE")
					Me.OnJOBTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOBTYPETRD", DbType:="VarChar(64)")>  _
		Public Property JOBTYPETRD() As String
			Get
				Return Me._JOBTYPETRD
			End Get
			Set
				If (String.Equals(Me._JOBTYPETRD, value) = false) Then
					Me.OnJOBTYPETRDChanging(value)
					Me.SendPropertyChanging
					Me._JOBTYPETRD = value
					Me.SendPropertyChanged("JOBTYPETRD")
					Me.OnJOBTYPETRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDGROUP", DbType:="Int")>  _
		Public Property TRDGROUP() As System.Nullable(Of Integer)
			Get
				Return Me._TRDGROUP
			End Get
			Set
				If (Me._TRDGROUP.Equals(value) = false) Then
					Me.OnTRDGROUPChanging(value)
					Me.SendPropertyChanging
					Me._TRDGROUP = value
					Me.SendPropertyChanged("TRDGROUP")
					Me.OnTRDGROUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDPGROUP", DbType:="SmallInt")>  _
		Public Property TRDPGROUP() As System.Nullable(Of Short)
			Get
				Return Me._TRDPGROUP
			End Get
			Set
				If (Me._TRDPGROUP.Equals(value) = false) Then
					Me.OnTRDPGROUPChanging(value)
					Me.SendPropertyChanging
					Me._TRDPGROUP = value
					Me.SendPropertyChanged("TRDPGROUP")
					Me.OnTRDPGROUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEBPAGE", DbType:="VarChar(64)")>  _
		Public Property WEBPAGE() As String
			Get
				Return Me._WEBPAGE
			End Get
			Set
				If (String.Equals(Me._WEBPAGE, value) = false) Then
					Me.OnWEBPAGEChanging(value)
					Me.SendPropertyChanging
					Me._WEBPAGE = value
					Me.SendPropertyChanged("WEBPAGE")
					Me.OnWEBPAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="VarChar(64)")>  _
		Public Property EMAIL() As String
			Get
				Return Me._EMAIL
			End Get
			Set
				If (String.Equals(Me._EMAIL, value) = false) Then
					Me.OnEMAILChanging(value)
					Me.SendPropertyChanging
					Me._EMAIL = value
					Me.SendPropertyChanged("EMAIL")
					Me.OnEMAILChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILACC", DbType:="VarChar(64)")>  _
		Public Property EMAILACC() As String
			Get
				Return Me._EMAILACC
			End Get
			Set
				If (String.Equals(Me._EMAILACC, value) = false) Then
					Me.OnEMAILACCChanging(value)
					Me.SendPropertyChanging
					Me._EMAILACC = value
					Me.SendPropertyChanged("EMAILACC")
					Me.OnEMAILACCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDCATEGORY", DbType:="SmallInt")>  _
		Public Property TRDCATEGORY() As System.Nullable(Of Short)
			Get
				Return Me._TRDCATEGORY
			End Get
			Set
				If (Me._TRDCATEGORY.Equals(value) = false) Then
					Me.OnTRDCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._TRDCATEGORY = value
					Me.SendPropertyChanged("TRDCATEGORY")
					Me.OnTRDCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBUSINESS", DbType:="SmallInt")>  _
		Public Property TRDBUSINESS() As System.Nullable(Of Short)
			Get
				Return Me._TRDBUSINESS
			End Get
			Set
				If (Me._TRDBUSINESS.Equals(value) = false) Then
					Me.OnTRDBUSINESSChanging(value)
					Me.SendPropertyChanging
					Me._TRDBUSINESS = value
					Me.SendPropertyChanged("TRDBUSINESS")
					Me.OnTRDBUSINESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPMENT", DbType:="SmallInt")>  _
		Public Property SHIPMENT() As System.Nullable(Of Short)
			Get
				Return Me._SHIPMENT
			End Get
			Set
				If (Me._SHIPMENT.Equals(value) = false) Then
					Me.OnSHIPMENTChanging(value)
					Me.SendPropertyChanging
					Me._SHIPMENT = value
					Me.SendPropertyChanged("SHIPMENT")
					Me.OnSHIPMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT", DbType:="SmallInt")>  _
		Public Property PAYMENT() As System.Nullable(Of Short)
			Get
				Return Me._PAYMENT
			End Get
			Set
				If (Me._PAYMENT.Equals(value) = false) Then
					Me.OnPAYMENTChanging(value)
					Me.SendPropertyChanging
					Me._PAYMENT = value
					Me.SendPropertyChanged("PAYMENT")
					Me.OnPAYMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCCATEGORY", DbType:="SmallInt")>  _
		Public Property PRCCATEGORY() As System.Nullable(Of Short)
			Get
				Return Me._PRCCATEGORY
			End Get
			Set
				If (Me._PRCCATEGORY.Equals(value) = false) Then
					Me.OnPRCCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._PRCCATEGORY = value
					Me.SendPropertyChanged("PRCCATEGORY")
					Me.OnPRCCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMISION", DbType:="SmallInt")>  _
		Public Property COMMISION() As System.Nullable(Of Short)
			Get
				Return Me._COMMISION
			End Get
			Set
				If (Me._COMMISION.Equals(value) = false) Then
					Me.OnCOMMISIONChanging(value)
					Me.SendPropertyChanging
					Me._COMMISION = value
					Me.SendPropertyChanged("COMMISION")
					Me.OnCOMMISIONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIORITY", DbType:="SmallInt")>  _
		Public Property PRIORITY() As System.Nullable(Of Short)
			Get
				Return Me._PRIORITY
			End Get
			Set
				If (Me._PRIORITY.Equals(value) = false) Then
					Me.OnPRIORITYChanging(value)
					Me.SendPropertyChanging
					Me._PRIORITY = value
					Me.SendPropertyChanged("PRIORITY")
					Me.OnPRIORITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCPOLICY", DbType:="SmallInt")>  _
		Public Property PRCPOLICY() As System.Nullable(Of Short)
			Get
				Return Me._PRCPOLICY
			End Get
			Set
				If (Me._PRCPOLICY.Equals(value) = false) Then
					Me.OnPRCPOLICYChanging(value)
					Me.SendPropertyChanging
					Me._PRCPOLICY = value
					Me.SendPropertyChanged("PRCPOLICY")
					Me.OnPRCPOLICYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DSCPOLICY", DbType:="SmallInt")>  _
		Public Property DSCPOLICY() As System.Nullable(Of Short)
			Get
				Return Me._DSCPOLICY
			End Get
			Set
				If (Me._DSCPOLICY.Equals(value) = false) Then
					Me.OnDSCPOLICYChanging(value)
					Me.SendPropertyChanging
					Me._DSCPOLICY = value
					Me.SendPropertyChanged("DSCPOLICY")
					Me.OnDSCPOLICYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISVALCREDIT", DbType:="SmallInt")>  _
		Public Property ISVALCREDIT() As System.Nullable(Of Short)
			Get
				Return Me._ISVALCREDIT
			End Get
			Set
				If (Me._ISVALCREDIT.Equals(value) = false) Then
					Me.OnISVALCREDITChanging(value)
					Me.SendPropertyChanging
					Me._ISVALCREDIT = value
					Me.SendPropertyChanged("ISVALCREDIT")
					Me.OnISVALCREDITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt")>  _
		Public Property SOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If (Me._SOCARRIER.Equals(value) = false) Then
					Me.OnSOCARRIERChanging(value)
					Me.SendPropertyChanging
					Me._SOCARRIER = value
					Me.SendPropertyChanged("SOCARRIER")
					Me.OnSOCARRIERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUCKS", DbType:="SmallInt")>  _
		Public Property TRUCKS() As System.Nullable(Of Short)
			Get
				Return Me._TRUCKS
			End Get
			Set
				If (Me._TRUCKS.Equals(value) = false) Then
					Me.OnTRUCKSChanging(value)
					Me.SendPropertyChanging
					Me._TRUCKS = value
					Me.SendPropertyChanged("TRUCKS")
					Me.OnTRUCKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUTING", DbType:="SmallInt")>  _
		Public Property ROUTING() As System.Nullable(Of Short)
			Get
				Return Me._ROUTING
			End Get
			Set
				If (Me._ROUTING.Equals(value) = false) Then
					Me.OnROUTINGChanging(value)
					Me.SendPropertyChanging
					Me._ROUTING = value
					Me.SendPropertyChanged("ROUTING")
					Me.OnROUTINGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					If Me._PRSN1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSALESMANChanging(value)
					Me.SendPropertyChanging
					Me._SALESMAN = value
					Me.SendPropertyChanged("SALESMAN")
					Me.OnSALESMANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLLECTOR", DbType:="Int")>  _
		Public Property COLLECTOR() As System.Nullable(Of Integer)
			Get
				Return Me._COLLECTOR
			End Get
			Set
				If (Me._COLLECTOR.Equals(value) = false) Then
					If Me._PRSN.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOLLECTORChanging(value)
					Me.SendPropertyChanging
					Me._COLLECTOR = value
					Me.SendPropertyChanged("COLLECTOR")
					Me.OnCOLLECTORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE1", DbType:="VarChar(25)")>  _
		Public Property CODE1() As String
			Get
				Return Me._CODE1
			End Get
			Set
				If (String.Equals(Me._CODE1, value) = false) Then
					Me.OnCODE1Changing(value)
					Me.SendPropertyChanging
					Me._CODE1 = value
					Me.SendPropertyChanged("CODE1")
					Me.OnCODE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IRSDATA", DbType:="VarChar(128)")>  _
		Public Property IRSDATA() As String
			Get
				Return Me._IRSDATA
			End Get
			Set
				If (String.Equals(Me._IRSDATA, value) = false) Then
					Me.OnIRSDATAChanging(value)
					Me.SendPropertyChanging
					Me._IRSDATA = value
					Me.SendPropertyChanged("IRSDATA")
					Me.OnIRSDATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATSTS", DbType:="SmallInt NOT NULL")>  _
		Public Property VATSTS() As Short
			Get
				Return Me._VATSTS
			End Get
			Set
				If ((Me._VATSTS = value)  _
							= false) Then
					Me.OnVATSTSChanging(value)
					Me.SendPropertyChanging
					Me._VATSTS = value
					Me.SendPropertyChanged("VATSTS")
					Me.OnVATSTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPROVISIONS", DbType:="SmallInt")>  _
		Public Property VATPROVISIONS() As System.Nullable(Of Short)
			Get
				Return Me._VATPROVISIONS
			End Get
			Set
				If (Me._VATPROVISIONS.Equals(value) = false) Then
					Me.OnVATPROVISIONSChanging(value)
					Me.SendPropertyChanging
					Me._VATPROVISIONS = value
					Me.SendPropertyChanged("VATPROVISIONS")
					Me.OnVATPROVISIONSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIPTCARD", DbType:="VarChar(25)")>  _
		Public Property RECEIPTCARD() As String
			Get
				Return Me._RECEIPTCARD
			End Get
			Set
				If (String.Equals(Me._RECEIPTCARD, value) = false) Then
					Me.OnRECEIPTCARDChanging(value)
					Me.SendPropertyChanging
					Me._RECEIPTCARD = value
					Me.SendPropertyChanged("RECEIPTCARD")
					Me.OnRECEIPTCARDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEPYOSTS", DbType:="SmallInt NOT NULL")>  _
		Public Property KEPYOSTS() As Short
			Get
				Return Me._KEPYOSTS
			End Get
			Set
				If ((Me._KEPYOSTS = value)  _
							= false) Then
					Me.OnKEPYOSTSChanging(value)
					Me.SendPropertyChanging
					Me._KEPYOSTS = value
					Me.SendPropertyChanged("KEPYOSTS")
					Me.OnKEPYOSTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEPYOMD", DbType:="SmallInt NOT NULL")>  _
		Public Property KEPYOMD() As Short
			Get
				Return Me._KEPYOMD
			End Get
			Set
				If ((Me._KEPYOMD = value)  _
							= false) Then
					Me.OnKEPYOMDChanging(value)
					Me.SendPropertyChanging
					Me._KEPYOMD = value
					Me.SendPropertyChanged("KEPYOMD")
					Me.OnKEPYOMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISMD", DbType:="SmallInt NOT NULL")>  _
		Public Property GSISMD() As Short
			Get
				Return Me._GSISMD
			End Get
			Set
				If ((Me._GSISMD = value)  _
							= false) Then
					Me.OnGSISMDChanging(value)
					Me.SendPropertyChanging
					Me._GSISMD = value
					Me.SendPropertyChanged("GSISMD")
					Me.OnGSISMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMPMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property CMPMODE() As Short
			Get
				Return Me._CMPMODE
			End Get
			Set
				If ((Me._CMPMODE = value)  _
							= false) Then
					Me.OnCMPMODEChanging(value)
					Me.SendPropertyChanging
					Me._CMPMODE = value
					Me.SendPropertyChanged("CMPMODE")
					Me.OnCMPMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFKFLAG", DbType:="SmallInt NOT NULL")>  _
		Public Property EFKFLAG() As Short
			Get
				Return Me._EFKFLAG
			End Get
			Set
				If ((Me._EFKFLAG = value)  _
							= false) Then
					Me.OnEFKFLAGChanging(value)
					Me.SendPropertyChanging
					Me._EFKFLAG = value
					Me.SendPropertyChanged("EFKFLAG")
					Me.OnEFKFLAGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPITMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property OPITMODE() As Short
			Get
				Return Me._OPITMODE
			End Get
			Set
				If ((Me._OPITMODE = value)  _
							= false) Then
					Me.OnOPITMODEChanging(value)
					Me.SendPropertyChanging
					Me._OPITMODE = value
					Me.SendPropertyChanged("OPITMODE")
					Me.OnOPITMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPITFINDOC", DbType:="SmallInt NOT NULL")>  _
		Public Property OPITFINDOC() As Short
			Get
				Return Me._OPITFINDOC
			End Get
			Set
				If ((Me._OPITFINDOC = value)  _
							= false) Then
					Me.OnOPITFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._OPITFINDOC = value
					Me.SendPropertyChanged("OPITFINDOC")
					Me.OnOPITFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRCONTROL", DbType:="SmallInt")>  _
		Public Property CRCONTROL() As System.Nullable(Of Short)
			Get
				Return Me._CRCONTROL
			End Get
			Set
				If (Me._CRCONTROL.Equals(value) = false) Then
					Me.OnCRCONTROLChanging(value)
					Me.SendPropertyChanging
					Me._CRCONTROL = value
					Me.SendPropertyChanged("CRCONTROL")
					Me.OnCRCONTROLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLINES1", DbType:="SmallInt")>  _
		Public Property CRDLINES1() As System.Nullable(Of Short)
			Get
				Return Me._CRDLINES1
			End Get
			Set
				If (Me._CRDLINES1.Equals(value) = false) Then
					Me.OnCRDLINES1Changing(value)
					Me.SendPropertyChanging
					Me._CRDLINES1 = value
					Me.SendPropertyChanged("CRDLINES1")
					Me.OnCRDLINES1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLIMIT1", DbType:="Float")>  _
		Public Property CRDLIMIT1() As System.Nullable(Of Double)
			Get
				Return Me._CRDLIMIT1
			End Get
			Set
				If (Me._CRDLIMIT1.Equals(value) = false) Then
					Me.OnCRDLIMIT1Changing(value)
					Me.SendPropertyChanging
					Me._CRDLIMIT1 = value
					Me.SendPropertyChanged("CRDLIMIT1")
					Me.OnCRDLIMIT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLINES2", DbType:="SmallInt")>  _
		Public Property CRDLINES2() As System.Nullable(Of Short)
			Get
				Return Me._CRDLINES2
			End Get
			Set
				If (Me._CRDLINES2.Equals(value) = false) Then
					Me.OnCRDLINES2Changing(value)
					Me.SendPropertyChanging
					Me._CRDLINES2 = value
					Me.SendPropertyChanged("CRDLINES2")
					Me.OnCRDLINES2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLIMIT2", DbType:="Float")>  _
		Public Property CRDLIMIT2() As System.Nullable(Of Double)
			Get
				Return Me._CRDLIMIT2
			End Get
			Set
				If (Me._CRDLIMIT2.Equals(value) = false) Then
					Me.OnCRDLIMIT2Changing(value)
					Me.SendPropertyChanging
					Me._CRDLIMIT2 = value
					Me.SendPropertyChanged("CRDLIMIT2")
					Me.OnCRDLIMIT2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLINES3", DbType:="SmallInt")>  _
		Public Property CRDLINES3() As System.Nullable(Of Short)
			Get
				Return Me._CRDLINES3
			End Get
			Set
				If (Me._CRDLINES3.Equals(value) = false) Then
					Me.OnCRDLINES3Changing(value)
					Me.SendPropertyChanging
					Me._CRDLINES3 = value
					Me.SendPropertyChanged("CRDLINES3")
					Me.OnCRDLINES3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLIMIT3", DbType:="Float")>  _
		Public Property CRDLIMIT3() As System.Nullable(Of Double)
			Get
				Return Me._CRDLIMIT3
			End Get
			Set
				If (Me._CRDLIMIT3.Equals(value) = false) Then
					Me.OnCRDLIMIT3Changing(value)
					Me.SendPropertyChanging
					Me._CRDLIMIT3 = value
					Me.SendPropertyChanged("CRDLIMIT3")
					Me.OnCRDLIMIT3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLINES4", DbType:="SmallInt")>  _
		Public Property CRDLINES4() As System.Nullable(Of Short)
			Get
				Return Me._CRDLINES4
			End Get
			Set
				If (Me._CRDLINES4.Equals(value) = false) Then
					Me.OnCRDLINES4Changing(value)
					Me.SendPropertyChanging
					Me._CRDLINES4 = value
					Me.SendPropertyChanged("CRDLINES4")
					Me.OnCRDLINES4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLIMIT4", DbType:="Float")>  _
		Public Property CRDLIMIT4() As System.Nullable(Of Double)
			Get
				Return Me._CRDLIMIT4
			End Get
			Set
				If (Me._CRDLIMIT4.Equals(value) = false) Then
					Me.OnCRDLIMIT4Changing(value)
					Me.SendPropertyChanging
					Me._CRDLIMIT4 = value
					Me.SendPropertyChanged("CRDLIMIT4")
					Me.OnCRDLIMIT4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLINES5", DbType:="SmallInt")>  _
		Public Property CRDLINES5() As System.Nullable(Of Short)
			Get
				Return Me._CRDLINES5
			End Get
			Set
				If (Me._CRDLINES5.Equals(value) = false) Then
					Me.OnCRDLINES5Changing(value)
					Me.SendPropertyChanging
					Me._CRDLINES5 = value
					Me.SendPropertyChanged("CRDLINES5")
					Me.OnCRDLINES5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDLIMIT5", DbType:="Float")>  _
		Public Property CRDLIMIT5() As System.Nullable(Of Double)
			Get
				Return Me._CRDLIMIT5
			End Get
			Set
				If (Me._CRDLIMIT5.Equals(value) = false) Then
					Me.OnCRDLIMIT5Changing(value)
					Me.SendPropertyChanging
					Me._CRDLIMIT5 = value
					Me.SendPropertyChanged("CRDLIMIT5")
					Me.OnCRDLIMIT5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT", DbType:="Float")>  _
		Public Property DISCOUNT() As System.Nullable(Of Double)
			Get
				Return Me._DISCOUNT
			End Get
			Set
				If (Me._DISCOUNT.Equals(value) = false) Then
					Me.OnDISCOUNTChanging(value)
					Me.SendPropertyChanging
					Me._DISCOUNT = value
					Me.SendPropertyChanged("DISCOUNT")
					Me.OnDISCOUNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAXPRCDISC", DbType:="Float")>  _
		Public Property MAXPRCDISC() As System.Nullable(Of Double)
			Get
				Return Me._MAXPRCDISC
			End Get
			Set
				If (Me._MAXPRCDISC.Equals(value) = false) Then
					Me.OnMAXPRCDISCChanging(value)
					Me.SendPropertyChanging
					Me._MAXPRCDISC = value
					Me.SendPropertyChanged("MAXPRCDISC")
					Me.OnMAXPRCDISCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHKMAXPRCDISC", DbType:="SmallInt NOT NULL")>  _
		Public Property CHKMAXPRCDISC() As Short
			Get
				Return Me._CHKMAXPRCDISC
			End Get
			Set
				If ((Me._CHKMAXPRCDISC = value)  _
							= false) Then
					Me.OnCHKMAXPRCDISCChanging(value)
					Me.SendPropertyChanging
					Me._CHKMAXPRCDISC = value
					Me.SendPropertyChanged("CHKMAXPRCDISC")
					Me.OnCHKMAXPRCDISCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYHFROM", DbType:="DateTime")>  _
		Public Property PAYHFROM() As System.Nullable(Of Date)
			Get
				Return Me._PAYHFROM
			End Get
			Set
				If (Me._PAYHFROM.Equals(value) = false) Then
					Me.OnPAYHFROMChanging(value)
					Me.SendPropertyChanging
					Me._PAYHFROM = value
					Me.SendPropertyChanged("PAYHFROM")
					Me.OnPAYHFROMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYHTO", DbType:="DateTime")>  _
		Public Property PAYHTO() As System.Nullable(Of Date)
			Get
				Return Me._PAYHTO
			End Get
			Set
				If (Me._PAYHTO.Equals(value) = false) Then
					Me.OnPAYHTOChanging(value)
					Me.SendPropertyChanging
					Me._PAYHTO = value
					Me.SendPropertyChanged("PAYHTO")
					Me.OnPAYHTOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYEVERY", DbType:="SmallInt")>  _
		Public Property PAYEVERY() As System.Nullable(Of Short)
			Get
				Return Me._PAYEVERY
			End Get
			Set
				If (Me._PAYEVERY.Equals(value) = false) Then
					Me.OnPAYEVERYChanging(value)
					Me.SendPropertyChanging
					Me._PAYEVERY = value
					Me.SendPropertyChanged("PAYEVERY")
					Me.OnPAYEVERYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYDAY", DbType:="SmallInt")>  _
		Public Property PAYDAY() As System.Nullable(Of Short)
			Get
				Return Me._PAYDAY
			End Get
			Set
				If (Me._PAYDAY.Equals(value) = false) Then
					Me.OnPAYDAYChanging(value)
					Me.SendPropertyChanging
					Me._PAYDAY = value
					Me.SendPropertyChanged("PAYDAY")
					Me.OnPAYDAYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYWEEK", DbType:="SmallInt")>  _
		Public Property PAYWEEK() As System.Nullable(Of Short)
			Get
				Return Me._PAYWEEK
			End Get
			Set
				If (Me._PAYWEEK.Equals(value) = false) Then
					Me.OnPAYWEEKChanging(value)
					Me.SendPropertyChanging
					Me._PAYWEEK = value
					Me.SendPropertyChanged("PAYWEEK")
					Me.OnPAYWEEKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VISITEVERY", DbType:="VarChar(15)")>  _
		Public Property VISITEVERY() As String
			Get
				Return Me._VISITEVERY
			End Get
			Set
				If (String.Equals(Me._VISITEVERY, value) = false) Then
					Me.OnVISITEVERYChanging(value)
					Me.SendPropertyChanging
					Me._VISITEVERY = value
					Me.SendPropertyChanged("VISITEVERY")
					Me.OnVISITEVERYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING", DbType:="VarChar(250)")>  _
		Public Property WARNING() As String
			Get
				Return Me._WARNING
			End Get
			Set
				If (String.Equals(Me._WARNING, value) = false) Then
					Me.OnWARNINGChanging(value)
					Me.SendPropertyChanging
					Me._WARNING = value
					Me.SendPropertyChanged("WARNING")
					Me.OnWARNINGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPGROUP", DbType:="SmallInt")>  _
		Public Property EXPGROUP() As System.Nullable(Of Short)
			Get
				Return Me._EXPGROUP
			End Get
			Set
				If (Me._EXPGROUP.Equals(value) = false) Then
					Me.OnEXPGROUPChanging(value)
					Me.SendPropertyChanging
					Me._EXPGROUP = value
					Me.SendPropertyChanged("EXPGROUP")
					Me.OnEXPGROUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GASCUSTYPE", DbType:="SmallInt")>  _
		Public Property GASCUSTYPE() As System.Nullable(Of Short)
			Get
				Return Me._GASCUSTYPE
			End Get
			Set
				If (Me._GASCUSTYPE.Equals(value) = false) Then
					Me.OnGASCUSTYPEChanging(value)
					Me.SendPropertyChanging
					Me._GASCUSTYPE = value
					Me.SendPropertyChanged("GASCUSTYPE")
					Me.OnGASCUSTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSCORE", DbType:="Int")>  _
		Public Property SOSCORE() As System.Nullable(Of Integer)
			Get
				Return Me._SOSCORE
			End Get
			Set
				If (Me._SOSCORE.Equals(value) = false) Then
					Me.OnSOSCOREChanging(value)
					Me.SendPropertyChanging
					Me._SOSCORE = value
					Me.SendPropertyChanged("SOSCORE")
					Me.OnSOSCOREChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK", DbType:="Int")>  _
		Public Property BANK() As System.Nullable(Of Integer)
			Get
				Return Me._BANK
			End Get
			Set
				If (Me._BANK.Equals(value) = false) Then
					Me.OnBANKChanging(value)
					Me.SendPropertyChanging
					Me._BANK = value
					Me.SendPropertyChanged("BANK")
					Me.OnBANKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKBRANCH", DbType:="Int")>  _
		Public Property BANKBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._BANKBRANCH
			End Get
			Set
				If (Me._BANKBRANCH.Equals(value) = false) Then
					Me.OnBANKBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BANKBRANCH = value
					Me.SendPropertyChanged("BANKBRANCH")
					Me.OnBANKBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKACCNUMBER", DbType:="VarChar(50)")>  _
		Public Property BANKACCNUMBER() As String
			Get
				Return Me._BANKACCNUMBER
			End Get
			Set
				If (String.Equals(Me._BANKACCNUMBER, value) = false) Then
					Me.OnBANKACCNUMBERChanging(value)
					Me.SendPropertyChanging
					Me._BANKACCNUMBER = value
					Me.SendPropertyChanged("BANKACCNUMBER")
					Me.OnBANKACCNUMBERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKRATE1", DbType:="Float")>  _
		Public Property BANKRATE1() As System.Nullable(Of Double)
			Get
				Return Me._BANKRATE1
			End Get
			Set
				If (Me._BANKRATE1.Equals(value) = false) Then
					Me.OnBANKRATE1Changing(value)
					Me.SendPropertyChanging
					Me._BANKRATE1 = value
					Me.SendPropertyChanged("BANKRATE1")
					Me.OnBANKRATE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKRATE2", DbType:="Float")>  _
		Public Property BANKRATE2() As System.Nullable(Of Double)
			Get
				Return Me._BANKRATE2
			End Get
			Set
				If (Me._BANKRATE2.Equals(value) = false) Then
					Me.OnBANKRATE2Changing(value)
					Me.SendPropertyChanging
					Me._BANKRATE2 = value
					Me.SendPropertyChanged("BANKRATE2")
					Me.OnBANKRATE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK1", DbType:="VarChar(25)")>  _
		Public Property ACNMSK1() As String
			Get
				Return Me._ACNMSK1
			End Get
			Set
				If (String.Equals(Me._ACNMSK1, value) = false) Then
					Me.OnACNMSK1Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK1 = value
					Me.SendPropertyChanged("ACNMSK1")
					Me.OnACNMSK1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKS", DbType:="VarChar(25)")>  _
		Public Property ACNMSKS() As String
			Get
				Return Me._ACNMSKS
			End Get
			Set
				If (String.Equals(Me._ACNMSKS, value) = false) Then
					Me.OnACNMSKSChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKS = value
					Me.SendPropertyChanged("ACNMSKS")
					Me.OnACNMSKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKX", DbType:="VarChar(25)")>  _
		Public Property ACNMSKX() As String
			Get
				Return Me._ACNMSKX
			End Get
			Set
				If (String.Equals(Me._ACNMSKX, value) = false) Then
					Me.OnACNMSKXChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKX = value
					Me.SendPropertyChanged("ACNMSKX")
					Me.OnACNMSKXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANCTYPE", DbType:="SmallInt")>  _
		Public Property BANCTYPE() As System.Nullable(Of Short)
			Get
				Return Me._BANCTYPE
			End Get
			Set
				If (Me._BANCTYPE.Equals(value) = false) Then
					Me.OnBANCTYPEChanging(value)
					Me.SendPropertyChanging
					Me._BANCTYPE = value
					Me.SendPropertyChanged("BANCTYPE")
					Me.OnBANCTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINBAL", DbType:="Float")>  _
		Public Property MINBAL() As System.Nullable(Of Double)
			Get
				Return Me._MINBAL
			End Get
			Set
				If (Me._MINBAL.Equals(value) = false) Then
					Me.OnMINBALChanging(value)
					Me.SendPropertyChanging
					Me._MINBAL = value
					Me.SendPropertyChanged("MINBAL")
					Me.OnMINBALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAXBAL", DbType:="Float")>  _
		Public Property MAXBAL() As System.Nullable(Of Double)
			Get
				Return Me._MAXBAL
			End Get
			Set
				If (Me._MAXBAL.Equals(value) = false) Then
					Me.OnMAXBALChanging(value)
					Me.SendPropertyChanging
					Me._MAXBAL = value
					Me.SendPropertyChanged("MAXBAL")
					Me.OnMAXBALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IBAN", DbType:="VarChar(34)")>  _
		Public Property IBAN() As String
			Get
				Return Me._IBAN
			End Get
			Set
				If (String.Equals(Me._IBAN, value) = false) Then
					Me.OnIBANChanging(value)
					Me.SendPropertyChanging
					Me._IBAN = value
					Me.SendPropertyChanged("IBAN")
					Me.OnIBANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SWIFT", DbType:="VarChar(34)")>  _
		Public Property SWIFT() As String
			Get
				Return Me._SWIFT
			End Get
			Set
				If (String.Equals(Me._SWIFT, value) = false) Then
					Me.OnSWIFTChanging(value)
					Me.SendPropertyChanging
					Me._SWIFT = value
					Me.SendPropertyChanged("SWIFT")
					Me.OnSWIFTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCCHAR", DbType:="VarChar(4)")>  _
		Public Property SPCCHAR() As String
			Get
				Return Me._SPCCHAR
			End Get
			Set
				If (String.Equals(Me._SPCCHAR, value) = false) Then
					Me.OnSPCCHARChanging(value)
					Me.SendPropertyChanging
					Me._SPCCHAR = value
					Me.SendPropertyChanged("SPCCHAR")
					Me.OnSPCCHARChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODELINEMD", DbType:="SmallInt NOT NULL")>  _
		Public Property CODELINEMD() As Short
			Get
				Return Me._CODELINEMD
			End Get
			Set
				If ((Me._CODELINEMD = value)  _
							= false) Then
					Me.OnCODELINEMDChanging(value)
					Me.SendPropertyChanging
					Me._CODELINEMD = value
					Me.SendPropertyChanged("CODELINEMD")
					Me.OnCODELINEMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDTYPE1", DbType:="SmallInt NOT NULL")>  _
		Public Property TRDTYPE1() As Short
			Get
				Return Me._TRDTYPE1
			End Get
			Set
				If ((Me._TRDTYPE1 = value)  _
							= false) Then
					Me.OnTRDTYPE1Changing(value)
					Me.SendPropertyChanging
					Me._TRDTYPE1 = value
					Me.SendPropertyChanged("TRDTYPE1")
					Me.OnTRDTYPE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJCS", DbType:="Int")>  _
		Public Property PRJCS() As System.Nullable(Of Integer)
			Get
				Return Me._PRJCS
			End Get
			Set
				If (Me._PRJCS.Equals(value) = false) Then
					Me.OnPRJCSChanging(value)
					Me.SendPropertyChanging
					Me._PRJCS = value
					Me.SendPropertyChanged("PRJCS")
					Me.OnPRJCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCONTRACTOR", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCONTRACTOR() As Short
			Get
				Return Me._ISCONTRACTOR
			End Get
			Set
				If ((Me._ISCONTRACTOR = value)  _
							= false) Then
					Me.OnISCONTRACTORChanging(value)
					Me.SendPropertyChanging
					Me._ISCONTRACTOR = value
					Me.SendPropertyChanged("ISCONTRACTOR")
					Me.OnISCONTRACTORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCOST", DbType:="SmallInt")>  _
		Public Property SPCOST() As System.Nullable(Of Short)
			Get
				Return Me._SPCOST
			End Get
			Set
				If (Me._SPCOST.Equals(value) = false) Then
					Me.OnSPCOSTChanging(value)
					Me.SendPropertyChanging
					Me._SPCOST = value
					Me.SendPropertyChanged("SPCOST")
					Me.OnSPCOSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONWHOUSE", DbType:="SmallInt")>  _
		Public Property CONWHOUSE() As System.Nullable(Of Short)
			Get
				Return Me._CONWHOUSE
			End Get
			Set
				If (Me._CONWHOUSE.Equals(value) = false) Then
					Me.OnCONWHOUSEChanging(value)
					Me.SendPropertyChanging
					Me._CONWHOUSE = value
					Me.SendPropertyChanged("CONWHOUSE")
					Me.OnCONWHOUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGBULSTAT", DbType:="VarChar(20)")>  _
		Public Property BGBULSTAT() As String
			Get
				Return Me._BGBULSTAT
			End Get
			Set
				If (String.Equals(Me._BGBULSTAT, value) = false) Then
					Me.OnBGBULSTATChanging(value)
					Me.SendPropertyChanging
					Me._BGBULSTAT = value
					Me.SendPropertyChanged("BGBULSTAT")
					Me.OnBGBULSTATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(2000)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ECOLLABORATION", DbType:="SmallInt")>  _
		Public Property ECOLLABORATION() As System.Nullable(Of Short)
			Get
				Return Me._ECOLLABORATION
			End Get
			Set
				If (Me._ECOLLABORATION.Equals(value) = false) Then
					Me.OnECOLLABORATIONChanging(value)
					Me.SendPropertyChanging
					Me._ECOLLABORATION = value
					Me.SendPropertyChanged("ECOLLABORATION")
					Me.OnECOLLABORATIONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WASTETYPE", DbType:="VarChar(2)")>  _
		Public Property WASTETYPE() As String
			Get
				Return Me._WASTETYPE
			End Get
			Set
				If (String.Equals(Me._WASTETYPE, value) = false) Then
					Me.OnWASTETYPEChanging(value)
					Me.SendPropertyChanging
					Me._WASTETYPE = value
					Me.SendPropertyChanged("WASTETYPE")
					Me.OnWASTETYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_S1INVMD", DbType:="SmallInt")>  _
		Public Property S1INVMD() As System.Nullable(Of Short)
			Get
				Return Me._S1INVMD
			End Get
			Set
				If (Me._S1INVMD.Equals(value) = false) Then
					Me.OnS1INVMDChanging(value)
					Me.SendPropertyChanging
					Me._S1INVMD = value
					Me.SendPropertyChanged("S1INVMD")
					Me.OnS1INVMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPAYCODE", DbType:="SmallInt")>  _
		Public Property SOPAYCODE() As System.Nullable(Of Short)
			Get
				Return Me._SOPAYCODE
			End Get
			Set
				If (Me._SOPAYCODE.Equals(value) = false) Then
					Me.OnSOPAYCODEChanging(value)
					Me.SendPropertyChanging
					Me._SOPAYCODE = value
					Me.SendPropertyChanged("SOPAYCODE")
					Me.OnSOPAYCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMCG", DbType:="VarChar(24)")>  _
		Public Property NUMCG() As String
			Get
				Return Me._NUMCG
			End Get
			Set
				If (String.Equals(Me._NUMCG, value) = false) Then
					Me.OnNUMCGChanging(value)
					Me.SendPropertyChanging
					Me._NUMCG = value
					Me.SendPropertyChanged("NUMCG")
					Me.OnNUMCGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INPAYVAT", DbType:="SmallInt NOT NULL")>  _
		Public Property INPAYVAT() As Short
			Get
				Return Me._INPAYVAT
			End Get
			Set
				If ((Me._INPAYVAT = value)  _
							= false) Then
					Me.OnINPAYVATChanging(value)
					Me.SendPropertyChanging
					Me._INPAYVAT = value
					Me.SendPropertyChanged("INPAYVAT")
					Me.OnINPAYVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBEARER", DbType:="VarChar(4)")>  _
		Public Property CBEARER() As String
			Get
				Return Me._CBEARER
			End Get
			Set
				If (String.Equals(Me._CBEARER, value) = false) Then
					Me.OnCBEARERChanging(value)
					Me.SendPropertyChanging
					Me._CBEARER = value
					Me.SendPropertyChanged("CBEARER")
					Me.OnCBEARERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELTRDR", DbType:="Int")>  _
		Public Property RELTRDR() As System.Nullable(Of Integer)
			Get
				Return Me._RELTRDR
			End Get
			Set
				If (Me._RELTRDR.Equals(value) = false) Then
					Me.OnRELTRDRChanging(value)
					Me.SendPropertyChanging
					Me._RELTRDR = value
					Me.SendPropertyChanged("RELTRDR")
					Me.OnRELTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSDATE", DbType:="DateTime")>  _
		Public Property CUSDATE() As System.Nullable(Of Date)
			Get
				Return Me._CUSDATE
			End Get
			Set
				If (Me._CUSDATE.Equals(value) = false) Then
					Me.OnCUSDATEChanging(value)
					Me.SendPropertyChanging
					Me._CUSDATE = value
					Me.SendPropertyChanged("CUSDATE")
					Me.OnCUSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSUSER", DbType:="SmallInt")>  _
		Public Property CUSUSER() As System.Nullable(Of Short)
			Get
				Return Me._CUSUSER
			End Get
			Set
				If (Me._CUSUSER.Equals(value) = false) Then
					Me.OnCUSUSERChanging(value)
					Me.SendPropertyChanging
					Me._CUSUSER = value
					Me.SendPropertyChanged("CUSUSER")
					Me.OnCUSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDBRANCH", Storage:="_TRDBRANCHes", ThisKey:="TRDR", OtherKey:="TRDR")>  _
		Public Property TRDBRANCHes() As EntitySet(Of TRDBRANCH)
			Get
				Return Me._TRDBRANCHes
			End Get
			Set
				Me._TRDBRANCHes.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDEXTRA", Storage:="_TRDEXTRA", ThisKey:="TRDR", OtherKey:="TRDR", IsUnique:=true, IsForeignKey:=false)>  _
		Public Property TRDEXTRA() As TRDEXTRA
			Get
				Return Me._TRDEXTRA.Entity
			End Get
			Set
				Dim previousValue As TRDEXTRA = Me._TRDEXTRA.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDEXTRA.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDEXTRA.Entity = Nothing
						previousValue.TRDR1 = Nothing
					End If
					Me._TRDEXTRA.Entity = value
					If (Object.Equals(value, Nothing) = false) Then
						value.TRDR1 = Me
					End If
					Me.SendPropertyChanged("TRDEXTRA")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDFINDATA", Storage:="_TRDFINDATAs", ThisKey:="TRDR", OtherKey:="TRDR")>  _
		Public Property TRDFINDATAs() As EntitySet(Of TRDFINDATA)
			Get
				Return Me._TRDFINDATAs
			End Get
			Set
				Me._TRDFINDATAs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDBALSHEET", Storage:="_TRDBALSHEETs", ThisKey:="TRDR", OtherKey:="TRDR")>  _
		Public Property TRDBALSHEETs() As EntitySet(Of TRDBALSHEET)
			Get
				Return Me._TRDBALSHEETs
			End Get
			Set
				Me._TRDBALSHEETs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDFLINE", Storage:="_TRDFLINEs", ThisKey:="TRDR", OtherKey:="TRDR")>  _
		Public Property TRDFLINEs() As EntitySet(Of TRDFLINE)
			Get
				Return Me._TRDFLINEs
			End Get
			Set
				Me._TRDFLINEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_FINDOC", Storage:="_FINDOCs", ThisKey:="TRDR", OtherKey:="TRDR")>  _
		Public Property FINDOCs() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs
			End Get
			Set
				Me._FINDOCs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_TRDR", Storage:="_PRSN", ThisKey:="COLLECTOR", OtherKey:="PRSN", IsForeignKey:=true)>  _
		Public Property PRSN() As PRSN
			Get
				Return Me._PRSN.Entity
			End Get
			Set
				Dim previousValue As PRSN = Me._PRSN.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PRSN.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PRSN.Entity = Nothing
						previousValue.TRDRs.Remove(Me)
					End If
					Me._PRSN.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDRs.Add(Me)
						Me._COLLECTOR = value.PRSN
					Else
						Me._COLLECTOR = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PRSN")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_TRDR1", Storage:="_PRSN1", ThisKey:="SALESMAN", OtherKey:="PRSN", IsForeignKey:=true)>  _
		Public Property PRSN1() As PRSN
			Get
				Return Me._PRSN1.Entity
			End Get
			Set
				Dim previousValue As PRSN = Me._PRSN1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PRSN1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PRSN1.Entity = Nothing
						previousValue.TRDRs1.Remove(Me)
					End If
					Me._PRSN1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDRs1.Add(Me)
						Me._SALESMAN = value.PRSN
					Else
						Me._SALESMAN = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PRSN1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_TRDBRANCHes(ByVal entity As TRDBRANCH)
			Me.SendPropertyChanging
			entity.TRDR1 = Me
		End Sub
		
		Private Sub detach_TRDBRANCHes(ByVal entity As TRDBRANCH)
			Me.SendPropertyChanging
			entity.TRDR1 = Nothing
		End Sub
		
		Private Sub attach_TRDFINDATAs(ByVal entity As TRDFINDATA)
			Me.SendPropertyChanging
			entity.TRDR1 = Me
		End Sub
		
		Private Sub detach_TRDFINDATAs(ByVal entity As TRDFINDATA)
			Me.SendPropertyChanging
			entity.TRDR1 = Nothing
		End Sub
		
		Private Sub attach_TRDBALSHEETs(ByVal entity As TRDBALSHEET)
			Me.SendPropertyChanging
			entity.TRDR1 = Me
		End Sub
		
		Private Sub detach_TRDBALSHEETs(ByVal entity As TRDBALSHEET)
			Me.SendPropertyChanging
			entity.TRDR1 = Nothing
		End Sub
		
		Private Sub attach_TRDFLINEs(ByVal entity As TRDFLINE)
			Me.SendPropertyChanging
			entity.TRDR1 = Me
		End Sub
		
		Private Sub detach_TRDFLINEs(ByVal entity As TRDFLINE)
			Me.SendPropertyChanging
			entity.TRDR1 = Nothing
		End Sub
		
		Private Sub attach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.TRDR1 = Me
		End Sub
		
		Private Sub detach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.TRDR1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRDBRANCH")>  _
	Partial Public Class TRDBRANCH
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _TRDBRANCH As Integer
		
		Private _TRDR As Integer
		
		Private _SODTYPE As Short
		
		Private _LINENUM As Integer
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
		Private _ISCENTER As System.Nullable(Of Short)
		
		Private _COUNTRY As System.Nullable(Of Short)
		
		Private _IRSDATA As String
		
		Private _VATSTS As Short
		
		Private _VATPROVISIONS As System.Nullable(Of Short)
		
		Private _EFKFLAG As Short
		
		Private _AREAS As System.Nullable(Of Short)
		
		Private _ADDRESS As String
		
		Private _DISTRICT As String
		
		Private _CITY As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _ZIP As String
		
		Private _PHONE1 As String
		
		Private _PHONE2 As String
		
		Private _FAX As String
		
		Private _EMAIL As String
		
		Private _JOBTYPE As System.Nullable(Of Short)
		
		Private _JOBTYPETRD As String
		
		Private _SHIPMENT As System.Nullable(Of Short)
		
		Private _SOCARRIER As System.Nullable(Of Short)
		
		Private _TRUCKS As System.Nullable(Of Short)
		
		Private _ROUTING As System.Nullable(Of Short)
		
		Private _PAYMENT As System.Nullable(Of Short)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _COLLECTOR As System.Nullable(Of Integer)
		
		Private _VISITEVERY As String
		
		Private _EXPGROUP As System.Nullable(Of Short)
		
		Private _ACNMSK As String
		
		Private _BRANCH As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _TRDBUSINESS As System.Nullable(Of Short)
		
		Private _DISCOUNT As System.Nullable(Of Double)
		
		Private _SOSCORE As System.Nullable(Of Integer)
		
		Private _OLDEH As String
		
		Private _OLAFM As String
		
		Private _REMARKS As String
		
		Private _TRDR1 As EntityRef(Of TRDR)
		
		Private _PRSN As EntityRef(Of PRSN)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnLINENUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnLINENUMChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnISCENTERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnISCENTERChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnIRSDATAChanging(value As String)
    End Sub
    Partial Private Sub OnIRSDATAChanged()
    End Sub
    Partial Private Sub OnVATSTSChanging(value As Short)
    End Sub
    Partial Private Sub OnVATSTSChanged()
    End Sub
    Partial Private Sub OnVATPROVISIONSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATPROVISIONSChanged()
    End Sub
    Partial Private Sub OnEFKFLAGChanging(value As Short)
    End Sub
    Partial Private Sub OnEFKFLAGChanged()
    End Sub
    Partial Private Sub OnAREASChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnAREASChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnDISTRICT1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDISTRICT1Changed()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnPHONE1Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE1Changed()
    End Sub
    Partial Private Sub OnPHONE2Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE2Changed()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnJOBTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnJOBTYPEChanged()
    End Sub
    Partial Private Sub OnJOBTYPETRDChanging(value As String)
    End Sub
    Partial Private Sub OnJOBTYPETRDChanged()
    End Sub
    Partial Private Sub OnSHIPMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSHIPMENTChanged()
    End Sub
    Partial Private Sub OnSOCARRIERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCARRIERChanged()
    End Sub
    Partial Private Sub OnTRUCKSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRUCKSChanged()
    End Sub
    Partial Private Sub OnROUTINGChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnROUTINGChanged()
    End Sub
    Partial Private Sub OnPAYMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPAYMENTChanged()
    End Sub
    Partial Private Sub OnSALESMANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALESMANChanged()
    End Sub
    Partial Private Sub OnCOLLECTORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOLLECTORChanged()
    End Sub
    Partial Private Sub OnVISITEVERYChanging(value As String)
    End Sub
    Partial Private Sub OnVISITEVERYChanged()
    End Sub
    Partial Private Sub OnEXPGROUPChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXPGROUPChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnBRANCHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBRANCHChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnTRDBUSINESSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRDBUSINESSChanged()
    End Sub
    Partial Private Sub OnDISCOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISCOUNTChanged()
    End Sub
    Partial Private Sub OnSOSCOREChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSOSCOREChanged()
    End Sub
    Partial Private Sub OnOLDEHChanging(value As String)
    End Sub
    Partial Private Sub OnOLDEHChanged()
    End Sub
    Partial Private Sub OnOLAFMChanging(value As String)
    End Sub
    Partial Private Sub OnOLAFMChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._TRDR1 = CType(Nothing, EntityRef(Of TRDR))
			Me._PRSN = CType(Nothing, EntityRef(Of PRSN))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property TRDBRANCH() As Integer
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If ((Me._TRDBRANCH = value)  _
							= false) Then
					Me.OnTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCH = value
					Me.SendPropertyChanged("TRDBRANCH")
					Me.OnTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					If Me._TRDR1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINENUM", DbType:="Int NOT NULL")>  _
		Public Property LINENUM() As Integer
			Get
				Return Me._LINENUM
			End Get
			Set
				If ((Me._LINENUM = value)  _
							= false) Then
					Me.OnLINENUMChanging(value)
					Me.SendPropertyChanging
					Me._LINENUM = value
					Me.SendPropertyChanged("LINENUM")
					Me.OnLINENUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCENTER", DbType:="SmallInt")>  _
		Public Property ISCENTER() As System.Nullable(Of Short)
			Get
				Return Me._ISCENTER
			End Get
			Set
				If (Me._ISCENTER.Equals(value) = false) Then
					Me.OnISCENTERChanging(value)
					Me.SendPropertyChanging
					Me._ISCENTER = value
					Me.SendPropertyChanged("ISCENTER")
					Me.OnISCENTERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt")>  _
		Public Property COUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._COUNTRY
			End Get
			Set
				If (Me._COUNTRY.Equals(value) = false) Then
					Me.OnCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._COUNTRY = value
					Me.SendPropertyChanged("COUNTRY")
					Me.OnCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IRSDATA", DbType:="VarChar(128)")>  _
		Public Property IRSDATA() As String
			Get
				Return Me._IRSDATA
			End Get
			Set
				If (String.Equals(Me._IRSDATA, value) = false) Then
					Me.OnIRSDATAChanging(value)
					Me.SendPropertyChanging
					Me._IRSDATA = value
					Me.SendPropertyChanged("IRSDATA")
					Me.OnIRSDATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATSTS", DbType:="SmallInt NOT NULL")>  _
		Public Property VATSTS() As Short
			Get
				Return Me._VATSTS
			End Get
			Set
				If ((Me._VATSTS = value)  _
							= false) Then
					Me.OnVATSTSChanging(value)
					Me.SendPropertyChanging
					Me._VATSTS = value
					Me.SendPropertyChanged("VATSTS")
					Me.OnVATSTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPROVISIONS", DbType:="SmallInt")>  _
		Public Property VATPROVISIONS() As System.Nullable(Of Short)
			Get
				Return Me._VATPROVISIONS
			End Get
			Set
				If (Me._VATPROVISIONS.Equals(value) = false) Then
					Me.OnVATPROVISIONSChanging(value)
					Me.SendPropertyChanging
					Me._VATPROVISIONS = value
					Me.SendPropertyChanged("VATPROVISIONS")
					Me.OnVATPROVISIONSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFKFLAG", DbType:="SmallInt NOT NULL")>  _
		Public Property EFKFLAG() As Short
			Get
				Return Me._EFKFLAG
			End Get
			Set
				If ((Me._EFKFLAG = value)  _
							= false) Then
					Me.OnEFKFLAGChanging(value)
					Me.SendPropertyChanging
					Me._EFKFLAG = value
					Me.SendPropertyChanged("EFKFLAG")
					Me.OnEFKFLAGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREAS", DbType:="SmallInt")>  _
		Public Property AREAS() As System.Nullable(Of Short)
			Get
				Return Me._AREAS
			End Get
			Set
				If (Me._AREAS.Equals(value) = false) Then
					Me.OnAREASChanging(value)
					Me.SendPropertyChanging
					Me._AREAS = value
					Me.SendPropertyChanged("AREAS")
					Me.OnAREASChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(50)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me.OnADDRESSChanging(value)
					Me.SendPropertyChanging
					Me._ADDRESS = value
					Me.SendPropertyChanged("ADDRESS")
					Me.OnADDRESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="VarChar(30)")>  _
		Public Property DISTRICT() As String
			Get
				Return Me._DISTRICT
			End Get
			Set
				If (String.Equals(Me._DISTRICT, value) = false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me.OnCITYChanging(value)
					Me.SendPropertyChanging
					Me._CITY = value
					Me.SendPropertyChanged("CITY")
					Me.OnCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me.OnDISTRICT1Changing(value)
					Me.SendPropertyChanging
					Me._DISTRICT1 = value
					Me.SendPropertyChanged("DISTRICT1")
					Me.OnDISTRICT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)")>  _
		Public Property ZIP() As String
			Get
				Return Me._ZIP
			End Get
			Set
				If (String.Equals(Me._ZIP, value) = false) Then
					Me.OnZIPChanging(value)
					Me.SendPropertyChanging
					Me._ZIP = value
					Me.SendPropertyChanged("ZIP")
					Me.OnZIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE1", DbType:="VarChar(20)")>  _
		Public Property PHONE1() As String
			Get
				Return Me._PHONE1
			End Get
			Set
				If (String.Equals(Me._PHONE1, value) = false) Then
					Me.OnPHONE1Changing(value)
					Me.SendPropertyChanging
					Me._PHONE1 = value
					Me.SendPropertyChanged("PHONE1")
					Me.OnPHONE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE2", DbType:="VarChar(20)")>  _
		Public Property PHONE2() As String
			Get
				Return Me._PHONE2
			End Get
			Set
				If (String.Equals(Me._PHONE2, value) = false) Then
					Me.OnPHONE2Changing(value)
					Me.SendPropertyChanging
					Me._PHONE2 = value
					Me.SendPropertyChanged("PHONE2")
					Me.OnPHONE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="VarChar(20)")>  _
		Public Property FAX() As String
			Get
				Return Me._FAX
			End Get
			Set
				If (String.Equals(Me._FAX, value) = false) Then
					Me.OnFAXChanging(value)
					Me.SendPropertyChanging
					Me._FAX = value
					Me.SendPropertyChanged("FAX")
					Me.OnFAXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="VarChar(64)")>  _
		Public Property EMAIL() As String
			Get
				Return Me._EMAIL
			End Get
			Set
				If (String.Equals(Me._EMAIL, value) = false) Then
					Me.OnEMAILChanging(value)
					Me.SendPropertyChanging
					Me._EMAIL = value
					Me.SendPropertyChanged("EMAIL")
					Me.OnEMAILChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOBTYPE", DbType:="SmallInt")>  _
		Public Property JOBTYPE() As System.Nullable(Of Short)
			Get
				Return Me._JOBTYPE
			End Get
			Set
				If (Me._JOBTYPE.Equals(value) = false) Then
					Me.OnJOBTYPEChanging(value)
					Me.SendPropertyChanging
					Me._JOBTYPE = value
					Me.SendPropertyChanged("JOBTYPE")
					Me.OnJOBTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOBTYPETRD", DbType:="VarChar(64)")>  _
		Public Property JOBTYPETRD() As String
			Get
				Return Me._JOBTYPETRD
			End Get
			Set
				If (String.Equals(Me._JOBTYPETRD, value) = false) Then
					Me.OnJOBTYPETRDChanging(value)
					Me.SendPropertyChanging
					Me._JOBTYPETRD = value
					Me.SendPropertyChanged("JOBTYPETRD")
					Me.OnJOBTYPETRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPMENT", DbType:="SmallInt")>  _
		Public Property SHIPMENT() As System.Nullable(Of Short)
			Get
				Return Me._SHIPMENT
			End Get
			Set
				If (Me._SHIPMENT.Equals(value) = false) Then
					Me.OnSHIPMENTChanging(value)
					Me.SendPropertyChanging
					Me._SHIPMENT = value
					Me.SendPropertyChanged("SHIPMENT")
					Me.OnSHIPMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt")>  _
		Public Property SOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If (Me._SOCARRIER.Equals(value) = false) Then
					Me.OnSOCARRIERChanging(value)
					Me.SendPropertyChanging
					Me._SOCARRIER = value
					Me.SendPropertyChanged("SOCARRIER")
					Me.OnSOCARRIERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUCKS", DbType:="SmallInt")>  _
		Public Property TRUCKS() As System.Nullable(Of Short)
			Get
				Return Me._TRUCKS
			End Get
			Set
				If (Me._TRUCKS.Equals(value) = false) Then
					Me.OnTRUCKSChanging(value)
					Me.SendPropertyChanging
					Me._TRUCKS = value
					Me.SendPropertyChanged("TRUCKS")
					Me.OnTRUCKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUTING", DbType:="SmallInt")>  _
		Public Property ROUTING() As System.Nullable(Of Short)
			Get
				Return Me._ROUTING
			End Get
			Set
				If (Me._ROUTING.Equals(value) = false) Then
					Me.OnROUTINGChanging(value)
					Me.SendPropertyChanging
					Me._ROUTING = value
					Me.SendPropertyChanged("ROUTING")
					Me.OnROUTINGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT", DbType:="SmallInt")>  _
		Public Property PAYMENT() As System.Nullable(Of Short)
			Get
				Return Me._PAYMENT
			End Get
			Set
				If (Me._PAYMENT.Equals(value) = false) Then
					Me.OnPAYMENTChanging(value)
					Me.SendPropertyChanging
					Me._PAYMENT = value
					Me.SendPropertyChanged("PAYMENT")
					Me.OnPAYMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					If Me._PRSN.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSALESMANChanging(value)
					Me.SendPropertyChanging
					Me._SALESMAN = value
					Me.SendPropertyChanged("SALESMAN")
					Me.OnSALESMANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLLECTOR", DbType:="Int")>  _
		Public Property COLLECTOR() As System.Nullable(Of Integer)
			Get
				Return Me._COLLECTOR
			End Get
			Set
				If (Me._COLLECTOR.Equals(value) = false) Then
					Me.OnCOLLECTORChanging(value)
					Me.SendPropertyChanging
					Me._COLLECTOR = value
					Me.SendPropertyChanged("COLLECTOR")
					Me.OnCOLLECTORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VISITEVERY", DbType:="VarChar(15)")>  _
		Public Property VISITEVERY() As String
			Get
				Return Me._VISITEVERY
			End Get
			Set
				If (String.Equals(Me._VISITEVERY, value) = false) Then
					Me.OnVISITEVERYChanging(value)
					Me.SendPropertyChanging
					Me._VISITEVERY = value
					Me.SendPropertyChanged("VISITEVERY")
					Me.OnVISITEVERYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPGROUP", DbType:="SmallInt")>  _
		Public Property EXPGROUP() As System.Nullable(Of Short)
			Get
				Return Me._EXPGROUP
			End Get
			Set
				If (Me._EXPGROUP.Equals(value) = false) Then
					Me.OnEXPGROUPChanging(value)
					Me.SendPropertyChanging
					Me._EXPGROUP = value
					Me.SendPropertyChanged("EXPGROUP")
					Me.OnEXPGROUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt")>  _
		Public Property BRANCH() As System.Nullable(Of Short)
			Get
				Return Me._BRANCH
			End Get
			Set
				If (Me._BRANCH.Equals(value) = false) Then
					Me.OnBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BRANCH = value
					Me.SendPropertyChanged("BRANCH")
					Me.OnBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBUSINESS", DbType:="SmallInt")>  _
		Public Property TRDBUSINESS() As System.Nullable(Of Short)
			Get
				Return Me._TRDBUSINESS
			End Get
			Set
				If (Me._TRDBUSINESS.Equals(value) = false) Then
					Me.OnTRDBUSINESSChanging(value)
					Me.SendPropertyChanging
					Me._TRDBUSINESS = value
					Me.SendPropertyChanged("TRDBUSINESS")
					Me.OnTRDBUSINESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT", DbType:="Float")>  _
		Public Property DISCOUNT() As System.Nullable(Of Double)
			Get
				Return Me._DISCOUNT
			End Get
			Set
				If (Me._DISCOUNT.Equals(value) = false) Then
					Me.OnDISCOUNTChanging(value)
					Me.SendPropertyChanging
					Me._DISCOUNT = value
					Me.SendPropertyChanged("DISCOUNT")
					Me.OnDISCOUNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSCORE", DbType:="Int")>  _
		Public Property SOSCORE() As System.Nullable(Of Integer)
			Get
				Return Me._SOSCORE
			End Get
			Set
				If (Me._SOSCORE.Equals(value) = false) Then
					Me.OnSOSCOREChanging(value)
					Me.SendPropertyChanging
					Me._SOSCORE = value
					Me.SendPropertyChanged("SOSCORE")
					Me.OnSOSCOREChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLDEH", DbType:="VarChar(12)")>  _
		Public Property OLDEH() As String
			Get
				Return Me._OLDEH
			End Get
			Set
				If (String.Equals(Me._OLDEH, value) = false) Then
					Me.OnOLDEHChanging(value)
					Me.SendPropertyChanging
					Me._OLDEH = value
					Me.SendPropertyChanged("OLDEH")
					Me.OnOLDEHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLAFM", DbType:="VarChar(15)")>  _
		Public Property OLAFM() As String
			Get
				Return Me._OLAFM
			End Get
			Set
				If (String.Equals(Me._OLAFM, value) = false) Then
					Me.OnOLAFMChanging(value)
					Me.SendPropertyChanging
					Me._OLAFM = value
					Me.SendPropertyChanged("OLAFM")
					Me.OnOLAFMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(2000)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDBRANCH", Storage:="_TRDR1", ThisKey:="TRDR", OtherKey:="TRDR", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property TRDR1() As TRDR
			Get
				Return Me._TRDR1.Entity
			End Get
			Set
				Dim previousValue As TRDR = Me._TRDR1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDR1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDR1.Entity = Nothing
						previousValue.TRDBRANCHes.Remove(Me)
					End If
					Me._TRDR1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDBRANCHes.Add(Me)
						Me._TRDR = value.TRDR
					Else
						Me._TRDR = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("TRDR1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_TRDBRANCH", Storage:="_PRSN", ThisKey:="SALESMAN", OtherKey:="PRSN", IsForeignKey:=true)>  _
		Public Property PRSN() As PRSN
			Get
				Return Me._PRSN.Entity
			End Get
			Set
				Dim previousValue As PRSN = Me._PRSN.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PRSN.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PRSN.Entity = Nothing
						previousValue.TRDBRANCHes.Remove(Me)
					End If
					Me._PRSN.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDBRANCHes.Add(Me)
						Me._SALESMAN = value.PRSN
					Else
						Me._SALESMAN = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PRSN")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SOCARRIER")>  _
	Partial Public Class SOCARRIER
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SOCARRIER As Short
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
		Private _ADDRESS As String
		
		Private _ZIP As String
		
		Private _DISTRICT As String
		
		Private _CITY As String
		
		Private _PHONE01 As String
		
		Private _PHONE02 As String
		
		Private _FAX As String
		
		Private _WEBPAGE As String
		
		Private _EMAIL As String
		
		Private _ACNMSK As String
		
		Private _REMARKS As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSOCARRIERChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCARRIERChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnPHONE01Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE01Changed()
    End Sub
    Partial Private Sub OnPHONE02Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE02Changed()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnWEBPAGEChanging(value As String)
    End Sub
    Partial Private Sub OnWEBPAGEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SOCARRIER() As Short
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If ((Me._SOCARRIER = value)  _
							= false) Then
					Me.OnSOCARRIERChanging(value)
					Me.SendPropertyChanging
					Me._SOCARRIER = value
					Me.SendPropertyChanged("SOCARRIER")
					Me.OnSOCARRIERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(50)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me.OnADDRESSChanging(value)
					Me.SendPropertyChanging
					Me._ADDRESS = value
					Me.SendPropertyChanged("ADDRESS")
					Me.OnADDRESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)")>  _
		Public Property ZIP() As String
			Get
				Return Me._ZIP
			End Get
			Set
				If (String.Equals(Me._ZIP, value) = false) Then
					Me.OnZIPChanging(value)
					Me.SendPropertyChanging
					Me._ZIP = value
					Me.SendPropertyChanged("ZIP")
					Me.OnZIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="VarChar(30)")>  _
		Public Property DISTRICT() As String
			Get
				Return Me._DISTRICT
			End Get
			Set
				If (String.Equals(Me._DISTRICT, value) = false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me.OnCITYChanging(value)
					Me.SendPropertyChanging
					Me._CITY = value
					Me.SendPropertyChanged("CITY")
					Me.OnCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE01", DbType:="VarChar(20)")>  _
		Public Property PHONE01() As String
			Get
				Return Me._PHONE01
			End Get
			Set
				If (String.Equals(Me._PHONE01, value) = false) Then
					Me.OnPHONE01Changing(value)
					Me.SendPropertyChanging
					Me._PHONE01 = value
					Me.SendPropertyChanged("PHONE01")
					Me.OnPHONE01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE02", DbType:="VarChar(20)")>  _
		Public Property PHONE02() As String
			Get
				Return Me._PHONE02
			End Get
			Set
				If (String.Equals(Me._PHONE02, value) = false) Then
					Me.OnPHONE02Changing(value)
					Me.SendPropertyChanging
					Me._PHONE02 = value
					Me.SendPropertyChanged("PHONE02")
					Me.OnPHONE02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="VarChar(20)")>  _
		Public Property FAX() As String
			Get
				Return Me._FAX
			End Get
			Set
				If (String.Equals(Me._FAX, value) = false) Then
					Me.OnFAXChanging(value)
					Me.SendPropertyChanging
					Me._FAX = value
					Me.SendPropertyChanged("FAX")
					Me.OnFAXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEBPAGE", DbType:="VarChar(64)")>  _
		Public Property WEBPAGE() As String
			Get
				Return Me._WEBPAGE
			End Get
			Set
				If (String.Equals(Me._WEBPAGE, value) = false) Then
					Me.OnWEBPAGEChanging(value)
					Me.SendPropertyChanging
					Me._WEBPAGE = value
					Me.SendPropertyChanged("WEBPAGE")
					Me.OnWEBPAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="VarChar(64)")>  _
		Public Property EMAIL() As String
			Get
				Return Me._EMAIL
			End Get
			Set
				If (String.Equals(Me._EMAIL, value) = false) Then
					Me.OnEMAILChanging(value)
					Me.SendPropertyChanging
					Me._EMAIL = value
					Me.SendPropertyChanged("EMAIL")
					Me.OnEMAILChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(250)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRIORITY")>  _
	Partial Public Class PRIORITY
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _PRIORITY As Short
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _ACNMSK As String
		
		Private _ISACTIVE As Short
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnPRIORITYChanging(value As Short)
    End Sub
    Partial Private Sub OnPRIORITYChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIORITY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property PRIORITY() As Short
			Get
				Return Me._PRIORITY
			End Get
			Set
				If ((Me._PRIORITY = value)  _
							= false) Then
					Me.OnPRIORITYChanging(value)
					Me.SendPropertyChanging
					Me._PRIORITY = value
					Me.SendPropertyChanged("PRIORITY")
					Me.OnPRIORITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCTrdBCity")>  _
	Partial Public Class ccCTrdBCity
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _ccCTrdBCity As Integer
		
		Private _COUNTRY As Short
		
		Private _DISTRICT As Short
		
		Private _CITY As String
		
		Private _ISACTIVE As Short
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnccCTrdBCityChanging(value As Integer)
    End Sub
    Partial Private Sub OnccCTrdBCityChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As Short)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCity", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ccCTrdBCity() As Integer
			Get
				Return Me._ccCTrdBCity
			End Get
			Set
				If ((Me._ccCTrdBCity = value)  _
							= false) Then
					Me.OnccCTrdBCityChanging(value)
					Me.SendPropertyChanging
					Me._ccCTrdBCity = value
					Me.SendPropertyChanged("ccCTrdBCity")
					Me.OnccCTrdBCityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt NOT NULL")>  _
		Public Property COUNTRY() As Short
			Get
				Return Me._COUNTRY
			End Get
			Set
				If ((Me._COUNTRY = value)  _
							= false) Then
					Me.OnCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._COUNTRY = value
					Me.SendPropertyChanged("COUNTRY")
					Me.OnCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="SmallInt NOT NULL")>  _
		Public Property DISTRICT() As Short
			Get
				Return Me._DISTRICT
			End Get
			Set
				If ((Me._DISTRICT = value)  _
							= false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me.OnCITYChanging(value)
					Me.SendPropertyChanging
					Me._CITY = value
					Me.SendPropertyChanged("CITY")
					Me.OnCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCTrdBRoute")>  _
	Partial Public Class ccCTrdBRoute
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ccCTrdBRoute As Integer
		
		Private _TRDBRANCH As Integer
		
		Private _ccCRouting As Integer
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnccCTrdBRouteChanging(value As Integer)
    End Sub
    Partial Private Sub OnccCTrdBRouteChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnccCRoutingChanging(value As Integer)
    End Sub
    Partial Private Sub OnccCRoutingChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBRoute", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ccCTrdBRoute() As Integer
			Get
				Return Me._ccCTrdBRoute
			End Get
			Set
				If ((Me._ccCTrdBRoute = value)  _
							= false) Then
					Me.OnccCTrdBRouteChanging(value)
					Me.SendPropertyChanging
					Me._ccCTrdBRoute = value
					Me.SendPropertyChanged("ccCTrdBRoute")
					Me.OnccCTrdBRouteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int NOT NULL")>  _
		Public Property TRDBRANCH() As Integer
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If ((Me._TRDBRANCH = value)  _
							= false) Then
					Me.OnTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCH = value
					Me.SendPropertyChanged("TRDBRANCH")
					Me.OnTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRouting", DbType:="Int NOT NULL")>  _
		Public Property ccCRouting() As Integer
			Get
				Return Me._ccCRouting
			End Get
			Set
				If ((Me._ccCRouting = value)  _
							= false) Then
					Me.OnccCRoutingChanging(value)
					Me.SendPropertyChanging
					Me._ccCRouting = value
					Me.SendPropertyChanged("ccCRouting")
					Me.OnccCRoutingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DISTRICT")>  _
	Partial Public Class DISTRICT
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COUNTRY As Short
		
		Private _DISTRICT As Short
		
		Private _CODE As String
		
		Private _NAME As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As Short)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COUNTRY() As Short
			Get
				Return Me._COUNTRY
			End Get
			Set
				If ((Me._COUNTRY = value)  _
							= false) Then
					Me.OnCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._COUNTRY = value
					Me.SendPropertyChanged("COUNTRY")
					Me.OnCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property DISTRICT() As Short
			Get
				Return Me._DISTRICT
			End Get
			Set
				If ((Me._DISTRICT = value)  _
							= false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCRouting")>  _
	Partial Public Class ccCRouting
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ccCRouting As Integer
		
		Private _COMPANY As Short
		
		Private _ACNMASK As String
		
		Private _ISACTIVE As Short
		
		Private _REMARKS As String
		
		Private _SOKM As Double
		
		Private _SOCOST As Double
		
		Private _SOCARRIER As Short
		
		Private _BeginCity As Integer
		
		Private _EndCity As Integer
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnccCRoutingChanging(value As Integer)
    End Sub
    Partial Private Sub OnccCRoutingChanged()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnACNMASKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMASKChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnSOKMChanging(value As Double)
    End Sub
    Partial Private Sub OnSOKMChanged()
    End Sub
    Partial Private Sub OnSOCOSTChanging(value As Double)
    End Sub
    Partial Private Sub OnSOCOSTChanged()
    End Sub
    Partial Private Sub OnSOCARRIERChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCARRIERChanged()
    End Sub
    Partial Private Sub OnBeginCityChanging(value As Integer)
    End Sub
    Partial Private Sub OnBeginCityChanged()
    End Sub
    Partial Private Sub OnEndCityChanging(value As Integer)
    End Sub
    Partial Private Sub OnEndCityChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRouting", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ccCRouting() As Integer
			Get
				Return Me._ccCRouting
			End Get
			Set
				If ((Me._ccCRouting = value)  _
							= false) Then
					Me.OnccCRoutingChanging(value)
					Me.SendPropertyChanging
					Me._ccCRouting = value
					Me.SendPropertyChanged("ccCRouting")
					Me.OnccCRoutingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMASK", DbType:="VarChar(25)")>  _
		Public Property ACNMASK() As String
			Get
				Return Me._ACNMASK
			End Get
			Set
				If (String.Equals(Me._ACNMASK, value) = false) Then
					Me.OnACNMASKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMASK = value
					Me.SendPropertyChanged("ACNMASK")
					Me.OnACNMASKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(250)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOKM", DbType:="Float NOT NULL")>  _
		Public Property SOKM() As Double
			Get
				Return Me._SOKM
			End Get
			Set
				If ((Me._SOKM = value)  _
							= false) Then
					Me.OnSOKMChanging(value)
					Me.SendPropertyChanging
					Me._SOKM = value
					Me.SendPropertyChanged("SOKM")
					Me.OnSOKMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCOST", DbType:="Float NOT NULL")>  _
		Public Property SOCOST() As Double
			Get
				Return Me._SOCOST
			End Get
			Set
				If ((Me._SOCOST = value)  _
							= false) Then
					Me.OnSOCOSTChanging(value)
					Me.SendPropertyChanging
					Me._SOCOST = value
					Me.SendPropertyChanged("SOCOST")
					Me.OnSOCOSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCARRIER() As Short
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If ((Me._SOCARRIER = value)  _
							= false) Then
					Me.OnSOCARRIERChanging(value)
					Me.SendPropertyChanging
					Me._SOCARRIER = value
					Me.SendPropertyChanged("SOCARRIER")
					Me.OnSOCARRIERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BeginCity", DbType:="Int NOT NULL")>  _
		Public Property BeginCity() As Integer
			Get
				Return Me._BeginCity
			End Get
			Set
				If ((Me._BeginCity = value)  _
							= false) Then
					Me.OnBeginCityChanging(value)
					Me.SendPropertyChanging
					Me._BeginCity = value
					Me.SendPropertyChanged("BeginCity")
					Me.OnBeginCityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndCity", DbType:="Int NOT NULL")>  _
		Public Property EndCity() As Integer
			Get
				Return Me._EndCity
			End Get
			Set
				If ((Me._EndCity = value)  _
							= false) Then
					Me.OnEndCityChanging(value)
					Me.SendPropertyChanging
					Me._EndCity = value
					Me.SendPropertyChanged("EndCity")
					Me.OnEndCityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVTrdBRouting")>  _
	Partial Public Class ccCVTrdBRouting
		
		Private _COMPANY As Short
		
		Private _FINDOC As Integer
		
		Private _SOSOURCE As Integer
		
		Private _WHOUSE As System.Nullable(Of Short)
		
		Private _TRDBRANCH As Integer
		
		Private _ISACTIVE As Short
		
		Private _ccCRouting As Integer
		
		Private _BeginCity As Integer
		
		Private _EndCity As Integer
		
		Private _DISTRICTNAME As String
		
		Private _EndCityNAME As String
		
		Private _SOCARRIER As Short
		
		Private _SOCARRIERNAME As String
		
		Private _SOCOST As Double
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me._COMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL")>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL")>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					Me._SOSOURCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt")>  _
		Public Property WHOUSE() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSE
			End Get
			Set
				If (Me._WHOUSE.Equals(value) = false) Then
					Me._WHOUSE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int NOT NULL")>  _
		Public Property TRDBRANCH() As Integer
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If ((Me._TRDBRANCH = value)  _
							= false) Then
					Me._TRDBRANCH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me._ISACTIVE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRouting", DbType:="Int NOT NULL")>  _
		Public Property ccCRouting() As Integer
			Get
				Return Me._ccCRouting
			End Get
			Set
				If ((Me._ccCRouting = value)  _
							= false) Then
					Me._ccCRouting = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BeginCity", DbType:="Int NOT NULL")>  _
		Public Property BeginCity() As Integer
			Get
				Return Me._BeginCity
			End Get
			Set
				If ((Me._BeginCity = value)  _
							= false) Then
					Me._BeginCity = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndCity", DbType:="Int NOT NULL")>  _
		Public Property EndCity() As Integer
			Get
				Return Me._EndCity
			End Get
			Set
				If ((Me._EndCity = value)  _
							= false) Then
					Me._EndCity = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICTNAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property DISTRICTNAME() As String
			Get
				Return Me._DISTRICTNAME
			End Get
			Set
				If (String.Equals(Me._DISTRICTNAME, value) = false) Then
					Me._DISTRICTNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndCityNAME", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property EndCityNAME() As String
			Get
				Return Me._EndCityNAME
			End Get
			Set
				If (String.Equals(Me._EndCityNAME, value) = false) Then
					Me._EndCityNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCARRIER() As Short
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If ((Me._SOCARRIER = value)  _
							= false) Then
					Me._SOCARRIER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIERNAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property SOCARRIERNAME() As String
			Get
				Return Me._SOCARRIERNAME
			End Get
			Set
				If (String.Equals(Me._SOCARRIERNAME, value) = false) Then
					Me._SOCARRIERNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCOST", DbType:="Float NOT NULL")>  _
		Public Property SOCOST() As Double
			Get
				Return Me._SOCOST
			End Get
			Set
				If ((Me._SOCOST = value)  _
							= false) Then
					Me._SOCOST = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cccSettings")>  _
	Partial Public Class cccSetting
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _cccSettings As Integer
		
		Private _Company As System.Nullable(Of Integer)
		
		Private _Series As System.Nullable(Of Integer)
		
		Private _District As System.Nullable(Of Short)
		
		Private _Trdbusiness As System.Nullable(Of Short)
		
		Private _PriceSeries As String
		
		Private _Shipment As System.Nullable(Of Short)
		
		Private _GroupYD As String
		
		Private _GroupMYD As String
		
		Private _cccSettingsLines As EntitySet(Of cccSettingsLine)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncccSettingsChanging(value As Integer)
    End Sub
    Partial Private Sub OncccSettingsChanged()
    End Sub
    Partial Private Sub OnCompanyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCompanyChanged()
    End Sub
    Partial Private Sub OnSeriesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSeriesChanged()
    End Sub
    Partial Private Sub OnDistrictChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDistrictChanged()
    End Sub
    Partial Private Sub OnTrdbusinessChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTrdbusinessChanged()
    End Sub
    Partial Private Sub OnPriceSeriesChanging(value As String)
    End Sub
    Partial Private Sub OnPriceSeriesChanged()
    End Sub
    Partial Private Sub OnShipmentChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnShipmentChanged()
    End Sub
    Partial Private Sub OnGroupYDChanging(value As String)
    End Sub
    Partial Private Sub OnGroupYDChanged()
    End Sub
    Partial Private Sub OnGroupMYDChanging(value As String)
    End Sub
    Partial Private Sub OnGroupMYDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._cccSettingsLines = New EntitySet(Of cccSettingsLine)(AddressOf Me.attach_cccSettingsLines, AddressOf Me.detach_cccSettingsLines)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccSettings", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property cccSettings() As Integer
			Get
				Return Me._cccSettings
			End Get
			Set
				If ((Me._cccSettings = value)  _
							= false) Then
					Me.OncccSettingsChanging(value)
					Me.SendPropertyChanging
					Me._cccSettings = value
					Me.SendPropertyChanged("cccSettings")
					Me.OncccSettingsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="Int")>  _
		Public Property Company() As System.Nullable(Of Integer)
			Get
				Return Me._Company
			End Get
			Set
				If (Me._Company.Equals(value) = false) Then
					Me.OnCompanyChanging(value)
					Me.SendPropertyChanging
					Me._Company = value
					Me.SendPropertyChanged("Company")
					Me.OnCompanyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Series", DbType:="Int")>  _
		Public Property Series() As System.Nullable(Of Integer)
			Get
				Return Me._Series
			End Get
			Set
				If (Me._Series.Equals(value) = false) Then
					Me.OnSeriesChanging(value)
					Me.SendPropertyChanging
					Me._Series = value
					Me.SendPropertyChanged("Series")
					Me.OnSeriesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_District", DbType:="SmallInt")>  _
		Public Property District() As System.Nullable(Of Short)
			Get
				Return Me._District
			End Get
			Set
				If (Me._District.Equals(value) = false) Then
					Me.OnDistrictChanging(value)
					Me.SendPropertyChanging
					Me._District = value
					Me.SendPropertyChanged("District")
					Me.OnDistrictChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trdbusiness", DbType:="SmallInt")>  _
		Public Property Trdbusiness() As System.Nullable(Of Short)
			Get
				Return Me._Trdbusiness
			End Get
			Set
				If (Me._Trdbusiness.Equals(value) = false) Then
					Me.OnTrdbusinessChanging(value)
					Me.SendPropertyChanging
					Me._Trdbusiness = value
					Me.SendPropertyChanged("Trdbusiness")
					Me.OnTrdbusinessChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PriceSeries", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property PriceSeries() As String
			Get
				Return Me._PriceSeries
			End Get
			Set
				If (String.Equals(Me._PriceSeries, value) = false) Then
					Me.OnPriceSeriesChanging(value)
					Me.SendPropertyChanging
					Me._PriceSeries = value
					Me.SendPropertyChanged("PriceSeries")
					Me.OnPriceSeriesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Shipment", DbType:="SmallInt")>  _
		Public Property Shipment() As System.Nullable(Of Short)
			Get
				Return Me._Shipment
			End Get
			Set
				If (Me._Shipment.Equals(value) = false) Then
					Me.OnShipmentChanging(value)
					Me.SendPropertyChanging
					Me._Shipment = value
					Me.SendPropertyChanged("Shipment")
					Me.OnShipmentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupYD", DbType:="VarChar(100)")>  _
		Public Property GroupYD() As String
			Get
				Return Me._GroupYD
			End Get
			Set
				If (String.Equals(Me._GroupYD, value) = false) Then
					Me.OnGroupYDChanging(value)
					Me.SendPropertyChanging
					Me._GroupYD = value
					Me.SendPropertyChanged("GroupYD")
					Me.OnGroupYDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupMYD", DbType:="VarChar(100)")>  _
		Public Property GroupMYD() As String
			Get
				Return Me._GroupMYD
			End Get
			Set
				If (String.Equals(Me._GroupMYD, value) = false) Then
					Me.OnGroupMYDChanging(value)
					Me.SendPropertyChanging
					Me._GroupMYD = value
					Me.SendPropertyChanged("GroupMYD")
					Me.OnGroupMYDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cccSetting_cccSettingsLine", Storage:="_cccSettingsLines", ThisKey:="cccSettings", OtherKey:="cccSettings")>  _
		Public Property cccSettingsLines() As EntitySet(Of cccSettingsLine)
			Get
				Return Me._cccSettingsLines
			End Get
			Set
				Me._cccSettingsLines.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_cccSettingsLines(ByVal entity As cccSettingsLine)
			Me.SendPropertyChanging
			entity.cccSetting = Me
		End Sub
		
		Private Sub detach_cccSettingsLines(ByVal entity As cccSettingsLine)
			Me.SendPropertyChanging
			entity.cccSetting = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cccPriceList")>  _
	Partial Public Class cccPriceList
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _cccPriceList As Integer
		
		Private _Insdate As System.Nullable(Of Date)
		
		Private _Upddate As System.Nullable(Of Date)
		
		Private _Insuser As System.Nullable(Of Integer)
		
		Private _Upduser As System.Nullable(Of Integer)
		
		Private _Name As String
		
		Private _Comments As String
		
		Private _Sosource As System.Nullable(Of Integer)
		
		Private _Company As System.Nullable(Of Integer)
		
		Private _IsActive As System.Nullable(Of Short)
		
		Private _Code As System.Nullable(Of Integer)
		
		Private _cccPriceListLines As EntitySet(Of cccPriceListLine)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncccPriceListChanging(value As Integer)
    End Sub
    Partial Private Sub OncccPriceListChanged()
    End Sub
    Partial Private Sub OnInsdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInsdateChanged()
    End Sub
    Partial Private Sub OnUpddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpddateChanged()
    End Sub
    Partial Private Sub OnInsuserChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInsuserChanged()
    End Sub
    Partial Private Sub OnUpduserChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUpduserChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnCommentsChanged()
    End Sub
    Partial Private Sub OnSosourceChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSosourceChanged()
    End Sub
    Partial Private Sub OnCompanyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCompanyChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._cccPriceListLines = New EntitySet(Of cccPriceListLine)(AddressOf Me.attach_cccPriceListLines, AddressOf Me.detach_cccPriceListLines)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccPriceList", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property cccPriceList() As Integer
			Get
				Return Me._cccPriceList
			End Get
			Set
				If ((Me._cccPriceList = value)  _
							= false) Then
					Me.OncccPriceListChanging(value)
					Me.SendPropertyChanging
					Me._cccPriceList = value
					Me.SendPropertyChanged("cccPriceList")
					Me.OncccPriceListChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insdate", DbType:="DateTime")>  _
		Public Property Insdate() As System.Nullable(Of Date)
			Get
				Return Me._Insdate
			End Get
			Set
				If (Me._Insdate.Equals(value) = false) Then
					Me.OnInsdateChanging(value)
					Me.SendPropertyChanging
					Me._Insdate = value
					Me.SendPropertyChanged("Insdate")
					Me.OnInsdateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Upddate", DbType:="DateTime")>  _
		Public Property Upddate() As System.Nullable(Of Date)
			Get
				Return Me._Upddate
			End Get
			Set
				If (Me._Upddate.Equals(value) = false) Then
					Me.OnUpddateChanging(value)
					Me.SendPropertyChanging
					Me._Upddate = value
					Me.SendPropertyChanged("Upddate")
					Me.OnUpddateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Insuser", DbType:="Int")>  _
		Public Property Insuser() As System.Nullable(Of Integer)
			Get
				Return Me._Insuser
			End Get
			Set
				If (Me._Insuser.Equals(value) = false) Then
					Me.OnInsuserChanging(value)
					Me.SendPropertyChanging
					Me._Insuser = value
					Me.SendPropertyChanged("Insuser")
					Me.OnInsuserChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Upduser", DbType:="Int")>  _
		Public Property Upduser() As System.Nullable(Of Integer)
			Get
				Return Me._Upduser
			End Get
			Set
				If (Me._Upduser.Equals(value) = false) Then
					Me.OnUpduserChanging(value)
					Me.SendPropertyChanging
					Me._Upduser = value
					Me.SendPropertyChanged("Upduser")
					Me.OnUpduserChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(64)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comments", DbType:="VarChar(256)")>  _
		Public Property Comments() As String
			Get
				Return Me._Comments
			End Get
			Set
				If (String.Equals(Me._Comments, value) = false) Then
					Me.OnCommentsChanging(value)
					Me.SendPropertyChanging
					Me._Comments = value
					Me.SendPropertyChanged("Comments")
					Me.OnCommentsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sosource", DbType:="Int")>  _
		Public Property Sosource() As System.Nullable(Of Integer)
			Get
				Return Me._Sosource
			End Get
			Set
				If (Me._Sosource.Equals(value) = false) Then
					Me.OnSosourceChanging(value)
					Me.SendPropertyChanging
					Me._Sosource = value
					Me.SendPropertyChanged("Sosource")
					Me.OnSosourceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="Int")>  _
		Public Property Company() As System.Nullable(Of Integer)
			Get
				Return Me._Company
			End Get
			Set
				If (Me._Company.Equals(value) = false) Then
					Me.OnCompanyChanging(value)
					Me.SendPropertyChanging
					Me._Company = value
					Me.SendPropertyChanged("Company")
					Me.OnCompanyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="SmallInt")>  _
		Public Property IsActive() As System.Nullable(Of Short)
			Get
				Return Me._IsActive
			End Get
			Set
				If (Me._IsActive.Equals(value) = false) Then
					Me.OnIsActiveChanging(value)
					Me.SendPropertyChanging
					Me._IsActive = value
					Me.SendPropertyChanged("IsActive")
					Me.OnIsActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="Int")>  _
		Public Property Code() As System.Nullable(Of Integer)
			Get
				Return Me._Code
			End Get
			Set
				If (Me._Code.Equals(value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cccPriceList_cccPriceListLine", Storage:="_cccPriceListLines", ThisKey:="cccPriceList", OtherKey:="cccPriceList")>  _
		Public Property cccPriceListLines() As EntitySet(Of cccPriceListLine)
			Get
				Return Me._cccPriceListLines
			End Get
			Set
				Me._cccPriceListLines.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_cccPriceListLines(ByVal entity As cccPriceListLine)
			Me.SendPropertyChanging
			entity.cccPriceList1 = Me
		End Sub
		
		Private Sub detach_cccPriceListLines(ByVal entity As cccPriceListLine)
			Me.SendPropertyChanging
			entity.cccPriceList1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FPRMS")>  _
	Partial Public Class FPRM
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SOSOURCE As Integer
		
		Private _FPRMS As Short
		
		Private _NAME As String
		
		Private _TFPRMS As System.Nullable(Of Short)
		
		Private _BFPRMS As System.Nullable(Of Short)
		
		Private _BGDOCKIND As System.Nullable(Of Short)
		
		Private _RESTMODE As System.Nullable(Of Short)
		
		Private _RESTMODEPRD As System.Nullable(Of Short)
		
		Private _RESTMODECOV As Short
		
		Private _ISACTIVE As Short
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _SOVAL As String
		
		Private _SODATA As String
		
		Private _CHEQUEs As EntitySet(Of CHEQUE)
		
		Private _SERIES As EntitySet(Of SERIES)
		
		Private _FINDOCs As EntitySet(Of FINDOC)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnFPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnFPRMSChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnTFPRMSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTFPRMSChanged()
    End Sub
    Partial Private Sub OnBFPRMSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBFPRMSChanged()
    End Sub
    Partial Private Sub OnBGDOCKINDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBGDOCKINDChanged()
    End Sub
    Partial Private Sub OnRESTMODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRESTMODEChanged()
    End Sub
    Partial Private Sub OnRESTMODEPRDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRESTMODEPRDChanged()
    End Sub
    Partial Private Sub OnRESTMODECOVChanging(value As Short)
    End Sub
    Partial Private Sub OnRESTMODECOVChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnSOVALChanging(value As String)
    End Sub
    Partial Private Sub OnSOVALChanged()
    End Sub
    Partial Private Sub OnSODATAChanging(value As String)
    End Sub
    Partial Private Sub OnSODATAChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._CHEQUEs = New EntitySet(Of CHEQUE)(AddressOf Me.attach_CHEQUEs, AddressOf Me.detach_CHEQUEs)
			Me._SERIES = New EntitySet(Of SERIES)(AddressOf Me.attach_SERIES, AddressOf Me.detach_SERIES)
			Me._FINDOCs = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs, AddressOf Me.detach_FINDOCs)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					Me.OnFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._FPRMS = value
					Me.SendPropertyChanged("FPRMS")
					Me.OnFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFPRMS", DbType:="SmallInt")>  _
		Public Property TFPRMS() As System.Nullable(Of Short)
			Get
				Return Me._TFPRMS
			End Get
			Set
				If (Me._TFPRMS.Equals(value) = false) Then
					Me.OnTFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._TFPRMS = value
					Me.SendPropertyChanged("TFPRMS")
					Me.OnTFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BFPRMS", DbType:="SmallInt")>  _
		Public Property BFPRMS() As System.Nullable(Of Short)
			Get
				Return Me._BFPRMS
			End Get
			Set
				If (Me._BFPRMS.Equals(value) = false) Then
					Me.OnBFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._BFPRMS = value
					Me.SendPropertyChanged("BFPRMS")
					Me.OnBFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGDOCKIND", DbType:="SmallInt")>  _
		Public Property BGDOCKIND() As System.Nullable(Of Short)
			Get
				Return Me._BGDOCKIND
			End Get
			Set
				If (Me._BGDOCKIND.Equals(value) = false) Then
					Me.OnBGDOCKINDChanging(value)
					Me.SendPropertyChanging
					Me._BGDOCKIND = value
					Me.SendPropertyChanged("BGDOCKIND")
					Me.OnBGDOCKINDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESTMODE", DbType:="SmallInt")>  _
		Public Property RESTMODE() As System.Nullable(Of Short)
			Get
				Return Me._RESTMODE
			End Get
			Set
				If (Me._RESTMODE.Equals(value) = false) Then
					Me.OnRESTMODEChanging(value)
					Me.SendPropertyChanging
					Me._RESTMODE = value
					Me.SendPropertyChanged("RESTMODE")
					Me.OnRESTMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESTMODEPRD", DbType:="SmallInt")>  _
		Public Property RESTMODEPRD() As System.Nullable(Of Short)
			Get
				Return Me._RESTMODEPRD
			End Get
			Set
				If (Me._RESTMODEPRD.Equals(value) = false) Then
					Me.OnRESTMODEPRDChanging(value)
					Me.SendPropertyChanging
					Me._RESTMODEPRD = value
					Me.SendPropertyChanged("RESTMODEPRD")
					Me.OnRESTMODEPRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESTMODECOV", DbType:="SmallInt NOT NULL")>  _
		Public Property RESTMODECOV() As Short
			Get
				Return Me._RESTMODECOV
			End Get
			Set
				If ((Me._RESTMODECOV = value)  _
							= false) Then
					Me.OnRESTMODECOVChanging(value)
					Me.SendPropertyChanging
					Me._RESTMODECOV = value
					Me.SendPropertyChanged("RESTMODECOV")
					Me.OnRESTMODECOVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOVAL", DbType:="VarChar(2000)")>  _
		Public Property SOVAL() As String
			Get
				Return Me._SOVAL
			End Get
			Set
				If (String.Equals(Me._SOVAL, value) = false) Then
					Me.OnSOVALChanging(value)
					Me.SendPropertyChanging
					Me._SOVAL = value
					Me.SendPropertyChanged("SOVAL")
					Me.OnSOVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODATA", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property SODATA() As String
			Get
				Return Me._SODATA
			End Get
			Set
				If (String.Equals(Me._SODATA, value) = false) Then
					Me.OnSODATAChanging(value)
					Me.SendPropertyChanging
					Me._SODATA = value
					Me.SendPropertyChanged("SODATA")
					Me.OnSODATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FPRM_CHEQUE", Storage:="_CHEQUEs", ThisKey:="COMPANY,SOSOURCE,FPRMS", OtherKey:="COMPANY,SOSOURCE,FPRMS")>  _
		Public Property CHEQUEs() As EntitySet(Of CHEQUE)
			Get
				Return Me._CHEQUEs
			End Get
			Set
				Me._CHEQUEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FPRM_SERIES", Storage:="_SERIES", ThisKey:="COMPANY,SOSOURCE,FPRMS", OtherKey:="COMPANY,SOSOURCE,FPRMS")>  _
		Public Property SERIES() As EntitySet(Of SERIES)
			Get
				Return Me._SERIES
			End Get
			Set
				Me._SERIES.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FPRM_FINDOC", Storage:="_FINDOCs", ThisKey:="COMPANY,SOSOURCE,FPRMS", OtherKey:="COMPANY,SOSOURCE,FPRMS")>  _
		Public Property FINDOCs() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs
			End Get
			Set
				Me._FINDOCs.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_CHEQUEs(ByVal entity As CHEQUE)
			Me.SendPropertyChanging
			entity.FPRM = Me
		End Sub
		
		Private Sub detach_CHEQUEs(ByVal entity As CHEQUE)
			Me.SendPropertyChanging
			entity.FPRM = Nothing
		End Sub
		
		Private Sub attach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.FPRM = Me
		End Sub
		
		Private Sub detach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.FPRM = Nothing
		End Sub
		
		Private Sub attach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.FPRM = Me
		End Sub
		
		Private Sub detach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.FPRM = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MTRDOC")>  _
	Partial Public Class MTRDOC
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _FINDOC As Integer
		
		Private _WHOUSE As System.Nullable(Of Short)
		
		Private _BRANCHSEC As System.Nullable(Of Short)
		
		Private _WHOUSESEC As System.Nullable(Of Short)
		
		Private _SOCARRIER As System.Nullable(Of Short)
		
		Private _TRUCKS As System.Nullable(Of Short)
		
		Private _TRUCKSNO As String
		
		Private _OLDEH As String
		
		Private _OLKIND As System.Nullable(Of Short)
		
		Private _ROUTING As System.Nullable(Of Short)
		
		Private _SHIPPINGADDR As String
		
		Private _SHPZIP As String
		
		Private _SHPDISTRICT As String
		
		Private _SHPCITY As String
		
		Private _SHIPDATE As System.Nullable(Of Date)
		
		Private _DELIVDATE As System.Nullable(Of Date)
		
		Private _PROCDOCS As String
		
		Private _PROCDOCS1 As String
		
		Private _ORDERTRDR As System.Nullable(Of Integer)
		
		Private _ORDERTRDBRANCH As System.Nullable(Of Integer)
		
		Private _SHIPTRDR As System.Nullable(Of Integer)
		
		Private _SHIPTRDBRANCH As System.Nullable(Of Integer)
		
		Private _BILLTRDR As System.Nullable(Of Integer)
		
		Private _BILLTRDBRANCH As System.Nullable(Of Integer)
		
		Private _MTRL As System.Nullable(Of Integer)
		
		Private _SNCODE As String
		
		Private _SPCS As System.Nullable(Of Integer)
		
		Private _QTY As Double
		
		Private _QTY1 As Double
		
		Private _QTY2 As Double
		
		Private _QTY1S As Double
		
		Private _QTY1A As Double
		
		Private _WASTE As Double
		
		Private _COSTCOEF As Double
		
		Private _STAGE As System.Nullable(Of Short)
		
		Private _MTRSTS As System.Nullable(Of Short)
		
		Private _SALESCVAL As Double
		
		Private _QTY1H As Double
		
		Private _QTY2H As Double
		
		Private _SOSIGNB As String
		
		Private _SOSIGNE As String
		
		Private _S1INV As System.Nullable(Of Short)
		
		Private _BGINTCOUNTRY As System.Nullable(Of Short)
		
		Private _RECEIPTCARD As String
		
		Private _FROMDATE As System.Nullable(Of Date)
		
		Private _FINALDATE As System.Nullable(Of Date)
		
		Private _DURATION As System.Nullable(Of Date)
		
		Private _TRDPRSN As System.Nullable(Of Integer)
		
		Private _ACTSTATUS As System.Nullable(Of Short)
		
		Private _SORELDOC As String
		
		Private _ccCTOTSHIPVALUE As System.Nullable(Of Double)
		
		Private _ccCLockShipValue As Short
		
		Private _ccCShippingNo As String
		
		Private _FINDOC1 As EntityRef(Of FINDOC)
		
		Private _MTRL1 As EntityRef(Of MTRL)
		
		Private _BRANCH As EntityRef(Of BRANCH)
		
		Private _WHOUSE1 As EntityRef(Of WHOUSE)
		
		Private _WHOUSE2 As EntityRef(Of WHOUSE)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnFINDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINDOCChanged()
    End Sub
    Partial Private Sub OnWHOUSEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSEChanged()
    End Sub
    Partial Private Sub OnBRANCHSECChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBRANCHSECChanged()
    End Sub
    Partial Private Sub OnWHOUSESECChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSESECChanged()
    End Sub
    Partial Private Sub OnSOCARRIERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCARRIERChanged()
    End Sub
    Partial Private Sub OnTRUCKSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRUCKSChanged()
    End Sub
    Partial Private Sub OnTRUCKSNOChanging(value As String)
    End Sub
    Partial Private Sub OnTRUCKSNOChanged()
    End Sub
    Partial Private Sub OnOLDEHChanging(value As String)
    End Sub
    Partial Private Sub OnOLDEHChanged()
    End Sub
    Partial Private Sub OnOLKINDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnOLKINDChanged()
    End Sub
    Partial Private Sub OnROUTINGChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnROUTINGChanged()
    End Sub
    Partial Private Sub OnSHIPPINGADDRChanging(value As String)
    End Sub
    Partial Private Sub OnSHIPPINGADDRChanged()
    End Sub
    Partial Private Sub OnSHPZIPChanging(value As String)
    End Sub
    Partial Private Sub OnSHPZIPChanged()
    End Sub
    Partial Private Sub OnSHPDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnSHPDISTRICTChanged()
    End Sub
    Partial Private Sub OnSHPCITYChanging(value As String)
    End Sub
    Partial Private Sub OnSHPCITYChanged()
    End Sub
    Partial Private Sub OnSHIPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSHIPDATEChanged()
    End Sub
    Partial Private Sub OnDELIVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDELIVDATEChanged()
    End Sub
    Partial Private Sub OnPROCDOCSChanging(value As String)
    End Sub
    Partial Private Sub OnPROCDOCSChanged()
    End Sub
    Partial Private Sub OnPROCDOCS1Changing(value As String)
    End Sub
    Partial Private Sub OnPROCDOCS1Changed()
    End Sub
    Partial Private Sub OnORDERTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDERTRDRChanged()
    End Sub
    Partial Private Sub OnORDERTRDBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDERTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnSHIPTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSHIPTRDRChanged()
    End Sub
    Partial Private Sub OnSHIPTRDBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSHIPTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnBILLTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBILLTRDRChanged()
    End Sub
    Partial Private Sub OnBILLTRDBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBILLTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnMTRLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRLChanged()
    End Sub
    Partial Private Sub OnSNCODEChanging(value As String)
    End Sub
    Partial Private Sub OnSNCODEChanged()
    End Sub
    Partial Private Sub OnSPCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPCSChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As Double)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnQTY1Changing(value As Double)
    End Sub
    Partial Private Sub OnQTY1Changed()
    End Sub
    Partial Private Sub OnQTY2Changing(value As Double)
    End Sub
    Partial Private Sub OnQTY2Changed()
    End Sub
    Partial Private Sub OnQTY1SChanging(value As Double)
    End Sub
    Partial Private Sub OnQTY1SChanged()
    End Sub
    Partial Private Sub OnQTY1AChanging(value As Double)
    End Sub
    Partial Private Sub OnQTY1AChanged()
    End Sub
    Partial Private Sub OnWASTEChanging(value As Double)
    End Sub
    Partial Private Sub OnWASTEChanged()
    End Sub
    Partial Private Sub OnCOSTCOEFChanging(value As Double)
    End Sub
    Partial Private Sub OnCOSTCOEFChanged()
    End Sub
    Partial Private Sub OnSTAGEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSTAGEChanged()
    End Sub
    Partial Private Sub OnMTRSTSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRSTSChanged()
    End Sub
    Partial Private Sub OnSALESCVALChanging(value As Double)
    End Sub
    Partial Private Sub OnSALESCVALChanged()
    End Sub
    Partial Private Sub OnQTY1HChanging(value As Double)
    End Sub
    Partial Private Sub OnQTY1HChanged()
    End Sub
    Partial Private Sub OnQTY2HChanging(value As Double)
    End Sub
    Partial Private Sub OnQTY2HChanged()
    End Sub
    Partial Private Sub OnSOSIGNBChanging(value As String)
    End Sub
    Partial Private Sub OnSOSIGNBChanged()
    End Sub
    Partial Private Sub OnSOSIGNEChanging(value As String)
    End Sub
    Partial Private Sub OnSOSIGNEChanged()
    End Sub
    Partial Private Sub OnS1INVChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnS1INVChanged()
    End Sub
    Partial Private Sub OnBGINTCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBGINTCOUNTRYChanged()
    End Sub
    Partial Private Sub OnRECEIPTCARDChanging(value As String)
    End Sub
    Partial Private Sub OnRECEIPTCARDChanged()
    End Sub
    Partial Private Sub OnFROMDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFROMDATEChanged()
    End Sub
    Partial Private Sub OnFINALDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFINALDATEChanged()
    End Sub
    Partial Private Sub OnDURATIONChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDURATIONChanged()
    End Sub
    Partial Private Sub OnTRDPRSNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDPRSNChanged()
    End Sub
    Partial Private Sub OnACTSTATUSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnACTSTATUSChanged()
    End Sub
    Partial Private Sub OnSORELDOCChanging(value As String)
    End Sub
    Partial Private Sub OnSORELDOCChanged()
    End Sub
    Partial Private Sub OnccCTOTSHIPVALUEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnccCTOTSHIPVALUEChanged()
    End Sub
    Partial Private Sub OnccCLockShipValueChanging(value As Short)
    End Sub
    Partial Private Sub OnccCLockShipValueChanged()
    End Sub
    Partial Private Sub OnccCShippingNoChanging(value As String)
    End Sub
    Partial Private Sub OnccCShippingNoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FINDOC1 = CType(Nothing, EntityRef(Of FINDOC))
			Me._MTRL1 = CType(Nothing, EntityRef(Of MTRL))
			Me._BRANCH = CType(Nothing, EntityRef(Of BRANCH))
			Me._WHOUSE1 = CType(Nothing, EntityRef(Of WHOUSE))
			Me._WHOUSE2 = CType(Nothing, EntityRef(Of WHOUSE))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					If ((Me._BRANCH.HasLoadedOrAssignedValue OrElse Me._WHOUSE1.HasLoadedOrAssignedValue)  _
								OrElse Me._WHOUSE2.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					If Me._FINDOC1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOC = value
					Me.SendPropertyChanged("FINDOC")
					Me.OnFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt")>  _
		Public Property WHOUSE() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSE
			End Get
			Set
				If (Me._WHOUSE.Equals(value) = false) Then
					If Me._WHOUSE1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSEChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSE = value
					Me.SendPropertyChanged("WHOUSE")
					Me.OnWHOUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCHSEC", DbType:="SmallInt")>  _
		Public Property BRANCHSEC() As System.Nullable(Of Short)
			Get
				Return Me._BRANCHSEC
			End Get
			Set
				If (Me._BRANCHSEC.Equals(value) = false) Then
					If Me._BRANCH.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnBRANCHSECChanging(value)
					Me.SendPropertyChanging
					Me._BRANCHSEC = value
					Me.SendPropertyChanged("BRANCHSEC")
					Me.OnBRANCHSECChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSESEC", DbType:="SmallInt")>  _
		Public Property WHOUSESEC() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSESEC
			End Get
			Set
				If (Me._WHOUSESEC.Equals(value) = false) Then
					If Me._WHOUSE2.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSESECChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSESEC = value
					Me.SendPropertyChanged("WHOUSESEC")
					Me.OnWHOUSESECChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt")>  _
		Public Property SOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If (Me._SOCARRIER.Equals(value) = false) Then
					Me.OnSOCARRIERChanging(value)
					Me.SendPropertyChanging
					Me._SOCARRIER = value
					Me.SendPropertyChanged("SOCARRIER")
					Me.OnSOCARRIERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUCKS", DbType:="SmallInt")>  _
		Public Property TRUCKS() As System.Nullable(Of Short)
			Get
				Return Me._TRUCKS
			End Get
			Set
				If (Me._TRUCKS.Equals(value) = false) Then
					Me.OnTRUCKSChanging(value)
					Me.SendPropertyChanging
					Me._TRUCKS = value
					Me.SendPropertyChanged("TRUCKS")
					Me.OnTRUCKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUCKSNO", DbType:="VarChar(20)")>  _
		Public Property TRUCKSNO() As String
			Get
				Return Me._TRUCKSNO
			End Get
			Set
				If (String.Equals(Me._TRUCKSNO, value) = false) Then
					Me.OnTRUCKSNOChanging(value)
					Me.SendPropertyChanging
					Me._TRUCKSNO = value
					Me.SendPropertyChanged("TRUCKSNO")
					Me.OnTRUCKSNOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLDEH", DbType:="VarChar(12)")>  _
		Public Property OLDEH() As String
			Get
				Return Me._OLDEH
			End Get
			Set
				If (String.Equals(Me._OLDEH, value) = false) Then
					Me.OnOLDEHChanging(value)
					Me.SendPropertyChanging
					Me._OLDEH = value
					Me.SendPropertyChanged("OLDEH")
					Me.OnOLDEHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLKIND", DbType:="SmallInt")>  _
		Public Property OLKIND() As System.Nullable(Of Short)
			Get
				Return Me._OLKIND
			End Get
			Set
				If (Me._OLKIND.Equals(value) = false) Then
					Me.OnOLKINDChanging(value)
					Me.SendPropertyChanging
					Me._OLKIND = value
					Me.SendPropertyChanged("OLKIND")
					Me.OnOLKINDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUTING", DbType:="SmallInt")>  _
		Public Property ROUTING() As System.Nullable(Of Short)
			Get
				Return Me._ROUTING
			End Get
			Set
				If (Me._ROUTING.Equals(value) = false) Then
					Me.OnROUTINGChanging(value)
					Me.SendPropertyChanging
					Me._ROUTING = value
					Me.SendPropertyChanged("ROUTING")
					Me.OnROUTINGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPPINGADDR", DbType:="VarChar(128)")>  _
		Public Property SHIPPINGADDR() As String
			Get
				Return Me._SHIPPINGADDR
			End Get
			Set
				If (String.Equals(Me._SHIPPINGADDR, value) = false) Then
					Me.OnSHIPPINGADDRChanging(value)
					Me.SendPropertyChanging
					Me._SHIPPINGADDR = value
					Me.SendPropertyChanged("SHIPPINGADDR")
					Me.OnSHIPPINGADDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHPZIP", DbType:="VarChar(10)")>  _
		Public Property SHPZIP() As String
			Get
				Return Me._SHPZIP
			End Get
			Set
				If (String.Equals(Me._SHPZIP, value) = false) Then
					Me.OnSHPZIPChanging(value)
					Me.SendPropertyChanging
					Me._SHPZIP = value
					Me.SendPropertyChanged("SHPZIP")
					Me.OnSHPZIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHPDISTRICT", DbType:="VarChar(30)")>  _
		Public Property SHPDISTRICT() As String
			Get
				Return Me._SHPDISTRICT
			End Get
			Set
				If (String.Equals(Me._SHPDISTRICT, value) = false) Then
					Me.OnSHPDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._SHPDISTRICT = value
					Me.SendPropertyChanged("SHPDISTRICT")
					Me.OnSHPDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHPCITY", DbType:="VarChar(30)")>  _
		Public Property SHPCITY() As String
			Get
				Return Me._SHPCITY
			End Get
			Set
				If (String.Equals(Me._SHPCITY, value) = false) Then
					Me.OnSHPCITYChanging(value)
					Me.SendPropertyChanging
					Me._SHPCITY = value
					Me.SendPropertyChanged("SHPCITY")
					Me.OnSHPCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPDATE", DbType:="DateTime")>  _
		Public Property SHIPDATE() As System.Nullable(Of Date)
			Get
				Return Me._SHIPDATE
			End Get
			Set
				If (Me._SHIPDATE.Equals(value) = false) Then
					Me.OnSHIPDATEChanging(value)
					Me.SendPropertyChanging
					Me._SHIPDATE = value
					Me.SendPropertyChanged("SHIPDATE")
					Me.OnSHIPDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DELIVDATE", DbType:="DateTime")>  _
		Public Property DELIVDATE() As System.Nullable(Of Date)
			Get
				Return Me._DELIVDATE
			End Get
			Set
				If (Me._DELIVDATE.Equals(value) = false) Then
					Me.OnDELIVDATEChanging(value)
					Me.SendPropertyChanging
					Me._DELIVDATE = value
					Me.SendPropertyChanged("DELIVDATE")
					Me.OnDELIVDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCDOCS", DbType:="VarChar(2000)")>  _
		Public Property PROCDOCS() As String
			Get
				Return Me._PROCDOCS
			End Get
			Set
				If (String.Equals(Me._PROCDOCS, value) = false) Then
					Me.OnPROCDOCSChanging(value)
					Me.SendPropertyChanging
					Me._PROCDOCS = value
					Me.SendPropertyChanged("PROCDOCS")
					Me.OnPROCDOCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCDOCS1", DbType:="VarChar(2000)")>  _
		Public Property PROCDOCS1() As String
			Get
				Return Me._PROCDOCS1
			End Get
			Set
				If (String.Equals(Me._PROCDOCS1, value) = false) Then
					Me.OnPROCDOCS1Changing(value)
					Me.SendPropertyChanging
					Me._PROCDOCS1 = value
					Me.SendPropertyChanged("PROCDOCS1")
					Me.OnPROCDOCS1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERTRDR", DbType:="Int")>  _
		Public Property ORDERTRDR() As System.Nullable(Of Integer)
			Get
				Return Me._ORDERTRDR
			End Get
			Set
				If (Me._ORDERTRDR.Equals(value) = false) Then
					Me.OnORDERTRDRChanging(value)
					Me.SendPropertyChanging
					Me._ORDERTRDR = value
					Me.SendPropertyChanged("ORDERTRDR")
					Me.OnORDERTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERTRDBRANCH", DbType:="Int")>  _
		Public Property ORDERTRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._ORDERTRDBRANCH
			End Get
			Set
				If (Me._ORDERTRDBRANCH.Equals(value) = false) Then
					Me.OnORDERTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._ORDERTRDBRANCH = value
					Me.SendPropertyChanged("ORDERTRDBRANCH")
					Me.OnORDERTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPTRDR", DbType:="Int")>  _
		Public Property SHIPTRDR() As System.Nullable(Of Integer)
			Get
				Return Me._SHIPTRDR
			End Get
			Set
				If (Me._SHIPTRDR.Equals(value) = false) Then
					Me.OnSHIPTRDRChanging(value)
					Me.SendPropertyChanging
					Me._SHIPTRDR = value
					Me.SendPropertyChanged("SHIPTRDR")
					Me.OnSHIPTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPTRDBRANCH", DbType:="Int")>  _
		Public Property SHIPTRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._SHIPTRDBRANCH
			End Get
			Set
				If (Me._SHIPTRDBRANCH.Equals(value) = false) Then
					Me.OnSHIPTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._SHIPTRDBRANCH = value
					Me.SendPropertyChanged("SHIPTRDBRANCH")
					Me.OnSHIPTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILLTRDR", DbType:="Int")>  _
		Public Property BILLTRDR() As System.Nullable(Of Integer)
			Get
				Return Me._BILLTRDR
			End Get
			Set
				If (Me._BILLTRDR.Equals(value) = false) Then
					Me.OnBILLTRDRChanging(value)
					Me.SendPropertyChanging
					Me._BILLTRDR = value
					Me.SendPropertyChanged("BILLTRDR")
					Me.OnBILLTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BILLTRDBRANCH", DbType:="Int")>  _
		Public Property BILLTRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._BILLTRDBRANCH
			End Get
			Set
				If (Me._BILLTRDBRANCH.Equals(value) = false) Then
					Me.OnBILLTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BILLTRDBRANCH = value
					Me.SendPropertyChanged("BILLTRDBRANCH")
					Me.OnBILLTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", DbType:="Int")>  _
		Public Property MTRL() As System.Nullable(Of Integer)
			Get
				Return Me._MTRL
			End Get
			Set
				If (Me._MTRL.Equals(value) = false) Then
					If Me._MTRL1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnMTRLChanging(value)
					Me.SendPropertyChanging
					Me._MTRL = value
					Me.SendPropertyChanged("MTRL")
					Me.OnMTRLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SNCODE", DbType:="VarChar(50)")>  _
		Public Property SNCODE() As String
			Get
				Return Me._SNCODE
			End Get
			Set
				If (String.Equals(Me._SNCODE, value) = false) Then
					Me.OnSNCODEChanging(value)
					Me.SendPropertyChanging
					Me._SNCODE = value
					Me.SendPropertyChanged("SNCODE")
					Me.OnSNCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCS", DbType:="Int")>  _
		Public Property SPCS() As System.Nullable(Of Integer)
			Get
				Return Me._SPCS
			End Get
			Set
				If (Me._SPCS.Equals(value) = false) Then
					Me.OnSPCSChanging(value)
					Me.SendPropertyChanging
					Me._SPCS = value
					Me.SendPropertyChanged("SPCS")
					Me.OnSPCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="Float NOT NULL")>  _
		Public Property QTY() As Double
			Get
				Return Me._QTY
			End Get
			Set
				If ((Me._QTY = value)  _
							= false) Then
					Me.OnQTYChanging(value)
					Me.SendPropertyChanging
					Me._QTY = value
					Me.SendPropertyChanged("QTY")
					Me.OnQTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1", DbType:="Float NOT NULL")>  _
		Public Property QTY1() As Double
			Get
				Return Me._QTY1
			End Get
			Set
				If ((Me._QTY1 = value)  _
							= false) Then
					Me.OnQTY1Changing(value)
					Me.SendPropertyChanging
					Me._QTY1 = value
					Me.SendPropertyChanged("QTY1")
					Me.OnQTY1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY2", DbType:="Float NOT NULL")>  _
		Public Property QTY2() As Double
			Get
				Return Me._QTY2
			End Get
			Set
				If ((Me._QTY2 = value)  _
							= false) Then
					Me.OnQTY2Changing(value)
					Me.SendPropertyChanging
					Me._QTY2 = value
					Me.SendPropertyChanged("QTY2")
					Me.OnQTY2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1S", DbType:="Float NOT NULL")>  _
		Public Property QTY1S() As Double
			Get
				Return Me._QTY1S
			End Get
			Set
				If ((Me._QTY1S = value)  _
							= false) Then
					Me.OnQTY1SChanging(value)
					Me.SendPropertyChanging
					Me._QTY1S = value
					Me.SendPropertyChanged("QTY1S")
					Me.OnQTY1SChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1A", DbType:="Float NOT NULL")>  _
		Public Property QTY1A() As Double
			Get
				Return Me._QTY1A
			End Get
			Set
				If ((Me._QTY1A = value)  _
							= false) Then
					Me.OnQTY1AChanging(value)
					Me.SendPropertyChanging
					Me._QTY1A = value
					Me.SendPropertyChanged("QTY1A")
					Me.OnQTY1AChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WASTE", DbType:="Float NOT NULL")>  _
		Public Property WASTE() As Double
			Get
				Return Me._WASTE
			End Get
			Set
				If ((Me._WASTE = value)  _
							= false) Then
					Me.OnWASTEChanging(value)
					Me.SendPropertyChanging
					Me._WASTE = value
					Me.SendPropertyChanged("WASTE")
					Me.OnWASTEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTCOEF", DbType:="Float NOT NULL")>  _
		Public Property COSTCOEF() As Double
			Get
				Return Me._COSTCOEF
			End Get
			Set
				If ((Me._COSTCOEF = value)  _
							= false) Then
					Me.OnCOSTCOEFChanging(value)
					Me.SendPropertyChanging
					Me._COSTCOEF = value
					Me.SendPropertyChanged("COSTCOEF")
					Me.OnCOSTCOEFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAGE", DbType:="SmallInt")>  _
		Public Property STAGE() As System.Nullable(Of Short)
			Get
				Return Me._STAGE
			End Get
			Set
				If (Me._STAGE.Equals(value) = false) Then
					Me.OnSTAGEChanging(value)
					Me.SendPropertyChanging
					Me._STAGE = value
					Me.SendPropertyChanged("STAGE")
					Me.OnSTAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRSTS", DbType:="SmallInt")>  _
		Public Property MTRSTS() As System.Nullable(Of Short)
			Get
				Return Me._MTRSTS
			End Get
			Set
				If (Me._MTRSTS.Equals(value) = false) Then
					Me.OnMTRSTSChanging(value)
					Me.SendPropertyChanging
					Me._MTRSTS = value
					Me.SendPropertyChanged("MTRSTS")
					Me.OnMTRSTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESCVAL", DbType:="Float NOT NULL")>  _
		Public Property SALESCVAL() As Double
			Get
				Return Me._SALESCVAL
			End Get
			Set
				If ((Me._SALESCVAL = value)  _
							= false) Then
					Me.OnSALESCVALChanging(value)
					Me.SendPropertyChanging
					Me._SALESCVAL = value
					Me.SendPropertyChanged("SALESCVAL")
					Me.OnSALESCVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1H", DbType:="Float NOT NULL")>  _
		Public Property QTY1H() As Double
			Get
				Return Me._QTY1H
			End Get
			Set
				If ((Me._QTY1H = value)  _
							= false) Then
					Me.OnQTY1HChanging(value)
					Me.SendPropertyChanging
					Me._QTY1H = value
					Me.SendPropertyChanged("QTY1H")
					Me.OnQTY1HChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY2H", DbType:="Float NOT NULL")>  _
		Public Property QTY2H() As Double
			Get
				Return Me._QTY2H
			End Get
			Set
				If ((Me._QTY2H = value)  _
							= false) Then
					Me.OnQTY2HChanging(value)
					Me.SendPropertyChanging
					Me._QTY2H = value
					Me.SendPropertyChanged("QTY2H")
					Me.OnQTY2HChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSIGNB", DbType:="VarChar(128)")>  _
		Public Property SOSIGNB() As String
			Get
				Return Me._SOSIGNB
			End Get
			Set
				If (String.Equals(Me._SOSIGNB, value) = false) Then
					Me.OnSOSIGNBChanging(value)
					Me.SendPropertyChanging
					Me._SOSIGNB = value
					Me.SendPropertyChanged("SOSIGNB")
					Me.OnSOSIGNBChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSIGNE", DbType:="VarChar(128)")>  _
		Public Property SOSIGNE() As String
			Get
				Return Me._SOSIGNE
			End Get
			Set
				If (String.Equals(Me._SOSIGNE, value) = false) Then
					Me.OnSOSIGNEChanging(value)
					Me.SendPropertyChanging
					Me._SOSIGNE = value
					Me.SendPropertyChanged("SOSIGNE")
					Me.OnSOSIGNEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_S1INV", DbType:="SmallInt")>  _
		Public Property S1INV() As System.Nullable(Of Short)
			Get
				Return Me._S1INV
			End Get
			Set
				If (Me._S1INV.Equals(value) = false) Then
					Me.OnS1INVChanging(value)
					Me.SendPropertyChanging
					Me._S1INV = value
					Me.SendPropertyChanged("S1INV")
					Me.OnS1INVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGINTCOUNTRY", DbType:="SmallInt")>  _
		Public Property BGINTCOUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._BGINTCOUNTRY
			End Get
			Set
				If (Me._BGINTCOUNTRY.Equals(value) = false) Then
					Me.OnBGINTCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._BGINTCOUNTRY = value
					Me.SendPropertyChanged("BGINTCOUNTRY")
					Me.OnBGINTCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECEIPTCARD", DbType:="VarChar(25)")>  _
		Public Property RECEIPTCARD() As String
			Get
				Return Me._RECEIPTCARD
			End Get
			Set
				If (String.Equals(Me._RECEIPTCARD, value) = false) Then
					Me.OnRECEIPTCARDChanging(value)
					Me.SendPropertyChanging
					Me._RECEIPTCARD = value
					Me.SendPropertyChanged("RECEIPTCARD")
					Me.OnRECEIPTCARDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FROMDATE", DbType:="DateTime")>  _
		Public Property FROMDATE() As System.Nullable(Of Date)
			Get
				Return Me._FROMDATE
			End Get
			Set
				If (Me._FROMDATE.Equals(value) = false) Then
					Me.OnFROMDATEChanging(value)
					Me.SendPropertyChanging
					Me._FROMDATE = value
					Me.SendPropertyChanged("FROMDATE")
					Me.OnFROMDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINALDATE", DbType:="DateTime")>  _
		Public Property FINALDATE() As System.Nullable(Of Date)
			Get
				Return Me._FINALDATE
			End Get
			Set
				If (Me._FINALDATE.Equals(value) = false) Then
					Me.OnFINALDATEChanging(value)
					Me.SendPropertyChanging
					Me._FINALDATE = value
					Me.SendPropertyChanged("FINALDATE")
					Me.OnFINALDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION", DbType:="DateTime")>  _
		Public Property DURATION() As System.Nullable(Of Date)
			Get
				Return Me._DURATION
			End Get
			Set
				If (Me._DURATION.Equals(value) = false) Then
					Me.OnDURATIONChanging(value)
					Me.SendPropertyChanging
					Me._DURATION = value
					Me.SendPropertyChanged("DURATION")
					Me.OnDURATIONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDPRSN", DbType:="Int")>  _
		Public Property TRDPRSN() As System.Nullable(Of Integer)
			Get
				Return Me._TRDPRSN
			End Get
			Set
				If (Me._TRDPRSN.Equals(value) = false) Then
					Me.OnTRDPRSNChanging(value)
					Me.SendPropertyChanging
					Me._TRDPRSN = value
					Me.SendPropertyChanged("TRDPRSN")
					Me.OnTRDPRSNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTSTATUS", DbType:="SmallInt")>  _
		Public Property ACTSTATUS() As System.Nullable(Of Short)
			Get
				Return Me._ACTSTATUS
			End Get
			Set
				If (Me._ACTSTATUS.Equals(value) = false) Then
					Me.OnACTSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._ACTSTATUS = value
					Me.SendPropertyChanged("ACTSTATUS")
					Me.OnACTSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SORELDOC", DbType:="VarChar(50)")>  _
		Public Property SORELDOC() As String
			Get
				Return Me._SORELDOC
			End Get
			Set
				If (String.Equals(Me._SORELDOC, value) = false) Then
					Me.OnSORELDOCChanging(value)
					Me.SendPropertyChanging
					Me._SORELDOC = value
					Me.SendPropertyChanged("SORELDOC")
					Me.OnSORELDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTOTSHIPVALUE", DbType:="Float")>  _
		Public Property ccCTOTSHIPVALUE() As System.Nullable(Of Double)
			Get
				Return Me._ccCTOTSHIPVALUE
			End Get
			Set
				If (Me._ccCTOTSHIPVALUE.Equals(value) = false) Then
					Me.OnccCTOTSHIPVALUEChanging(value)
					Me.SendPropertyChanging
					Me._ccCTOTSHIPVALUE = value
					Me.SendPropertyChanged("ccCTOTSHIPVALUE")
					Me.OnccCTOTSHIPVALUEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCLockShipValue", DbType:="SmallInt NOT NULL")>  _
		Public Property ccCLockShipValue() As Short
			Get
				Return Me._ccCLockShipValue
			End Get
			Set
				If ((Me._ccCLockShipValue = value)  _
							= false) Then
					Me.OnccCLockShipValueChanging(value)
					Me.SendPropertyChanging
					Me._ccCLockShipValue = value
					Me.SendPropertyChanged("ccCLockShipValue")
					Me.OnccCLockShipValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCShippingNo", DbType:="VarChar(100)")>  _
		Public Property ccCShippingNo() As String
			Get
				Return Me._ccCShippingNo
			End Get
			Set
				If (String.Equals(Me._ccCShippingNo, value) = false) Then
					Me.OnccCShippingNoChanging(value)
					Me.SendPropertyChanging
					Me._ccCShippingNo = value
					Me.SendPropertyChanged("ccCShippingNo")
					Me.OnccCShippingNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_MTRDOC", Storage:="_FINDOC1", ThisKey:="FINDOC", OtherKey:="FINDOC", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property FINDOC1() As FINDOC
			Get
				Return Me._FINDOC1.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC1.Entity = Nothing
						previousValue.MTRDOC = Nothing
					End If
					Me._FINDOC1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRDOC = Me
						Me._FINDOC = value.FINDOC
					Else
						Me._FINDOC = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("FINDOC1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MTRL_MTRDOC", Storage:="_MTRL1", ThisKey:="MTRL", OtherKey:="MTRL", IsForeignKey:=true)>  _
		Public Property MTRL1() As MTRL
			Get
				Return Me._MTRL1.Entity
			End Get
			Set
				Dim previousValue As MTRL = Me._MTRL1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._MTRL1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._MTRL1.Entity = Nothing
						previousValue.MTRDOCs.Remove(Me)
					End If
					Me._MTRL1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRDOCs.Add(Me)
						Me._MTRL = value.MTRL
					Else
						Me._MTRL = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("MTRL1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_MTRDOC", Storage:="_BRANCH", ThisKey:="COMPANY,BRANCHSEC", OtherKey:="COMPANY,BRANCH", IsForeignKey:=true)>  _
		Public Property BRANCH() As BRANCH
			Get
				Return Me._BRANCH.Entity
			End Get
			Set
				Dim previousValue As BRANCH = Me._BRANCH.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._BRANCH.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._BRANCH.Entity = Nothing
						previousValue.MTRDOCs.Remove(Me)
					End If
					Me._BRANCH.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRDOCs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._BRANCHSEC = value.BRANCH
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._BRANCHSEC = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("BRANCH")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRDOC", Storage:="_WHOUSE1", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE", IsForeignKey:=true)>  _
		Public Property WHOUSE1() As WHOUSE
			Get
				Return Me._WHOUSE1.Entity
			End Get
			Set
				Dim previousValue As WHOUSE = Me._WHOUSE1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSE1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSE1.Entity = Nothing
						previousValue.MTRDOCs.Remove(Me)
					End If
					Me._WHOUSE1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRDOCs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSE = value.WHOUSE
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSE = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSE1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRDOC1", Storage:="_WHOUSE2", ThisKey:="COMPANY,WHOUSESEC", OtherKey:="COMPANY,WHOUSE", IsForeignKey:=true)>  _
		Public Property WHOUSE2() As WHOUSE
			Get
				Return Me._WHOUSE2.Entity
			End Get
			Set
				Dim previousValue As WHOUSE = Me._WHOUSE2.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSE2.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSE2.Entity = Nothing
						previousValue.MTRDOCs1.Remove(Me)
					End If
					Me._WHOUSE2.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRDOCs1.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSESEC = value.WHOUSE
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSESEC = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSE2")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FINPAYTERMS")>  _
	Partial Public Class FINPAYTERM
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _FINPAYTERMS As Integer
		
		Private _FINDOC As Integer
		
		Private _LINENUM As Integer
		
		Private _FINPAY As Integer
		
		Private _TRDR As Integer
		
		Private _TRDBRANCH As System.Nullable(Of Integer)
		
		Private _SOCURRENCY As Short
		
		Private _PAYDEMANDMD As Short
		
		Private _SOPAYTYPE As System.Nullable(Of Short)
		
		Private _ISCANCEL As Short
		
		Private _APPRV As Short
		
		Private _FINALDATE As Date
		
		Private _TRNDATE As Date
		
		Private _ENDDATE As System.Nullable(Of Date)
		
		Private _TRDRRATE As Double
		
		Private _AMNT As Double
		
		Private _TAMNT As Double
		
		Private _LAMNT As Double
		
		Private _OPNTAMNT As Double
		
		Private _ISCLOSE As Short
		
		Private _COMMENTS As String
		
		Private _PAYMENT As System.Nullable(Of Short)
		
		Private _PAYGRPVAL As System.Nullable(Of Integer)
		
		Private _INSTALMENT As System.Nullable(Of Short)
		
		Private _COMMITION As System.Nullable(Of Double)
		
		Private _TRDFLINES As System.Nullable(Of Integer)
		
		Private _FINPAYTERMSS As System.Nullable(Of Integer)
		
		Private _FINDOCS As System.Nullable(Of Integer)
		
		Private _INSMODE As Short
		
		Private _OPENMODE As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _FINDOCDIFF As System.Nullable(Of Integer)
		
		Private _FXDIFF As System.Nullable(Of Short)
		
		Private _FINPAYTERMs1 As EntitySet(Of FINPAYTERM)
		
		Private _FINPAYTERM As EntityRef(Of FINPAYTERM)
		
		Private _FINDOC1 As EntityRef(Of FINDOC)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnFINPAYTERMSChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINPAYTERMSChanged()
    End Sub
    Partial Private Sub OnFINDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINDOCChanged()
    End Sub
    Partial Private Sub OnLINENUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnLINENUMChanged()
    End Sub
    Partial Private Sub OnFINPAYChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINPAYChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCURRENCYChanged()
    End Sub
    Partial Private Sub OnPAYDEMANDMDChanging(value As Short)
    End Sub
    Partial Private Sub OnPAYDEMANDMDChanged()
    End Sub
    Partial Private Sub OnSOPAYTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOPAYTYPEChanged()
    End Sub
    Partial Private Sub OnISCANCELChanging(value As Short)
    End Sub
    Partial Private Sub OnISCANCELChanged()
    End Sub
    Partial Private Sub OnAPPRVChanging(value As Short)
    End Sub
    Partial Private Sub OnAPPRVChanged()
    End Sub
    Partial Private Sub OnFINALDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnFINALDATEChanged()
    End Sub
    Partial Private Sub OnTRNDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnTRNDATEChanged()
    End Sub
    Partial Private Sub OnENDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnENDDATEChanged()
    End Sub
    Partial Private Sub OnTRDRRATEChanging(value As Double)
    End Sub
    Partial Private Sub OnTRDRRATEChanged()
    End Sub
    Partial Private Sub OnAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnAMNTChanged()
    End Sub
    Partial Private Sub OnTAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnTAMNTChanged()
    End Sub
    Partial Private Sub OnLAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnLAMNTChanged()
    End Sub
    Partial Private Sub OnOPNTAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnOPNTAMNTChanged()
    End Sub
    Partial Private Sub OnISCLOSEChanging(value As Short)
    End Sub
    Partial Private Sub OnISCLOSEChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnPAYMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPAYMENTChanged()
    End Sub
    Partial Private Sub OnPAYGRPVALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAYGRPVALChanged()
    End Sub
    Partial Private Sub OnINSTALMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSTALMENTChanged()
    End Sub
    Partial Private Sub OnCOMMITIONChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCOMMITIONChanged()
    End Sub
    Partial Private Sub OnTRDFLINESChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDFLINESChanged()
    End Sub
    Partial Private Sub OnFINPAYTERMSSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINPAYTERMSSChanged()
    End Sub
    Partial Private Sub OnFINDOCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCSChanged()
    End Sub
    Partial Private Sub OnINSMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnINSMODEChanged()
    End Sub
    Partial Private Sub OnOPENMODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnOPENMODEChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnFINDOCDIFFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCDIFFChanged()
    End Sub
    Partial Private Sub OnFXDIFFChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFXDIFFChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FINPAYTERMs1 = New EntitySet(Of FINPAYTERM)(AddressOf Me.attach_FINPAYTERMs1, AddressOf Me.detach_FINPAYTERMs1)
			Me._FINPAYTERM = CType(Nothing, EntityRef(Of FINPAYTERM))
			Me._FINDOC1 = CType(Nothing, EntityRef(Of FINDOC))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINPAYTERMS", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property FINPAYTERMS() As Integer
			Get
				Return Me._FINPAYTERMS
			End Get
			Set
				If ((Me._FINPAYTERMS = value)  _
							= false) Then
					Me.OnFINPAYTERMSChanging(value)
					Me.SendPropertyChanging
					Me._FINPAYTERMS = value
					Me.SendPropertyChanged("FINPAYTERMS")
					Me.OnFINPAYTERMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL")>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					If Me._FINDOC1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOC = value
					Me.SendPropertyChanged("FINDOC")
					Me.OnFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINENUM", DbType:="Int NOT NULL")>  _
		Public Property LINENUM() As Integer
			Get
				Return Me._LINENUM
			End Get
			Set
				If ((Me._LINENUM = value)  _
							= false) Then
					Me.OnLINENUMChanging(value)
					Me.SendPropertyChanging
					Me._LINENUM = value
					Me.SendPropertyChanged("LINENUM")
					Me.OnLINENUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINPAY", DbType:="Int NOT NULL")>  _
		Public Property FINPAY() As Integer
			Get
				Return Me._FINPAY
			End Get
			Set
				If ((Me._FINPAY = value)  _
							= false) Then
					Me.OnFINPAYChanging(value)
					Me.SendPropertyChanging
					Me._FINPAY = value
					Me.SendPropertyChanged("FINPAY")
					Me.OnFINPAYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int")>  _
		Public Property TRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If (Me._TRDBRANCH.Equals(value) = false) Then
					Me.OnTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCH = value
					Me.SendPropertyChanged("TRDBRANCH")
					Me.OnTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me.OnSOCURRENCYChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCY = value
					Me.SendPropertyChanged("SOCURRENCY")
					Me.OnSOCURRENCYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYDEMANDMD", DbType:="SmallInt NOT NULL")>  _
		Public Property PAYDEMANDMD() As Short
			Get
				Return Me._PAYDEMANDMD
			End Get
			Set
				If ((Me._PAYDEMANDMD = value)  _
							= false) Then
					Me.OnPAYDEMANDMDChanging(value)
					Me.SendPropertyChanging
					Me._PAYDEMANDMD = value
					Me.SendPropertyChanged("PAYDEMANDMD")
					Me.OnPAYDEMANDMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPAYTYPE", DbType:="SmallInt")>  _
		Public Property SOPAYTYPE() As System.Nullable(Of Short)
			Get
				Return Me._SOPAYTYPE
			End Get
			Set
				If (Me._SOPAYTYPE.Equals(value) = false) Then
					Me.OnSOPAYTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SOPAYTYPE = value
					Me.SendPropertyChanged("SOPAYTYPE")
					Me.OnSOPAYTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCANCEL", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCANCEL() As Short
			Get
				Return Me._ISCANCEL
			End Get
			Set
				If ((Me._ISCANCEL = value)  _
							= false) Then
					Me.OnISCANCELChanging(value)
					Me.SendPropertyChanging
					Me._ISCANCEL = value
					Me.SendPropertyChanged("ISCANCEL")
					Me.OnISCANCELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPRV", DbType:="SmallInt NOT NULL")>  _
		Public Property APPRV() As Short
			Get
				Return Me._APPRV
			End Get
			Set
				If ((Me._APPRV = value)  _
							= false) Then
					Me.OnAPPRVChanging(value)
					Me.SendPropertyChanging
					Me._APPRV = value
					Me.SendPropertyChanged("APPRV")
					Me.OnAPPRVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINALDATE", DbType:="DateTime NOT NULL")>  _
		Public Property FINALDATE() As Date
			Get
				Return Me._FINALDATE
			End Get
			Set
				If ((Me._FINALDATE = value)  _
							= false) Then
					Me.OnFINALDATEChanging(value)
					Me.SendPropertyChanging
					Me._FINALDATE = value
					Me.SendPropertyChanged("FINALDATE")
					Me.OnFINALDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime NOT NULL")>  _
		Public Property TRNDATE() As Date
			Get
				Return Me._TRNDATE
			End Get
			Set
				If ((Me._TRNDATE = value)  _
							= false) Then
					Me.OnTRNDATEChanging(value)
					Me.SendPropertyChanging
					Me._TRNDATE = value
					Me.SendPropertyChanged("TRNDATE")
					Me.OnTRNDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENDDATE", DbType:="DateTime")>  _
		Public Property ENDDATE() As System.Nullable(Of Date)
			Get
				Return Me._ENDDATE
			End Get
			Set
				If (Me._ENDDATE.Equals(value) = false) Then
					Me.OnENDDATEChanging(value)
					Me.SendPropertyChanging
					Me._ENDDATE = value
					Me.SendPropertyChanged("ENDDATE")
					Me.OnENDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRRATE", DbType:="Float NOT NULL")>  _
		Public Property TRDRRATE() As Double
			Get
				Return Me._TRDRRATE
			End Get
			Set
				If ((Me._TRDRRATE = value)  _
							= false) Then
					Me.OnTRDRRATEChanging(value)
					Me.SendPropertyChanging
					Me._TRDRRATE = value
					Me.SendPropertyChanged("TRDRRATE")
					Me.OnTRDRRATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMNT", DbType:="Float NOT NULL")>  _
		Public Property AMNT() As Double
			Get
				Return Me._AMNT
			End Get
			Set
				If ((Me._AMNT = value)  _
							= false) Then
					Me.OnAMNTChanging(value)
					Me.SendPropertyChanging
					Me._AMNT = value
					Me.SendPropertyChanged("AMNT")
					Me.OnAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMNT", DbType:="Float NOT NULL")>  _
		Public Property TAMNT() As Double
			Get
				Return Me._TAMNT
			End Get
			Set
				If ((Me._TAMNT = value)  _
							= false) Then
					Me.OnTAMNTChanging(value)
					Me.SendPropertyChanging
					Me._TAMNT = value
					Me.SendPropertyChanged("TAMNT")
					Me.OnTAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAMNT", DbType:="Float NOT NULL")>  _
		Public Property LAMNT() As Double
			Get
				Return Me._LAMNT
			End Get
			Set
				If ((Me._LAMNT = value)  _
							= false) Then
					Me.OnLAMNTChanging(value)
					Me.SendPropertyChanging
					Me._LAMNT = value
					Me.SendPropertyChanged("LAMNT")
					Me.OnLAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNTAMNT", DbType:="Float NOT NULL")>  _
		Public Property OPNTAMNT() As Double
			Get
				Return Me._OPNTAMNT
			End Get
			Set
				If ((Me._OPNTAMNT = value)  _
							= false) Then
					Me.OnOPNTAMNTChanging(value)
					Me.SendPropertyChanging
					Me._OPNTAMNT = value
					Me.SendPropertyChanged("OPNTAMNT")
					Me.OnOPNTAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCLOSE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCLOSE() As Short
			Get
				Return Me._ISCLOSE
			End Get
			Set
				If ((Me._ISCLOSE = value)  _
							= false) Then
					Me.OnISCLOSEChanging(value)
					Me.SendPropertyChanging
					Me._ISCLOSE = value
					Me.SendPropertyChanged("ISCLOSE")
					Me.OnISCLOSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT", DbType:="SmallInt")>  _
		Public Property PAYMENT() As System.Nullable(Of Short)
			Get
				Return Me._PAYMENT
			End Get
			Set
				If (Me._PAYMENT.Equals(value) = false) Then
					Me.OnPAYMENTChanging(value)
					Me.SendPropertyChanging
					Me._PAYMENT = value
					Me.SendPropertyChanged("PAYMENT")
					Me.OnPAYMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYGRPVAL", DbType:="Int")>  _
		Public Property PAYGRPVAL() As System.Nullable(Of Integer)
			Get
				Return Me._PAYGRPVAL
			End Get
			Set
				If (Me._PAYGRPVAL.Equals(value) = false) Then
					Me.OnPAYGRPVALChanging(value)
					Me.SendPropertyChanging
					Me._PAYGRPVAL = value
					Me.SendPropertyChanged("PAYGRPVAL")
					Me.OnPAYGRPVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTALMENT", DbType:="SmallInt")>  _
		Public Property INSTALMENT() As System.Nullable(Of Short)
			Get
				Return Me._INSTALMENT
			End Get
			Set
				If (Me._INSTALMENT.Equals(value) = false) Then
					Me.OnINSTALMENTChanging(value)
					Me.SendPropertyChanging
					Me._INSTALMENT = value
					Me.SendPropertyChanged("INSTALMENT")
					Me.OnINSTALMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMITION", DbType:="Float")>  _
		Public Property COMMITION() As System.Nullable(Of Double)
			Get
				Return Me._COMMITION
			End Get
			Set
				If (Me._COMMITION.Equals(value) = false) Then
					Me.OnCOMMITIONChanging(value)
					Me.SendPropertyChanging
					Me._COMMITION = value
					Me.SendPropertyChanged("COMMITION")
					Me.OnCOMMITIONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDFLINES", DbType:="Int")>  _
		Public Property TRDFLINES() As System.Nullable(Of Integer)
			Get
				Return Me._TRDFLINES
			End Get
			Set
				If (Me._TRDFLINES.Equals(value) = false) Then
					Me.OnTRDFLINESChanging(value)
					Me.SendPropertyChanging
					Me._TRDFLINES = value
					Me.SendPropertyChanged("TRDFLINES")
					Me.OnTRDFLINESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINPAYTERMSS", DbType:="Int")>  _
		Public Property FINPAYTERMSS() As System.Nullable(Of Integer)
			Get
				Return Me._FINPAYTERMSS
			End Get
			Set
				If (Me._FINPAYTERMSS.Equals(value) = false) Then
					If Me._FINPAYTERM.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINPAYTERMSSChanging(value)
					Me.SendPropertyChanging
					Me._FINPAYTERMSS = value
					Me.SendPropertyChanged("FINPAYTERMSS")
					Me.OnFINPAYTERMSSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCS", DbType:="Int")>  _
		Public Property FINDOCS() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCS
			End Get
			Set
				If (Me._FINDOCS.Equals(value) = false) Then
					Me.OnFINDOCSChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCS = value
					Me.SendPropertyChanged("FINDOCS")
					Me.OnFINDOCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property INSMODE() As Short
			Get
				Return Me._INSMODE
			End Get
			Set
				If ((Me._INSMODE = value)  _
							= false) Then
					Me.OnINSMODEChanging(value)
					Me.SendPropertyChanging
					Me._INSMODE = value
					Me.SendPropertyChanged("INSMODE")
					Me.OnINSMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPENMODE", DbType:="SmallInt")>  _
		Public Property OPENMODE() As System.Nullable(Of Short)
			Get
				Return Me._OPENMODE
			End Get
			Set
				If (Me._OPENMODE.Equals(value) = false) Then
					Me.OnOPENMODEChanging(value)
					Me.SendPropertyChanging
					Me._OPENMODE = value
					Me.SendPropertyChanged("OPENMODE")
					Me.OnOPENMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCDIFF", DbType:="Int")>  _
		Public Property FINDOCDIFF() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCDIFF
			End Get
			Set
				If (Me._FINDOCDIFF.Equals(value) = false) Then
					Me.OnFINDOCDIFFChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCDIFF = value
					Me.SendPropertyChanged("FINDOCDIFF")
					Me.OnFINDOCDIFFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FXDIFF", DbType:="SmallInt")>  _
		Public Property FXDIFF() As System.Nullable(Of Short)
			Get
				Return Me._FXDIFF
			End Get
			Set
				If (Me._FXDIFF.Equals(value) = false) Then
					Me.OnFXDIFFChanging(value)
					Me.SendPropertyChanging
					Me._FXDIFF = value
					Me.SendPropertyChanged("FXDIFF")
					Me.OnFXDIFFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINPAYTERM_FINPAYTERM", Storage:="_FINPAYTERMs1", ThisKey:="FINPAYTERMS", OtherKey:="FINPAYTERMSS")>  _
		Public Property FINPAYTERMs1() As EntitySet(Of FINPAYTERM)
			Get
				Return Me._FINPAYTERMs1
			End Get
			Set
				Me._FINPAYTERMs1.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINPAYTERM_FINPAYTERM", Storage:="_FINPAYTERM", ThisKey:="FINPAYTERMSS", OtherKey:="FINPAYTERMS", IsForeignKey:=true)>  _
		Public Property FINPAYTERM() As FINPAYTERM
			Get
				Return Me._FINPAYTERM.Entity
			End Get
			Set
				Dim previousValue As FINPAYTERM = Me._FINPAYTERM.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINPAYTERM.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINPAYTERM.Entity = Nothing
						previousValue.FINPAYTERMs1.Remove(Me)
					End If
					Me._FINPAYTERM.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINPAYTERMs1.Add(Me)
						Me._FINPAYTERMSS = value.FINPAYTERMS
					Else
						Me._FINPAYTERMSS = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("FINPAYTERM")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_FINPAYTERM", Storage:="_FINDOC1", ThisKey:="FINDOC", OtherKey:="FINDOC", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property FINDOC1() As FINDOC
			Get
				Return Me._FINDOC1.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC1.Entity = Nothing
						previousValue.FINPAYTERMs.Remove(Me)
					End If
					Me._FINDOC1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINPAYTERMs.Add(Me)
						Me._FINDOC = value.FINDOC
					Else
						Me._FINDOC = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("FINDOC1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_FINPAYTERMs1(ByVal entity As FINPAYTERM)
			Me.SendPropertyChanging
			entity.FINPAYTERM = Me
		End Sub
		
		Private Sub detach_FINPAYTERMs1(ByVal entity As FINPAYTERM)
			Me.SendPropertyChanging
			entity.FINPAYTERM = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MTRUNIT")>  _
	Partial Public Class MTRUNIT
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _MTRUNIT As Short
		
		Private _SHORTCUT As String
		
		Private _NAME As String
		
		Private _INTERCODE As String
		
		Private _QDECIMALS As Short
		
		Private _SODIM As Short
		
		Private _SODIV As Double
		
		Private _ACNMSK As String
		
		Private _ISACTIVE As Short
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnMTRUNITChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRUNITChanged()
    End Sub
    Partial Private Sub OnSHORTCUTChanging(value As String)
    End Sub
    Partial Private Sub OnSHORTCUTChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnINTERCODEChanging(value As String)
    End Sub
    Partial Private Sub OnINTERCODEChanged()
    End Sub
    Partial Private Sub OnQDECIMALSChanging(value As Short)
    End Sub
    Partial Private Sub OnQDECIMALSChanged()
    End Sub
    Partial Private Sub OnSODIMChanging(value As Short)
    End Sub
    Partial Private Sub OnSODIMChanged()
    End Sub
    Partial Private Sub OnSODIVChanging(value As Double)
    End Sub
    Partial Private Sub OnSODIVChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property MTRUNIT() As Short
			Get
				Return Me._MTRUNIT
			End Get
			Set
				If ((Me._MTRUNIT = value)  _
							= false) Then
					Me.OnMTRUNITChanging(value)
					Me.SendPropertyChanging
					Me._MTRUNIT = value
					Me.SendPropertyChanged("MTRUNIT")
					Me.OnMTRUNITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHORTCUT", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
		Public Property SHORTCUT() As String
			Get
				Return Me._SHORTCUT
			End Get
			Set
				If (String.Equals(Me._SHORTCUT, value) = false) Then
					Me.OnSHORTCUTChanging(value)
					Me.SendPropertyChanging
					Me._SHORTCUT = value
					Me.SendPropertyChanged("SHORTCUT")
					Me.OnSHORTCUTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTERCODE", DbType:="VarChar(5)")>  _
		Public Property INTERCODE() As String
			Get
				Return Me._INTERCODE
			End Get
			Set
				If (String.Equals(Me._INTERCODE, value) = false) Then
					Me.OnINTERCODEChanging(value)
					Me.SendPropertyChanging
					Me._INTERCODE = value
					Me.SendPropertyChanged("INTERCODE")
					Me.OnINTERCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDECIMALS", DbType:="SmallInt NOT NULL")>  _
		Public Property QDECIMALS() As Short
			Get
				Return Me._QDECIMALS
			End Get
			Set
				If ((Me._QDECIMALS = value)  _
							= false) Then
					Me.OnQDECIMALSChanging(value)
					Me.SendPropertyChanging
					Me._QDECIMALS = value
					Me.SendPropertyChanged("QDECIMALS")
					Me.OnQDECIMALSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODIM", DbType:="SmallInt NOT NULL")>  _
		Public Property SODIM() As Short
			Get
				Return Me._SODIM
			End Get
			Set
				If ((Me._SODIM = value)  _
							= false) Then
					Me.OnSODIMChanging(value)
					Me.SendPropertyChanging
					Me._SODIM = value
					Me.SendPropertyChanged("SODIM")
					Me.OnSODIMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODIV", DbType:="Float NOT NULL")>  _
		Public Property SODIV() As Double
			Get
				Return Me._SODIV
			End Get
			Set
				If ((Me._SODIV = value)  _
							= false) Then
					Me.OnSODIVChanging(value)
					Me.SendPropertyChanging
					Me._SODIV = value
					Me.SendPropertyChanged("SODIV")
					Me.OnSODIVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cccPriceListLines")>  _
	Partial Public Class cccPriceListLine
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _cccPriceListLines As Integer
		
		Private _Fromdate As System.Nullable(Of Date)
		
		Private _Finaldate As System.Nullable(Of Date)
		
		Private _Whouse As System.Nullable(Of Integer)
		
		Private _Trdr As System.Nullable(Of Integer)
		
		Private _Trdrbranch As System.Nullable(Of Integer)
		
		Private _District1 As System.Nullable(Of Integer)
		
		Private _Mtrl As System.Nullable(Of Integer)
		
		Private _Shipment As System.Nullable(Of Integer)
		
		Private _Price As System.Nullable(Of Double)
		
		Private _Disc1val As System.Nullable(Of Double)
		
		Private _Disc1prc As System.Nullable(Of Double)
		
		Private _cccPriceList As System.Nullable(Of Integer)
		
		Private _trdbusiness As System.Nullable(Of Integer)
		
		Private _qty1 As System.Nullable(Of Double)
		
		Private _cccSumGroup As System.Nullable(Of Integer)
		
		Private _createdOn As System.Nullable(Of Date)
		
		Private _createdBy As System.Nullable(Of Integer)
		
		Private _modifiedOn As System.Nullable(Of Date)
		
		Private _modifiedBy As System.Nullable(Of Integer)
		
		Private _cccPriceList1 As EntityRef(Of cccPriceList)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncccPriceListLinesChanging(value As Integer)
    End Sub
    Partial Private Sub OncccPriceListLinesChanged()
    End Sub
    Partial Private Sub OnFromdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFromdateChanged()
    End Sub
    Partial Private Sub OnFinaldateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFinaldateChanged()
    End Sub
    Partial Private Sub OnWhouseChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWhouseChanged()
    End Sub
    Partial Private Sub OnTrdrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTrdrChanged()
    End Sub
    Partial Private Sub OnTrdrbranchChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTrdrbranchChanged()
    End Sub
    Partial Private Sub OnDistrict1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDistrict1Changed()
    End Sub
    Partial Private Sub OnMtrlChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMtrlChanged()
    End Sub
    Partial Private Sub OnShipmentChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnShipmentChanged()
    End Sub
    Partial Private Sub OnPriceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPriceChanged()
    End Sub
    Partial Private Sub OnDisc1valChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDisc1valChanged()
    End Sub
    Partial Private Sub OnDisc1prcChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDisc1prcChanged()
    End Sub
    Partial Private Sub OncccPriceListChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncccPriceListChanged()
    End Sub
    Partial Private Sub OntrdbusinessChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntrdbusinessChanged()
    End Sub
    Partial Private Sub Onqty1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onqty1Changed()
    End Sub
    Partial Private Sub OncccSumGroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncccSumGroupChanged()
    End Sub
    Partial Private Sub OncreatedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncreatedOnChanged()
    End Sub
    Partial Private Sub OncreatedByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncreatedByChanged()
    End Sub
    Partial Private Sub OnmodifiedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnmodifiedOnChanged()
    End Sub
    Partial Private Sub OnmodifiedByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmodifiedByChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._cccPriceList1 = CType(Nothing, EntityRef(Of cccPriceList))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccPriceListLines", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property cccPriceListLines() As Integer
			Get
				Return Me._cccPriceListLines
			End Get
			Set
				If ((Me._cccPriceListLines = value)  _
							= false) Then
					Me.OncccPriceListLinesChanging(value)
					Me.SendPropertyChanging
					Me._cccPriceListLines = value
					Me.SendPropertyChanged("cccPriceListLines")
					Me.OncccPriceListLinesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fromdate", DbType:="DateTime")>  _
		Public Property Fromdate() As System.Nullable(Of Date)
			Get
				Return Me._Fromdate
			End Get
			Set
				If (Me._Fromdate.Equals(value) = false) Then
					Me.OnFromdateChanging(value)
					Me.SendPropertyChanging
					Me._Fromdate = value
					Me.SendPropertyChanged("Fromdate")
					Me.OnFromdateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Finaldate", DbType:="DateTime")>  _
		Public Property Finaldate() As System.Nullable(Of Date)
			Get
				Return Me._Finaldate
			End Get
			Set
				If (Me._Finaldate.Equals(value) = false) Then
					Me.OnFinaldateChanging(value)
					Me.SendPropertyChanging
					Me._Finaldate = value
					Me.SendPropertyChanged("Finaldate")
					Me.OnFinaldateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Whouse", DbType:="Int")>  _
		Public Property Whouse() As System.Nullable(Of Integer)
			Get
				Return Me._Whouse
			End Get
			Set
				If (Me._Whouse.Equals(value) = false) Then
					Me.OnWhouseChanging(value)
					Me.SendPropertyChanging
					Me._Whouse = value
					Me.SendPropertyChanged("Whouse")
					Me.OnWhouseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trdr", DbType:="Int")>  _
		Public Property Trdr() As System.Nullable(Of Integer)
			Get
				Return Me._Trdr
			End Get
			Set
				If (Me._Trdr.Equals(value) = false) Then
					Me.OnTrdrChanging(value)
					Me.SendPropertyChanging
					Me._Trdr = value
					Me.SendPropertyChanged("Trdr")
					Me.OnTrdrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trdrbranch", DbType:="Int")>  _
		Public Property Trdrbranch() As System.Nullable(Of Integer)
			Get
				Return Me._Trdrbranch
			End Get
			Set
				If (Me._Trdrbranch.Equals(value) = false) Then
					Me.OnTrdrbranchChanging(value)
					Me.SendPropertyChanging
					Me._Trdrbranch = value
					Me.SendPropertyChanged("Trdrbranch")
					Me.OnTrdrbranchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_District1", DbType:="Int")>  _
		Public Property District1() As System.Nullable(Of Integer)
			Get
				Return Me._District1
			End Get
			Set
				If (Me._District1.Equals(value) = false) Then
					Me.OnDistrict1Changing(value)
					Me.SendPropertyChanging
					Me._District1 = value
					Me.SendPropertyChanged("District1")
					Me.OnDistrict1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mtrl", DbType:="Int")>  _
		Public Property Mtrl() As System.Nullable(Of Integer)
			Get
				Return Me._Mtrl
			End Get
			Set
				If (Me._Mtrl.Equals(value) = false) Then
					Me.OnMtrlChanging(value)
					Me.SendPropertyChanging
					Me._Mtrl = value
					Me.SendPropertyChanged("Mtrl")
					Me.OnMtrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Shipment", DbType:="Int")>  _
		Public Property Shipment() As System.Nullable(Of Integer)
			Get
				Return Me._Shipment
			End Get
			Set
				If (Me._Shipment.Equals(value) = false) Then
					Me.OnShipmentChanging(value)
					Me.SendPropertyChanging
					Me._Shipment = value
					Me.SendPropertyChanged("Shipment")
					Me.OnShipmentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Float")>  _
		Public Property Price() As System.Nullable(Of Double)
			Get
				Return Me._Price
			End Get
			Set
				If (Me._Price.Equals(value) = false) Then
					Me.OnPriceChanging(value)
					Me.SendPropertyChanging
					Me._Price = value
					Me.SendPropertyChanged("Price")
					Me.OnPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disc1val", DbType:="Float")>  _
		Public Property Disc1val() As System.Nullable(Of Double)
			Get
				Return Me._Disc1val
			End Get
			Set
				If (Me._Disc1val.Equals(value) = false) Then
					Me.OnDisc1valChanging(value)
					Me.SendPropertyChanging
					Me._Disc1val = value
					Me.SendPropertyChanged("Disc1val")
					Me.OnDisc1valChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disc1prc", DbType:="Float")>  _
		Public Property Disc1prc() As System.Nullable(Of Double)
			Get
				Return Me._Disc1prc
			End Get
			Set
				If (Me._Disc1prc.Equals(value) = false) Then
					Me.OnDisc1prcChanging(value)
					Me.SendPropertyChanging
					Me._Disc1prc = value
					Me.SendPropertyChanged("Disc1prc")
					Me.OnDisc1prcChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccPriceList", DbType:="Int")>  _
		Public Property cccPriceList() As System.Nullable(Of Integer)
			Get
				Return Me._cccPriceList
			End Get
			Set
				If (Me._cccPriceList.Equals(value) = false) Then
					If Me._cccPriceList1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OncccPriceListChanging(value)
					Me.SendPropertyChanging
					Me._cccPriceList = value
					Me.SendPropertyChanged("cccPriceList")
					Me.OncccPriceListChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdbusiness", DbType:="Int")>  _
		Public Property trdbusiness() As System.Nullable(Of Integer)
			Get
				Return Me._trdbusiness
			End Get
			Set
				If (Me._trdbusiness.Equals(value) = false) Then
					Me.OntrdbusinessChanging(value)
					Me.SendPropertyChanging
					Me._trdbusiness = value
					Me.SendPropertyChanged("trdbusiness")
					Me.OntrdbusinessChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty1", DbType:="Float")>  _
		Public Property qty1() As System.Nullable(Of Double)
			Get
				Return Me._qty1
			End Get
			Set
				If (Me._qty1.Equals(value) = false) Then
					Me.Onqty1Changing(value)
					Me.SendPropertyChanging
					Me._qty1 = value
					Me.SendPropertyChanged("qty1")
					Me.Onqty1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccSumGroup", DbType:="Int")>  _
		Public Property cccSumGroup() As System.Nullable(Of Integer)
			Get
				Return Me._cccSumGroup
			End Get
			Set
				If (Me._cccSumGroup.Equals(value) = false) Then
					Me.OncccSumGroupChanging(value)
					Me.SendPropertyChanging
					Me._cccSumGroup = value
					Me.SendPropertyChanged("cccSumGroup")
					Me.OncccSumGroupChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_createdOn", DbType:="DateTime")>  _
		Public Property createdOn() As System.Nullable(Of Date)
			Get
				Return Me._createdOn
			End Get
			Set
				If (Me._createdOn.Equals(value) = false) Then
					Me.OncreatedOnChanging(value)
					Me.SendPropertyChanging
					Me._createdOn = value
					Me.SendPropertyChanged("createdOn")
					Me.OncreatedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_createdBy", DbType:="Int")>  _
		Public Property createdBy() As System.Nullable(Of Integer)
			Get
				Return Me._createdBy
			End Get
			Set
				If (Me._createdBy.Equals(value) = false) Then
					Me.OncreatedByChanging(value)
					Me.SendPropertyChanging
					Me._createdBy = value
					Me.SendPropertyChanged("createdBy")
					Me.OncreatedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifiedOn", DbType:="DateTime")>  _
		Public Property modifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._modifiedOn
			End Get
			Set
				If (Me._modifiedOn.Equals(value) = false) Then
					Me.OnmodifiedOnChanging(value)
					Me.SendPropertyChanging
					Me._modifiedOn = value
					Me.SendPropertyChanged("modifiedOn")
					Me.OnmodifiedOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifiedBy", DbType:="Int")>  _
		Public Property modifiedBy() As System.Nullable(Of Integer)
			Get
				Return Me._modifiedBy
			End Get
			Set
				If (Me._modifiedBy.Equals(value) = false) Then
					Me.OnmodifiedByChanging(value)
					Me.SendPropertyChanging
					Me._modifiedBy = value
					Me.SendPropertyChanged("modifiedBy")
					Me.OnmodifiedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cccPriceList_cccPriceListLine", Storage:="_cccPriceList1", ThisKey:="cccPriceList", OtherKey:="cccPriceList", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
		Public Property cccPriceList1() As cccPriceList
			Get
				Return Me._cccPriceList1.Entity
			End Get
			Set
				Dim previousValue As cccPriceList = Me._cccPriceList1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._cccPriceList1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._cccPriceList1.Entity = Nothing
						previousValue.cccPriceListLines.Remove(Me)
					End If
					Me._cccPriceList1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.cccPriceListLines.Add(Me)
						Me._cccPriceList = value.cccPriceList
					Else
						Me._cccPriceList = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("cccPriceList1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MTREXTRA")>  _
	Partial Public Class MTREXTRA
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SODTYPE As Short
		
		Private _MTRL As Integer
		
		Private _VARCHAR01 As String
		
		Private _VARCHAR02 As String
		
		Private _VARCHAR03 As String
		
		Private _VARCHAR04 As String
		
		Private _VARCHAR05 As String
		
		Private _NUM01 As System.Nullable(Of Double)
		
		Private _NUM02 As System.Nullable(Of Double)
		
		Private _NUM03 As System.Nullable(Of Double)
		
		Private _NUM04 As System.Nullable(Of Double)
		
		Private _NUM05 As System.Nullable(Of Double)
		
		Private _UTBL01 As System.Nullable(Of Short)
		
		Private _UTBL02 As System.Nullable(Of Short)
		
		Private _UTBL03 As System.Nullable(Of Short)
		
		Private _UTBL04 As System.Nullable(Of Short)
		
		Private _UTBL05 As System.Nullable(Of Short)
		
		Private _DATE01 As System.Nullable(Of Date)
		
		Private _DATE02 As System.Nullable(Of Date)
		
		Private _DATE03 As System.Nullable(Of Date)
		
		Private _DATE04 As System.Nullable(Of Date)
		
		Private _DATE05 As System.Nullable(Of Date)
		
		Private _BOOL01 As Short
		
		Private _BOOL02 As Short
		
		Private _BOOL03 As Short
		
		Private _BOOL04 As Short
		
		Private _PRINTLABEL As System.Nullable(Of Short)
		
		Private _MTRL1 As EntityRef(Of MTRL)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnMTRLChanging(value As Integer)
    End Sub
    Partial Private Sub OnMTRLChanged()
    End Sub
    Partial Private Sub OnVARCHAR01Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR01Changed()
    End Sub
    Partial Private Sub OnVARCHAR02Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR02Changed()
    End Sub
    Partial Private Sub OnVARCHAR03Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR03Changed()
    End Sub
    Partial Private Sub OnVARCHAR04Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR04Changed()
    End Sub
    Partial Private Sub OnVARCHAR05Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR05Changed()
    End Sub
    Partial Private Sub OnNUM01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM01Changed()
    End Sub
    Partial Private Sub OnNUM02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM02Changed()
    End Sub
    Partial Private Sub OnNUM03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM03Changed()
    End Sub
    Partial Private Sub OnNUM04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM04Changed()
    End Sub
    Partial Private Sub OnNUM05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM05Changed()
    End Sub
    Partial Private Sub OnUTBL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL01Changed()
    End Sub
    Partial Private Sub OnUTBL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL02Changed()
    End Sub
    Partial Private Sub OnUTBL03Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL03Changed()
    End Sub
    Partial Private Sub OnUTBL04Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL04Changed()
    End Sub
    Partial Private Sub OnUTBL05Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL05Changed()
    End Sub
    Partial Private Sub OnDATE01Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE01Changed()
    End Sub
    Partial Private Sub OnDATE02Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE02Changed()
    End Sub
    Partial Private Sub OnDATE03Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE03Changed()
    End Sub
    Partial Private Sub OnDATE04Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE04Changed()
    End Sub
    Partial Private Sub OnDATE05Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE05Changed()
    End Sub
    Partial Private Sub OnBOOL01Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL01Changed()
    End Sub
    Partial Private Sub OnBOOL02Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL02Changed()
    End Sub
    Partial Private Sub OnBOOL03Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL03Changed()
    End Sub
    Partial Private Sub OnBOOL04Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL04Changed()
    End Sub
    Partial Private Sub OnPRINTLABELChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRINTLABELChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._MTRL1 = CType(Nothing, EntityRef(Of MTRL))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property MTRL() As Integer
			Get
				Return Me._MTRL
			End Get
			Set
				If ((Me._MTRL = value)  _
							= false) Then
					If Me._MTRL1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnMTRLChanging(value)
					Me.SendPropertyChanging
					Me._MTRL = value
					Me.SendPropertyChanged("MTRL")
					Me.OnMTRLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR01", DbType:="VarChar(100)")>  _
		Public Property VARCHAR01() As String
			Get
				Return Me._VARCHAR01
			End Get
			Set
				If (String.Equals(Me._VARCHAR01, value) = false) Then
					Me.OnVARCHAR01Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR01 = value
					Me.SendPropertyChanged("VARCHAR01")
					Me.OnVARCHAR01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR02", DbType:="VarChar(100)")>  _
		Public Property VARCHAR02() As String
			Get
				Return Me._VARCHAR02
			End Get
			Set
				If (String.Equals(Me._VARCHAR02, value) = false) Then
					Me.OnVARCHAR02Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR02 = value
					Me.SendPropertyChanged("VARCHAR02")
					Me.OnVARCHAR02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR03", DbType:="VarChar(100)")>  _
		Public Property VARCHAR03() As String
			Get
				Return Me._VARCHAR03
			End Get
			Set
				If (String.Equals(Me._VARCHAR03, value) = false) Then
					Me.OnVARCHAR03Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR03 = value
					Me.SendPropertyChanged("VARCHAR03")
					Me.OnVARCHAR03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR04", DbType:="VarChar(100)")>  _
		Public Property VARCHAR04() As String
			Get
				Return Me._VARCHAR04
			End Get
			Set
				If (String.Equals(Me._VARCHAR04, value) = false) Then
					Me.OnVARCHAR04Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR04 = value
					Me.SendPropertyChanged("VARCHAR04")
					Me.OnVARCHAR04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR05", DbType:="VarChar(100)")>  _
		Public Property VARCHAR05() As String
			Get
				Return Me._VARCHAR05
			End Get
			Set
				If (String.Equals(Me._VARCHAR05, value) = false) Then
					Me.OnVARCHAR05Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR05 = value
					Me.SendPropertyChanged("VARCHAR05")
					Me.OnVARCHAR05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM01", DbType:="Float")>  _
		Public Property NUM01() As System.Nullable(Of Double)
			Get
				Return Me._NUM01
			End Get
			Set
				If (Me._NUM01.Equals(value) = false) Then
					Me.OnNUM01Changing(value)
					Me.SendPropertyChanging
					Me._NUM01 = value
					Me.SendPropertyChanged("NUM01")
					Me.OnNUM01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM02", DbType:="Float")>  _
		Public Property NUM02() As System.Nullable(Of Double)
			Get
				Return Me._NUM02
			End Get
			Set
				If (Me._NUM02.Equals(value) = false) Then
					Me.OnNUM02Changing(value)
					Me.SendPropertyChanging
					Me._NUM02 = value
					Me.SendPropertyChanged("NUM02")
					Me.OnNUM02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM03", DbType:="Float")>  _
		Public Property NUM03() As System.Nullable(Of Double)
			Get
				Return Me._NUM03
			End Get
			Set
				If (Me._NUM03.Equals(value) = false) Then
					Me.OnNUM03Changing(value)
					Me.SendPropertyChanging
					Me._NUM03 = value
					Me.SendPropertyChanged("NUM03")
					Me.OnNUM03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM04", DbType:="Float")>  _
		Public Property NUM04() As System.Nullable(Of Double)
			Get
				Return Me._NUM04
			End Get
			Set
				If (Me._NUM04.Equals(value) = false) Then
					Me.OnNUM04Changing(value)
					Me.SendPropertyChanging
					Me._NUM04 = value
					Me.SendPropertyChanged("NUM04")
					Me.OnNUM04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM05", DbType:="Float")>  _
		Public Property NUM05() As System.Nullable(Of Double)
			Get
				Return Me._NUM05
			End Get
			Set
				If (Me._NUM05.Equals(value) = false) Then
					Me.OnNUM05Changing(value)
					Me.SendPropertyChanging
					Me._NUM05 = value
					Me.SendPropertyChanged("NUM05")
					Me.OnNUM05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL01", DbType:="SmallInt")>  _
		Public Property UTBL01() As System.Nullable(Of Short)
			Get
				Return Me._UTBL01
			End Get
			Set
				If (Me._UTBL01.Equals(value) = false) Then
					Me.OnUTBL01Changing(value)
					Me.SendPropertyChanging
					Me._UTBL01 = value
					Me.SendPropertyChanged("UTBL01")
					Me.OnUTBL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL02", DbType:="SmallInt")>  _
		Public Property UTBL02() As System.Nullable(Of Short)
			Get
				Return Me._UTBL02
			End Get
			Set
				If (Me._UTBL02.Equals(value) = false) Then
					Me.OnUTBL02Changing(value)
					Me.SendPropertyChanging
					Me._UTBL02 = value
					Me.SendPropertyChanged("UTBL02")
					Me.OnUTBL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL03", DbType:="SmallInt")>  _
		Public Property UTBL03() As System.Nullable(Of Short)
			Get
				Return Me._UTBL03
			End Get
			Set
				If (Me._UTBL03.Equals(value) = false) Then
					Me.OnUTBL03Changing(value)
					Me.SendPropertyChanging
					Me._UTBL03 = value
					Me.SendPropertyChanged("UTBL03")
					Me.OnUTBL03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL04", DbType:="SmallInt")>  _
		Public Property UTBL04() As System.Nullable(Of Short)
			Get
				Return Me._UTBL04
			End Get
			Set
				If (Me._UTBL04.Equals(value) = false) Then
					Me.OnUTBL04Changing(value)
					Me.SendPropertyChanging
					Me._UTBL04 = value
					Me.SendPropertyChanged("UTBL04")
					Me.OnUTBL04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL05", DbType:="SmallInt")>  _
		Public Property UTBL05() As System.Nullable(Of Short)
			Get
				Return Me._UTBL05
			End Get
			Set
				If (Me._UTBL05.Equals(value) = false) Then
					Me.OnUTBL05Changing(value)
					Me.SendPropertyChanging
					Me._UTBL05 = value
					Me.SendPropertyChanged("UTBL05")
					Me.OnUTBL05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE01", DbType:="DateTime")>  _
		Public Property DATE01() As System.Nullable(Of Date)
			Get
				Return Me._DATE01
			End Get
			Set
				If (Me._DATE01.Equals(value) = false) Then
					Me.OnDATE01Changing(value)
					Me.SendPropertyChanging
					Me._DATE01 = value
					Me.SendPropertyChanged("DATE01")
					Me.OnDATE01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE02", DbType:="DateTime")>  _
		Public Property DATE02() As System.Nullable(Of Date)
			Get
				Return Me._DATE02
			End Get
			Set
				If (Me._DATE02.Equals(value) = false) Then
					Me.OnDATE02Changing(value)
					Me.SendPropertyChanging
					Me._DATE02 = value
					Me.SendPropertyChanged("DATE02")
					Me.OnDATE02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE03", DbType:="DateTime")>  _
		Public Property DATE03() As System.Nullable(Of Date)
			Get
				Return Me._DATE03
			End Get
			Set
				If (Me._DATE03.Equals(value) = false) Then
					Me.OnDATE03Changing(value)
					Me.SendPropertyChanging
					Me._DATE03 = value
					Me.SendPropertyChanged("DATE03")
					Me.OnDATE03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE04", DbType:="DateTime")>  _
		Public Property DATE04() As System.Nullable(Of Date)
			Get
				Return Me._DATE04
			End Get
			Set
				If (Me._DATE04.Equals(value) = false) Then
					Me.OnDATE04Changing(value)
					Me.SendPropertyChanging
					Me._DATE04 = value
					Me.SendPropertyChanged("DATE04")
					Me.OnDATE04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE05", DbType:="DateTime")>  _
		Public Property DATE05() As System.Nullable(Of Date)
			Get
				Return Me._DATE05
			End Get
			Set
				If (Me._DATE05.Equals(value) = false) Then
					Me.OnDATE05Changing(value)
					Me.SendPropertyChanging
					Me._DATE05 = value
					Me.SendPropertyChanged("DATE05")
					Me.OnDATE05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL01", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL01() As Short
			Get
				Return Me._BOOL01
			End Get
			Set
				If ((Me._BOOL01 = value)  _
							= false) Then
					Me.OnBOOL01Changing(value)
					Me.SendPropertyChanging
					Me._BOOL01 = value
					Me.SendPropertyChanged("BOOL01")
					Me.OnBOOL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL02", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL02() As Short
			Get
				Return Me._BOOL02
			End Get
			Set
				If ((Me._BOOL02 = value)  _
							= false) Then
					Me.OnBOOL02Changing(value)
					Me.SendPropertyChanging
					Me._BOOL02 = value
					Me.SendPropertyChanged("BOOL02")
					Me.OnBOOL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL03", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL03() As Short
			Get
				Return Me._BOOL03
			End Get
			Set
				If ((Me._BOOL03 = value)  _
							= false) Then
					Me.OnBOOL03Changing(value)
					Me.SendPropertyChanging
					Me._BOOL03 = value
					Me.SendPropertyChanged("BOOL03")
					Me.OnBOOL03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL04", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL04() As Short
			Get
				Return Me._BOOL04
			End Get
			Set
				If ((Me._BOOL04 = value)  _
							= false) Then
					Me.OnBOOL04Changing(value)
					Me.SendPropertyChanging
					Me._BOOL04 = value
					Me.SendPropertyChanged("BOOL04")
					Me.OnBOOL04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINTLABEL", DbType:="SmallInt")>  _
		Public Property PRINTLABEL() As System.Nullable(Of Short)
			Get
				Return Me._PRINTLABEL
			End Get
			Set
				If (Me._PRINTLABEL.Equals(value) = false) Then
					Me.OnPRINTLABELChanging(value)
					Me.SendPropertyChanging
					Me._PRINTLABEL = value
					Me.SendPropertyChanged("PRINTLABEL")
					Me.OnPRINTLABELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MTRL_MTREXTRA", Storage:="_MTRL1", ThisKey:="MTRL", OtherKey:="MTRL", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property MTRL1() As MTRL
			Get
				Return Me._MTRL1.Entity
			End Get
			Set
				Dim previousValue As MTRL = Me._MTRL1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._MTRL1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._MTRL1.Entity = Nothing
						previousValue.MTREXTRA = Nothing
					End If
					Me._MTRL1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTREXTRA = Me
						Me._MTRL = value.MTRL
					Else
						Me._MTRL = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("MTRL1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TPRMS")>  _
	Partial Public Class TPRM
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SODTYPE As Short
		
		Private _TPRMS As Short
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
		Private _COMMENTS As String
		
		Private _FLG01 As Short
		
		Private _FLG02 As Short
		
		Private _FLG03 As Short
		
		Private _FLG04 As Short
		
		Private _FLG05 As Short
		
		Private _FLG06 As Short
		
		Private _FLG07 As Short
		
		Private _FLG08 As Short
		
		Private _FLG09 As Short
		
		Private _FLG10 As Short
		
		Private _FLG11 As Short
		
		Private _FLG12 As Short
		
		Private _FLG13 As Short
		
		Private _FLG14 As Short
		
		Private _FLG15 As Short
		
		Private _FLG16 As Short
		
		Private _FLG17 As Short
		
		Private _FLG18 As Short
		
		Private _FLG19 As Short
		
		Private _FLG20 As Short
		
		Private _FLG21 As Short
		
		Private _FLG22 As Short
		
		Private _FLG23 As Short
		
		Private _FLG24 As Short
		
		Private _FLG25 As String
		
		Private _FLG26 As Short
		
		Private _CNT01 As Short
		
		Private _CNT02 As Short
		
		Private _CNT03 As Short
		
		Private _CNT04 As Short
		
		Private _CNT05 As Short
		
		Private _CNT06 As Short
		
		Private _CNT07 As Short
		
		Private _CNT08 As Short
		
		Private _CNT09 As Short
		
		Private _CNT10 As Short
		
		Private _CNT11 As Short
		
		Private _CNT12 As Short
		
		Private _CNT13 As Short
		
		Private _CNT14 As Short
		
		Private _CNT15 As Short
		
		Private _CNT16 As Short
		
		Private _CNT17 As Short
		
		Private _CNT18 As Short
		
		Private _CNT19 As Short
		
		Private _CNT20 As Short
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnTPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnTPRMSChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnFLG01Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG01Changed()
    End Sub
    Partial Private Sub OnFLG02Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG02Changed()
    End Sub
    Partial Private Sub OnFLG03Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG03Changed()
    End Sub
    Partial Private Sub OnFLG04Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG04Changed()
    End Sub
    Partial Private Sub OnFLG05Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG05Changed()
    End Sub
    Partial Private Sub OnFLG06Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG06Changed()
    End Sub
    Partial Private Sub OnFLG07Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG07Changed()
    End Sub
    Partial Private Sub OnFLG08Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG08Changed()
    End Sub
    Partial Private Sub OnFLG09Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG09Changed()
    End Sub
    Partial Private Sub OnFLG10Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG10Changed()
    End Sub
    Partial Private Sub OnFLG11Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG11Changed()
    End Sub
    Partial Private Sub OnFLG12Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG12Changed()
    End Sub
    Partial Private Sub OnFLG13Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG13Changed()
    End Sub
    Partial Private Sub OnFLG14Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG14Changed()
    End Sub
    Partial Private Sub OnFLG15Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG15Changed()
    End Sub
    Partial Private Sub OnFLG16Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG16Changed()
    End Sub
    Partial Private Sub OnFLG17Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG17Changed()
    End Sub
    Partial Private Sub OnFLG18Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG18Changed()
    End Sub
    Partial Private Sub OnFLG19Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG19Changed()
    End Sub
    Partial Private Sub OnFLG20Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG20Changed()
    End Sub
    Partial Private Sub OnFLG21Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG21Changed()
    End Sub
    Partial Private Sub OnFLG22Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG22Changed()
    End Sub
    Partial Private Sub OnFLG23Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG23Changed()
    End Sub
    Partial Private Sub OnFLG24Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG24Changed()
    End Sub
    Partial Private Sub OnFLG25Changing(value As String)
    End Sub
    Partial Private Sub OnFLG25Changed()
    End Sub
    Partial Private Sub OnFLG26Changing(value As Short)
    End Sub
    Partial Private Sub OnFLG26Changed()
    End Sub
    Partial Private Sub OnCNT01Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT01Changed()
    End Sub
    Partial Private Sub OnCNT02Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT02Changed()
    End Sub
    Partial Private Sub OnCNT03Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT03Changed()
    End Sub
    Partial Private Sub OnCNT04Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT04Changed()
    End Sub
    Partial Private Sub OnCNT05Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT05Changed()
    End Sub
    Partial Private Sub OnCNT06Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT06Changed()
    End Sub
    Partial Private Sub OnCNT07Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT07Changed()
    End Sub
    Partial Private Sub OnCNT08Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT08Changed()
    End Sub
    Partial Private Sub OnCNT09Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT09Changed()
    End Sub
    Partial Private Sub OnCNT10Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT10Changed()
    End Sub
    Partial Private Sub OnCNT11Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT11Changed()
    End Sub
    Partial Private Sub OnCNT12Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT12Changed()
    End Sub
    Partial Private Sub OnCNT13Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT13Changed()
    End Sub
    Partial Private Sub OnCNT14Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT14Changed()
    End Sub
    Partial Private Sub OnCNT15Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT15Changed()
    End Sub
    Partial Private Sub OnCNT16Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT16Changed()
    End Sub
    Partial Private Sub OnCNT17Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT17Changed()
    End Sub
    Partial Private Sub OnCNT18Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT18Changed()
    End Sub
    Partial Private Sub OnCNT19Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT19Changed()
    End Sub
    Partial Private Sub OnCNT20Changing(value As Short)
    End Sub
    Partial Private Sub OnCNT20Changed()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPRMS", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TPRMS() As Short
			Get
				Return Me._TPRMS
			End Get
			Set
				If ((Me._TPRMS = value)  _
							= false) Then
					Me.OnTPRMSChanging(value)
					Me.SendPropertyChanging
					Me._TPRMS = value
					Me.SendPropertyChanged("TPRMS")
					Me.OnTPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG01", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG01() As Short
			Get
				Return Me._FLG01
			End Get
			Set
				If ((Me._FLG01 = value)  _
							= false) Then
					Me.OnFLG01Changing(value)
					Me.SendPropertyChanging
					Me._FLG01 = value
					Me.SendPropertyChanged("FLG01")
					Me.OnFLG01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG02", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG02() As Short
			Get
				Return Me._FLG02
			End Get
			Set
				If ((Me._FLG02 = value)  _
							= false) Then
					Me.OnFLG02Changing(value)
					Me.SendPropertyChanging
					Me._FLG02 = value
					Me.SendPropertyChanged("FLG02")
					Me.OnFLG02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG03", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG03() As Short
			Get
				Return Me._FLG03
			End Get
			Set
				If ((Me._FLG03 = value)  _
							= false) Then
					Me.OnFLG03Changing(value)
					Me.SendPropertyChanging
					Me._FLG03 = value
					Me.SendPropertyChanged("FLG03")
					Me.OnFLG03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG04", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG04() As Short
			Get
				Return Me._FLG04
			End Get
			Set
				If ((Me._FLG04 = value)  _
							= false) Then
					Me.OnFLG04Changing(value)
					Me.SendPropertyChanging
					Me._FLG04 = value
					Me.SendPropertyChanged("FLG04")
					Me.OnFLG04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG05", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG05() As Short
			Get
				Return Me._FLG05
			End Get
			Set
				If ((Me._FLG05 = value)  _
							= false) Then
					Me.OnFLG05Changing(value)
					Me.SendPropertyChanging
					Me._FLG05 = value
					Me.SendPropertyChanged("FLG05")
					Me.OnFLG05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG06", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG06() As Short
			Get
				Return Me._FLG06
			End Get
			Set
				If ((Me._FLG06 = value)  _
							= false) Then
					Me.OnFLG06Changing(value)
					Me.SendPropertyChanging
					Me._FLG06 = value
					Me.SendPropertyChanged("FLG06")
					Me.OnFLG06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG07", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG07() As Short
			Get
				Return Me._FLG07
			End Get
			Set
				If ((Me._FLG07 = value)  _
							= false) Then
					Me.OnFLG07Changing(value)
					Me.SendPropertyChanging
					Me._FLG07 = value
					Me.SendPropertyChanged("FLG07")
					Me.OnFLG07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG08", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG08() As Short
			Get
				Return Me._FLG08
			End Get
			Set
				If ((Me._FLG08 = value)  _
							= false) Then
					Me.OnFLG08Changing(value)
					Me.SendPropertyChanging
					Me._FLG08 = value
					Me.SendPropertyChanged("FLG08")
					Me.OnFLG08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG09", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG09() As Short
			Get
				Return Me._FLG09
			End Get
			Set
				If ((Me._FLG09 = value)  _
							= false) Then
					Me.OnFLG09Changing(value)
					Me.SendPropertyChanging
					Me._FLG09 = value
					Me.SendPropertyChanged("FLG09")
					Me.OnFLG09Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG10", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG10() As Short
			Get
				Return Me._FLG10
			End Get
			Set
				If ((Me._FLG10 = value)  _
							= false) Then
					Me.OnFLG10Changing(value)
					Me.SendPropertyChanging
					Me._FLG10 = value
					Me.SendPropertyChanged("FLG10")
					Me.OnFLG10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG11", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG11() As Short
			Get
				Return Me._FLG11
			End Get
			Set
				If ((Me._FLG11 = value)  _
							= false) Then
					Me.OnFLG11Changing(value)
					Me.SendPropertyChanging
					Me._FLG11 = value
					Me.SendPropertyChanged("FLG11")
					Me.OnFLG11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG12", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG12() As Short
			Get
				Return Me._FLG12
			End Get
			Set
				If ((Me._FLG12 = value)  _
							= false) Then
					Me.OnFLG12Changing(value)
					Me.SendPropertyChanging
					Me._FLG12 = value
					Me.SendPropertyChanged("FLG12")
					Me.OnFLG12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG13", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG13() As Short
			Get
				Return Me._FLG13
			End Get
			Set
				If ((Me._FLG13 = value)  _
							= false) Then
					Me.OnFLG13Changing(value)
					Me.SendPropertyChanging
					Me._FLG13 = value
					Me.SendPropertyChanged("FLG13")
					Me.OnFLG13Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG14", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG14() As Short
			Get
				Return Me._FLG14
			End Get
			Set
				If ((Me._FLG14 = value)  _
							= false) Then
					Me.OnFLG14Changing(value)
					Me.SendPropertyChanging
					Me._FLG14 = value
					Me.SendPropertyChanged("FLG14")
					Me.OnFLG14Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG15", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG15() As Short
			Get
				Return Me._FLG15
			End Get
			Set
				If ((Me._FLG15 = value)  _
							= false) Then
					Me.OnFLG15Changing(value)
					Me.SendPropertyChanging
					Me._FLG15 = value
					Me.SendPropertyChanged("FLG15")
					Me.OnFLG15Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG16", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG16() As Short
			Get
				Return Me._FLG16
			End Get
			Set
				If ((Me._FLG16 = value)  _
							= false) Then
					Me.OnFLG16Changing(value)
					Me.SendPropertyChanging
					Me._FLG16 = value
					Me.SendPropertyChanged("FLG16")
					Me.OnFLG16Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG17", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG17() As Short
			Get
				Return Me._FLG17
			End Get
			Set
				If ((Me._FLG17 = value)  _
							= false) Then
					Me.OnFLG17Changing(value)
					Me.SendPropertyChanging
					Me._FLG17 = value
					Me.SendPropertyChanged("FLG17")
					Me.OnFLG17Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG18", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG18() As Short
			Get
				Return Me._FLG18
			End Get
			Set
				If ((Me._FLG18 = value)  _
							= false) Then
					Me.OnFLG18Changing(value)
					Me.SendPropertyChanging
					Me._FLG18 = value
					Me.SendPropertyChanged("FLG18")
					Me.OnFLG18Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG19", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG19() As Short
			Get
				Return Me._FLG19
			End Get
			Set
				If ((Me._FLG19 = value)  _
							= false) Then
					Me.OnFLG19Changing(value)
					Me.SendPropertyChanging
					Me._FLG19 = value
					Me.SendPropertyChanged("FLG19")
					Me.OnFLG19Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG20", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG20() As Short
			Get
				Return Me._FLG20
			End Get
			Set
				If ((Me._FLG20 = value)  _
							= false) Then
					Me.OnFLG20Changing(value)
					Me.SendPropertyChanging
					Me._FLG20 = value
					Me.SendPropertyChanged("FLG20")
					Me.OnFLG20Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG21", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG21() As Short
			Get
				Return Me._FLG21
			End Get
			Set
				If ((Me._FLG21 = value)  _
							= false) Then
					Me.OnFLG21Changing(value)
					Me.SendPropertyChanging
					Me._FLG21 = value
					Me.SendPropertyChanged("FLG21")
					Me.OnFLG21Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG22", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG22() As Short
			Get
				Return Me._FLG22
			End Get
			Set
				If ((Me._FLG22 = value)  _
							= false) Then
					Me.OnFLG22Changing(value)
					Me.SendPropertyChanging
					Me._FLG22 = value
					Me.SendPropertyChanged("FLG22")
					Me.OnFLG22Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG23", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG23() As Short
			Get
				Return Me._FLG23
			End Get
			Set
				If ((Me._FLG23 = value)  _
							= false) Then
					Me.OnFLG23Changing(value)
					Me.SendPropertyChanging
					Me._FLG23 = value
					Me.SendPropertyChanged("FLG23")
					Me.OnFLG23Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG24", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG24() As Short
			Get
				Return Me._FLG24
			End Get
			Set
				If ((Me._FLG24 = value)  _
							= false) Then
					Me.OnFLG24Changing(value)
					Me.SendPropertyChanging
					Me._FLG24 = value
					Me.SendPropertyChanged("FLG24")
					Me.OnFLG24Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG25", DbType:="VarChar(20)")>  _
		Public Property FLG25() As String
			Get
				Return Me._FLG25
			End Get
			Set
				If (String.Equals(Me._FLG25, value) = false) Then
					Me.OnFLG25Changing(value)
					Me.SendPropertyChanging
					Me._FLG25 = value
					Me.SendPropertyChanged("FLG25")
					Me.OnFLG25Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLG26", DbType:="SmallInt NOT NULL")>  _
		Public Property FLG26() As Short
			Get
				Return Me._FLG26
			End Get
			Set
				If ((Me._FLG26 = value)  _
							= false) Then
					Me.OnFLG26Changing(value)
					Me.SendPropertyChanging
					Me._FLG26 = value
					Me.SendPropertyChanged("FLG26")
					Me.OnFLG26Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT01", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT01() As Short
			Get
				Return Me._CNT01
			End Get
			Set
				If ((Me._CNT01 = value)  _
							= false) Then
					Me.OnCNT01Changing(value)
					Me.SendPropertyChanging
					Me._CNT01 = value
					Me.SendPropertyChanged("CNT01")
					Me.OnCNT01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT02", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT02() As Short
			Get
				Return Me._CNT02
			End Get
			Set
				If ((Me._CNT02 = value)  _
							= false) Then
					Me.OnCNT02Changing(value)
					Me.SendPropertyChanging
					Me._CNT02 = value
					Me.SendPropertyChanged("CNT02")
					Me.OnCNT02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT03", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT03() As Short
			Get
				Return Me._CNT03
			End Get
			Set
				If ((Me._CNT03 = value)  _
							= false) Then
					Me.OnCNT03Changing(value)
					Me.SendPropertyChanging
					Me._CNT03 = value
					Me.SendPropertyChanged("CNT03")
					Me.OnCNT03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT04", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT04() As Short
			Get
				Return Me._CNT04
			End Get
			Set
				If ((Me._CNT04 = value)  _
							= false) Then
					Me.OnCNT04Changing(value)
					Me.SendPropertyChanging
					Me._CNT04 = value
					Me.SendPropertyChanged("CNT04")
					Me.OnCNT04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT05", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT05() As Short
			Get
				Return Me._CNT05
			End Get
			Set
				If ((Me._CNT05 = value)  _
							= false) Then
					Me.OnCNT05Changing(value)
					Me.SendPropertyChanging
					Me._CNT05 = value
					Me.SendPropertyChanged("CNT05")
					Me.OnCNT05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT06", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT06() As Short
			Get
				Return Me._CNT06
			End Get
			Set
				If ((Me._CNT06 = value)  _
							= false) Then
					Me.OnCNT06Changing(value)
					Me.SendPropertyChanging
					Me._CNT06 = value
					Me.SendPropertyChanged("CNT06")
					Me.OnCNT06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT07", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT07() As Short
			Get
				Return Me._CNT07
			End Get
			Set
				If ((Me._CNT07 = value)  _
							= false) Then
					Me.OnCNT07Changing(value)
					Me.SendPropertyChanging
					Me._CNT07 = value
					Me.SendPropertyChanged("CNT07")
					Me.OnCNT07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT08", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT08() As Short
			Get
				Return Me._CNT08
			End Get
			Set
				If ((Me._CNT08 = value)  _
							= false) Then
					Me.OnCNT08Changing(value)
					Me.SendPropertyChanging
					Me._CNT08 = value
					Me.SendPropertyChanged("CNT08")
					Me.OnCNT08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT09", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT09() As Short
			Get
				Return Me._CNT09
			End Get
			Set
				If ((Me._CNT09 = value)  _
							= false) Then
					Me.OnCNT09Changing(value)
					Me.SendPropertyChanging
					Me._CNT09 = value
					Me.SendPropertyChanged("CNT09")
					Me.OnCNT09Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT10", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT10() As Short
			Get
				Return Me._CNT10
			End Get
			Set
				If ((Me._CNT10 = value)  _
							= false) Then
					Me.OnCNT10Changing(value)
					Me.SendPropertyChanging
					Me._CNT10 = value
					Me.SendPropertyChanged("CNT10")
					Me.OnCNT10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT11", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT11() As Short
			Get
				Return Me._CNT11
			End Get
			Set
				If ((Me._CNT11 = value)  _
							= false) Then
					Me.OnCNT11Changing(value)
					Me.SendPropertyChanging
					Me._CNT11 = value
					Me.SendPropertyChanged("CNT11")
					Me.OnCNT11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT12", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT12() As Short
			Get
				Return Me._CNT12
			End Get
			Set
				If ((Me._CNT12 = value)  _
							= false) Then
					Me.OnCNT12Changing(value)
					Me.SendPropertyChanging
					Me._CNT12 = value
					Me.SendPropertyChanged("CNT12")
					Me.OnCNT12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT13", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT13() As Short
			Get
				Return Me._CNT13
			End Get
			Set
				If ((Me._CNT13 = value)  _
							= false) Then
					Me.OnCNT13Changing(value)
					Me.SendPropertyChanging
					Me._CNT13 = value
					Me.SendPropertyChanged("CNT13")
					Me.OnCNT13Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT14", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT14() As Short
			Get
				Return Me._CNT14
			End Get
			Set
				If ((Me._CNT14 = value)  _
							= false) Then
					Me.OnCNT14Changing(value)
					Me.SendPropertyChanging
					Me._CNT14 = value
					Me.SendPropertyChanged("CNT14")
					Me.OnCNT14Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT15", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT15() As Short
			Get
				Return Me._CNT15
			End Get
			Set
				If ((Me._CNT15 = value)  _
							= false) Then
					Me.OnCNT15Changing(value)
					Me.SendPropertyChanging
					Me._CNT15 = value
					Me.SendPropertyChanged("CNT15")
					Me.OnCNT15Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT16", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT16() As Short
			Get
				Return Me._CNT16
			End Get
			Set
				If ((Me._CNT16 = value)  _
							= false) Then
					Me.OnCNT16Changing(value)
					Me.SendPropertyChanging
					Me._CNT16 = value
					Me.SendPropertyChanged("CNT16")
					Me.OnCNT16Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT17", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT17() As Short
			Get
				Return Me._CNT17
			End Get
			Set
				If ((Me._CNT17 = value)  _
							= false) Then
					Me.OnCNT17Changing(value)
					Me.SendPropertyChanging
					Me._CNT17 = value
					Me.SendPropertyChanged("CNT17")
					Me.OnCNT17Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT18", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT18() As Short
			Get
				Return Me._CNT18
			End Get
			Set
				If ((Me._CNT18 = value)  _
							= false) Then
					Me.OnCNT18Changing(value)
					Me.SendPropertyChanging
					Me._CNT18 = value
					Me.SendPropertyChanged("CNT18")
					Me.OnCNT18Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT19", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT19() As Short
			Get
				Return Me._CNT19
			End Get
			Set
				If ((Me._CNT19 = value)  _
							= false) Then
					Me.OnCNT19Changing(value)
					Me.SendPropertyChanging
					Me._CNT19 = value
					Me.SendPropertyChanged("CNT19")
					Me.OnCNT19Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNT20", DbType:="SmallInt NOT NULL")>  _
		Public Property CNT20() As Short
			Get
				Return Me._CNT20
			End Get
			Set
				If ((Me._CNT20 = value)  _
							= false) Then
					Me.OnCNT20Changing(value)
					Me.SendPropertyChanging
					Me._CNT20 = value
					Me.SendPropertyChanged("CNT20")
					Me.OnCNT20Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GROUPS")>  _
	Partial Public Class [GROUP]
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _GROUPS As Short
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
		Private _CSTMENU As System.Nullable(Of Integer)
		
		Private _CSTRIBBON As System.Nullable(Of Integer)
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _SODATA As String
		
		Private _USERs As EntitySet(Of USER)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGROUPSChanging(value As Short)
    End Sub
    Partial Private Sub OnGROUPSChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnCSTMENUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCSTMENUChanged()
    End Sub
    Partial Private Sub OnCSTRIBBONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCSTRIBBONChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnSODATAChanging(value As String)
    End Sub
    Partial Private Sub OnSODATAChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._USERs = New EntitySet(Of USER)(AddressOf Me.attach_USERs, AddressOf Me.detach_USERs)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPS", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property GROUPS() As Short
			Get
				Return Me._GROUPS
			End Get
			Set
				If ((Me._GROUPS = value)  _
							= false) Then
					Me.OnGROUPSChanging(value)
					Me.SendPropertyChanging
					Me._GROUPS = value
					Me.SendPropertyChanged("GROUPS")
					Me.OnGROUPSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSTMENU", DbType:="Int")>  _
		Public Property CSTMENU() As System.Nullable(Of Integer)
			Get
				Return Me._CSTMENU
			End Get
			Set
				If (Me._CSTMENU.Equals(value) = false) Then
					Me.OnCSTMENUChanging(value)
					Me.SendPropertyChanging
					Me._CSTMENU = value
					Me.SendPropertyChanged("CSTMENU")
					Me.OnCSTMENUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSTRIBBON", DbType:="Int")>  _
		Public Property CSTRIBBON() As System.Nullable(Of Integer)
			Get
				Return Me._CSTRIBBON
			End Get
			Set
				If (Me._CSTRIBBON.Equals(value) = false) Then
					Me.OnCSTRIBBONChanging(value)
					Me.SendPropertyChanging
					Me._CSTRIBBON = value
					Me.SendPropertyChanged("CSTRIBBON")
					Me.OnCSTRIBBONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODATA", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property SODATA() As String
			Get
				Return Me._SODATA
			End Get
			Set
				If (String.Equals(Me._SODATA, value) = false) Then
					Me.OnSODATAChanging(value)
					Me.SendPropertyChanging
					Me._SODATA = value
					Me.SendPropertyChanged("SODATA")
					Me.OnSODATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GROUP_USER", Storage:="_USERs", ThisKey:="GROUPS", OtherKey:="GROUPS")>  _
		Public Property USERs() As EntitySet(Of USER)
			Get
				Return Me._USERs
			End Get
			Set
				Me._USERs.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_USERs(ByVal entity As USER)
			Me.SendPropertyChanging
			entity.[GROUP] = Me
		End Sub
		
		Private Sub detach_USERs(ByVal entity As USER)
			Me.SendPropertyChanging
			entity.[GROUP] = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRDTRN")>  _
	Partial Public Class TRDTRN
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _FINDOC As Integer
		
		Private _TRDTRN As Integer
		
		Private _BRANCH As Short
		
		Private _FISCPRD As Short
		
		Private _PERIOD As Short
		
		Private _SOSOURCE As Integer
		
		Private _SOREDIR As Integer
		
		Private _FINCODE As String
		
		Private _COMMENTS As String
		
		Private _SODTYPE As Short
		
		Private _TRDR As Integer
		
		Private _TRDBRANCH As System.Nullable(Of Integer)
		
		Private _TRNDATE As Date
		
		Private _TRDRS As System.Nullable(Of Integer)
		
		Private _TRDBRANCHS As System.Nullable(Of Integer)
		
		Private _PRJC As System.Nullable(Of Integer)
		
		Private _PRJCSTAGE As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _INST As System.Nullable(Of Integer)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _COLLECTOR As System.Nullable(Of Integer)
		
		Private _FPRMS As Short
		
		Private _TPRMS As Short
		
		Private _SERIES As Short
		
		Private _SOCURRENCY As Short
		
		Private _TRNVAL As Double
		
		Private _TTRNVAL As Double
		
		Private _LTRNVAL As Double
		
		Private _TURNOVR As Double
		
		Private _TTURNOVR As Double
		
		Private _LTURNOVR As Double
		
		Private _FINDOC1 As EntityRef(Of FINDOC)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnFINDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINDOCChanged()
    End Sub
    Partial Private Sub OnTRDTRNChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDTRNChanged()
    End Sub
    Partial Private Sub OnBRANCHChanging(value As Short)
    End Sub
    Partial Private Sub OnBRANCHChanged()
    End Sub
    Partial Private Sub OnFISCPRDChanging(value As Short)
    End Sub
    Partial Private Sub OnFISCPRDChanged()
    End Sub
    Partial Private Sub OnPERIODChanging(value As Short)
    End Sub
    Partial Private Sub OnPERIODChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnSOREDIRChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOREDIRChanged()
    End Sub
    Partial Private Sub OnFINCODEChanging(value As String)
    End Sub
    Partial Private Sub OnFINCODEChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnTRNDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnTRNDATEChanged()
    End Sub
    Partial Private Sub OnTRDRSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRSChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDBRANCHSChanged()
    End Sub
    Partial Private Sub OnPRJCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJCChanged()
    End Sub
    Partial Private Sub OnPRJCSTAGEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRJCSTAGEChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnINSTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINSTChanged()
    End Sub
    Partial Private Sub OnSALESMANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALESMANChanged()
    End Sub
    Partial Private Sub OnCOLLECTORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOLLECTORChanged()
    End Sub
    Partial Private Sub OnFPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnFPRMSChanged()
    End Sub
    Partial Private Sub OnTPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnTPRMSChanged()
    End Sub
    Partial Private Sub OnSERIESChanging(value As Short)
    End Sub
    Partial Private Sub OnSERIESChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCURRENCYChanged()
    End Sub
    Partial Private Sub OnTRNVALChanging(value As Double)
    End Sub
    Partial Private Sub OnTRNVALChanged()
    End Sub
    Partial Private Sub OnTTRNVALChanging(value As Double)
    End Sub
    Partial Private Sub OnTTRNVALChanged()
    End Sub
    Partial Private Sub OnLTRNVALChanging(value As Double)
    End Sub
    Partial Private Sub OnLTRNVALChanged()
    End Sub
    Partial Private Sub OnTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnTURNOVRChanged()
    End Sub
    Partial Private Sub OnTTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnTTURNOVRChanged()
    End Sub
    Partial Private Sub OnLTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnLTURNOVRChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FINDOC1 = CType(Nothing, EntityRef(Of FINDOC))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					If Me._FINDOC1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOC = value
					Me.SendPropertyChanged("FINDOC")
					Me.OnFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDTRN", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TRDTRN() As Integer
			Get
				Return Me._TRDTRN
			End Get
			Set
				If ((Me._TRDTRN = value)  _
							= false) Then
					Me.OnTRDTRNChanging(value)
					Me.SendPropertyChanging
					Me._TRDTRN = value
					Me.SendPropertyChanged("TRDTRN")
					Me.OnTRDTRNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt NOT NULL")>  _
		Public Property BRANCH() As Short
			Get
				Return Me._BRANCH
			End Get
			Set
				If ((Me._BRANCH = value)  _
							= false) Then
					Me.OnBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BRANCH = value
					Me.SendPropertyChanged("BRANCH")
					Me.OnBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FISCPRD", DbType:="SmallInt NOT NULL")>  _
		Public Property FISCPRD() As Short
			Get
				Return Me._FISCPRD
			End Get
			Set
				If ((Me._FISCPRD = value)  _
							= false) Then
					Me.OnFISCPRDChanging(value)
					Me.SendPropertyChanging
					Me._FISCPRD = value
					Me.SendPropertyChanged("FISCPRD")
					Me.OnFISCPRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD", DbType:="SmallInt NOT NULL")>  _
		Public Property PERIOD() As Short
			Get
				Return Me._PERIOD
			End Get
			Set
				If ((Me._PERIOD = value)  _
							= false) Then
					Me.OnPERIODChanging(value)
					Me.SendPropertyChanging
					Me._PERIOD = value
					Me.SendPropertyChanged("PERIOD")
					Me.OnPERIODChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL")>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOREDIR", DbType:="Int NOT NULL")>  _
		Public Property SOREDIR() As Integer
			Get
				Return Me._SOREDIR
			End Get
			Set
				If ((Me._SOREDIR = value)  _
							= false) Then
					Me.OnSOREDIRChanging(value)
					Me.SendPropertyChanging
					Me._SOREDIR = value
					Me.SendPropertyChanged("SOREDIR")
					Me.OnSOREDIRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODE", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property FINCODE() As String
			Get
				Return Me._FINCODE
			End Get
			Set
				If (String.Equals(Me._FINCODE, value) = false) Then
					Me.OnFINCODEChanging(value)
					Me.SendPropertyChanging
					Me._FINCODE = value
					Me.SendPropertyChanged("FINCODE")
					Me.OnFINCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int")>  _
		Public Property TRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If (Me._TRDBRANCH.Equals(value) = false) Then
					Me.OnTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCH = value
					Me.SendPropertyChanged("TRDBRANCH")
					Me.OnTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime NOT NULL")>  _
		Public Property TRNDATE() As Date
			Get
				Return Me._TRNDATE
			End Get
			Set
				If ((Me._TRNDATE = value)  _
							= false) Then
					Me.OnTRNDATEChanging(value)
					Me.SendPropertyChanging
					Me._TRNDATE = value
					Me.SendPropertyChanged("TRNDATE")
					Me.OnTRNDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRS", DbType:="Int")>  _
		Public Property TRDRS() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRS
			End Get
			Set
				If (Me._TRDRS.Equals(value) = false) Then
					Me.OnTRDRSChanging(value)
					Me.SendPropertyChanging
					Me._TRDRS = value
					Me.SendPropertyChanged("TRDRS")
					Me.OnTRDRSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHS", DbType:="Int")>  _
		Public Property TRDBRANCHS() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCHS
			End Get
			Set
				If (Me._TRDBRANCHS.Equals(value) = false) Then
					Me.OnTRDBRANCHSChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCHS = value
					Me.SendPropertyChanged("TRDBRANCHS")
					Me.OnTRDBRANCHSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJC", DbType:="Int")>  _
		Public Property PRJC() As System.Nullable(Of Integer)
			Get
				Return Me._PRJC
			End Get
			Set
				If (Me._PRJC.Equals(value) = false) Then
					Me.OnPRJCChanging(value)
					Me.SendPropertyChanging
					Me._PRJC = value
					Me.SendPropertyChanged("PRJC")
					Me.OnPRJCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJCSTAGE", DbType:="SmallInt")>  _
		Public Property PRJCSTAGE() As System.Nullable(Of Short)
			Get
				Return Me._PRJCSTAGE
			End Get
			Set
				If (Me._PRJCSTAGE.Equals(value) = false) Then
					Me.OnPRJCSTAGEChanging(value)
					Me.SendPropertyChanging
					Me._PRJCSTAGE = value
					Me.SendPropertyChanged("PRJCSTAGE")
					Me.OnPRJCSTAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INST", DbType:="Int")>  _
		Public Property INST() As System.Nullable(Of Integer)
			Get
				Return Me._INST
			End Get
			Set
				If (Me._INST.Equals(value) = false) Then
					Me.OnINSTChanging(value)
					Me.SendPropertyChanging
					Me._INST = value
					Me.SendPropertyChanged("INST")
					Me.OnINSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					Me.OnSALESMANChanging(value)
					Me.SendPropertyChanging
					Me._SALESMAN = value
					Me.SendPropertyChanged("SALESMAN")
					Me.OnSALESMANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLLECTOR", DbType:="Int")>  _
		Public Property COLLECTOR() As System.Nullable(Of Integer)
			Get
				Return Me._COLLECTOR
			End Get
			Set
				If (Me._COLLECTOR.Equals(value) = false) Then
					Me.OnCOLLECTORChanging(value)
					Me.SendPropertyChanging
					Me._COLLECTOR = value
					Me.SendPropertyChanged("COLLECTOR")
					Me.OnCOLLECTORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					Me.OnFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._FPRMS = value
					Me.SendPropertyChanged("FPRMS")
					Me.OnFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property TPRMS() As Short
			Get
				Return Me._TPRMS
			End Get
			Set
				If ((Me._TPRMS = value)  _
							= false) Then
					Me.OnTPRMSChanging(value)
					Me.SendPropertyChanging
					Me._TPRMS = value
					Me.SendPropertyChanged("TPRMS")
					Me.OnTPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIES", DbType:="SmallInt NOT NULL")>  _
		Public Property SERIES() As Short
			Get
				Return Me._SERIES
			End Get
			Set
				If ((Me._SERIES = value)  _
							= false) Then
					Me.OnSERIESChanging(value)
					Me.SendPropertyChanging
					Me._SERIES = value
					Me.SendPropertyChanged("SERIES")
					Me.OnSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me.OnSOCURRENCYChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCY = value
					Me.SendPropertyChanged("SOCURRENCY")
					Me.OnSOCURRENCYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNVAL", DbType:="Float NOT NULL")>  _
		Public Property TRNVAL() As Double
			Get
				Return Me._TRNVAL
			End Get
			Set
				If ((Me._TRNVAL = value)  _
							= false) Then
					Me.OnTRNVALChanging(value)
					Me.SendPropertyChanging
					Me._TRNVAL = value
					Me.SendPropertyChanged("TRNVAL")
					Me.OnTRNVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTRNVAL", DbType:="Float NOT NULL")>  _
		Public Property TTRNVAL() As Double
			Get
				Return Me._TTRNVAL
			End Get
			Set
				If ((Me._TTRNVAL = value)  _
							= false) Then
					Me.OnTTRNVALChanging(value)
					Me.SendPropertyChanging
					Me._TTRNVAL = value
					Me.SendPropertyChanged("TTRNVAL")
					Me.OnTTRNVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTRNVAL", DbType:="Float NOT NULL")>  _
		Public Property LTRNVAL() As Double
			Get
				Return Me._LTRNVAL
			End Get
			Set
				If ((Me._LTRNVAL = value)  _
							= false) Then
					Me.OnLTRNVALChanging(value)
					Me.SendPropertyChanging
					Me._LTRNVAL = value
					Me.SendPropertyChanged("LTRNVAL")
					Me.OnLTRNVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TURNOVR", DbType:="Float NOT NULL")>  _
		Public Property TURNOVR() As Double
			Get
				Return Me._TURNOVR
			End Get
			Set
				If ((Me._TURNOVR = value)  _
							= false) Then
					Me.OnTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._TURNOVR = value
					Me.SendPropertyChanged("TURNOVR")
					Me.OnTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property TTURNOVR() As Double
			Get
				Return Me._TTURNOVR
			End Get
			Set
				If ((Me._TTURNOVR = value)  _
							= false) Then
					Me.OnTTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._TTURNOVR = value
					Me.SendPropertyChanged("TTURNOVR")
					Me.OnTTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property LTURNOVR() As Double
			Get
				Return Me._LTURNOVR
			End Get
			Set
				If ((Me._LTURNOVR = value)  _
							= false) Then
					Me.OnLTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._LTURNOVR = value
					Me.SendPropertyChanged("LTURNOVR")
					Me.OnLTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_TRDTRN", Storage:="_FINDOC1", ThisKey:="FINDOC", OtherKey:="FINDOC", IsForeignKey:=true)>  _
		Public Property FINDOC1() As FINDOC
			Get
				Return Me._FINDOC1.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC1.Entity = Nothing
						previousValue.TRDTRNs.Remove(Me)
					End If
					Me._FINDOC1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDTRNs.Add(Me)
						Me._FINDOC = value.FINDOC
					Else
						Me._FINDOC = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("FINDOC1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRDEXTRA")>  _
	Partial Public Class TRDEXTRA
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _TRDR As Integer
		
		Private _SODTYPE As Short
		
		Private _KAD As System.Nullable(Of Integer)
		
		Private _KAD1 As System.Nullable(Of Integer)
		
		Private _VARCHAR01 As String
		
		Private _VARCHAR02 As String
		
		Private _VARCHAR03 As String
		
		Private _VARCHAR04 As String
		
		Private _VARCHAR05 As String
		
		Private _NUM01 As System.Nullable(Of Double)
		
		Private _NUM02 As System.Nullable(Of Double)
		
		Private _NUM03 As System.Nullable(Of Double)
		
		Private _NUM04 As System.Nullable(Of Double)
		
		Private _NUM05 As System.Nullable(Of Double)
		
		Private _UTBL01 As System.Nullable(Of Short)
		
		Private _UTBL02 As System.Nullable(Of Short)
		
		Private _UTBL03 As System.Nullable(Of Short)
		
		Private _UTBL04 As System.Nullable(Of Short)
		
		Private _UTBL05 As System.Nullable(Of Short)
		
		Private _DATE01 As System.Nullable(Of Date)
		
		Private _DATE02 As System.Nullable(Of Date)
		
		Private _DATE03 As System.Nullable(Of Date)
		
		Private _DATE04 As System.Nullable(Of Date)
		
		Private _DATE05 As System.Nullable(Of Date)
		
		Private _BOOL01 As Short
		
		Private _BOOL02 As Short
		
		Private _BOOL03 As Short
		
		Private _BOOL04 As Short
		
		Private _TRDR1 As EntityRef(Of TRDR)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnKADChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKADChanged()
    End Sub
    Partial Private Sub OnKAD1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKAD1Changed()
    End Sub
    Partial Private Sub OnVARCHAR01Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR01Changed()
    End Sub
    Partial Private Sub OnVARCHAR02Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR02Changed()
    End Sub
    Partial Private Sub OnVARCHAR03Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR03Changed()
    End Sub
    Partial Private Sub OnVARCHAR04Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR04Changed()
    End Sub
    Partial Private Sub OnVARCHAR05Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR05Changed()
    End Sub
    Partial Private Sub OnNUM01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM01Changed()
    End Sub
    Partial Private Sub OnNUM02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM02Changed()
    End Sub
    Partial Private Sub OnNUM03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM03Changed()
    End Sub
    Partial Private Sub OnNUM04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM04Changed()
    End Sub
    Partial Private Sub OnNUM05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM05Changed()
    End Sub
    Partial Private Sub OnUTBL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL01Changed()
    End Sub
    Partial Private Sub OnUTBL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL02Changed()
    End Sub
    Partial Private Sub OnUTBL03Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL03Changed()
    End Sub
    Partial Private Sub OnUTBL04Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL04Changed()
    End Sub
    Partial Private Sub OnUTBL05Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUTBL05Changed()
    End Sub
    Partial Private Sub OnDATE01Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE01Changed()
    End Sub
    Partial Private Sub OnDATE02Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE02Changed()
    End Sub
    Partial Private Sub OnDATE03Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE03Changed()
    End Sub
    Partial Private Sub OnDATE04Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE04Changed()
    End Sub
    Partial Private Sub OnDATE05Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE05Changed()
    End Sub
    Partial Private Sub OnBOOL01Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL01Changed()
    End Sub
    Partial Private Sub OnBOOL02Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL02Changed()
    End Sub
    Partial Private Sub OnBOOL03Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL03Changed()
    End Sub
    Partial Private Sub OnBOOL04Changing(value As Short)
    End Sub
    Partial Private Sub OnBOOL04Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._TRDR1 = CType(Nothing, EntityRef(Of TRDR))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					If Me._TRDR1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KAD", DbType:="Int")>  _
		Public Property KAD() As System.Nullable(Of Integer)
			Get
				Return Me._KAD
			End Get
			Set
				If (Me._KAD.Equals(value) = false) Then
					Me.OnKADChanging(value)
					Me.SendPropertyChanging
					Me._KAD = value
					Me.SendPropertyChanged("KAD")
					Me.OnKADChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KAD1", DbType:="Int")>  _
		Public Property KAD1() As System.Nullable(Of Integer)
			Get
				Return Me._KAD1
			End Get
			Set
				If (Me._KAD1.Equals(value) = false) Then
					Me.OnKAD1Changing(value)
					Me.SendPropertyChanging
					Me._KAD1 = value
					Me.SendPropertyChanged("KAD1")
					Me.OnKAD1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR01", DbType:="VarChar(100)")>  _
		Public Property VARCHAR01() As String
			Get
				Return Me._VARCHAR01
			End Get
			Set
				If (String.Equals(Me._VARCHAR01, value) = false) Then
					Me.OnVARCHAR01Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR01 = value
					Me.SendPropertyChanged("VARCHAR01")
					Me.OnVARCHAR01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR02", DbType:="VarChar(100)")>  _
		Public Property VARCHAR02() As String
			Get
				Return Me._VARCHAR02
			End Get
			Set
				If (String.Equals(Me._VARCHAR02, value) = false) Then
					Me.OnVARCHAR02Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR02 = value
					Me.SendPropertyChanged("VARCHAR02")
					Me.OnVARCHAR02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR03", DbType:="VarChar(100)")>  _
		Public Property VARCHAR03() As String
			Get
				Return Me._VARCHAR03
			End Get
			Set
				If (String.Equals(Me._VARCHAR03, value) = false) Then
					Me.OnVARCHAR03Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR03 = value
					Me.SendPropertyChanged("VARCHAR03")
					Me.OnVARCHAR03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR04", DbType:="VarChar(100)")>  _
		Public Property VARCHAR04() As String
			Get
				Return Me._VARCHAR04
			End Get
			Set
				If (String.Equals(Me._VARCHAR04, value) = false) Then
					Me.OnVARCHAR04Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR04 = value
					Me.SendPropertyChanged("VARCHAR04")
					Me.OnVARCHAR04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR05", DbType:="VarChar(100)")>  _
		Public Property VARCHAR05() As String
			Get
				Return Me._VARCHAR05
			End Get
			Set
				If (String.Equals(Me._VARCHAR05, value) = false) Then
					Me.OnVARCHAR05Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR05 = value
					Me.SendPropertyChanged("VARCHAR05")
					Me.OnVARCHAR05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM01", DbType:="Float")>  _
		Public Property NUM01() As System.Nullable(Of Double)
			Get
				Return Me._NUM01
			End Get
			Set
				If (Me._NUM01.Equals(value) = false) Then
					Me.OnNUM01Changing(value)
					Me.SendPropertyChanging
					Me._NUM01 = value
					Me.SendPropertyChanged("NUM01")
					Me.OnNUM01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM02", DbType:="Float")>  _
		Public Property NUM02() As System.Nullable(Of Double)
			Get
				Return Me._NUM02
			End Get
			Set
				If (Me._NUM02.Equals(value) = false) Then
					Me.OnNUM02Changing(value)
					Me.SendPropertyChanging
					Me._NUM02 = value
					Me.SendPropertyChanged("NUM02")
					Me.OnNUM02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM03", DbType:="Float")>  _
		Public Property NUM03() As System.Nullable(Of Double)
			Get
				Return Me._NUM03
			End Get
			Set
				If (Me._NUM03.Equals(value) = false) Then
					Me.OnNUM03Changing(value)
					Me.SendPropertyChanging
					Me._NUM03 = value
					Me.SendPropertyChanged("NUM03")
					Me.OnNUM03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM04", DbType:="Float")>  _
		Public Property NUM04() As System.Nullable(Of Double)
			Get
				Return Me._NUM04
			End Get
			Set
				If (Me._NUM04.Equals(value) = false) Then
					Me.OnNUM04Changing(value)
					Me.SendPropertyChanging
					Me._NUM04 = value
					Me.SendPropertyChanged("NUM04")
					Me.OnNUM04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM05", DbType:="Float")>  _
		Public Property NUM05() As System.Nullable(Of Double)
			Get
				Return Me._NUM05
			End Get
			Set
				If (Me._NUM05.Equals(value) = false) Then
					Me.OnNUM05Changing(value)
					Me.SendPropertyChanging
					Me._NUM05 = value
					Me.SendPropertyChanged("NUM05")
					Me.OnNUM05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL01", DbType:="SmallInt")>  _
		Public Property UTBL01() As System.Nullable(Of Short)
			Get
				Return Me._UTBL01
			End Get
			Set
				If (Me._UTBL01.Equals(value) = false) Then
					Me.OnUTBL01Changing(value)
					Me.SendPropertyChanging
					Me._UTBL01 = value
					Me.SendPropertyChanged("UTBL01")
					Me.OnUTBL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL02", DbType:="SmallInt")>  _
		Public Property UTBL02() As System.Nullable(Of Short)
			Get
				Return Me._UTBL02
			End Get
			Set
				If (Me._UTBL02.Equals(value) = false) Then
					Me.OnUTBL02Changing(value)
					Me.SendPropertyChanging
					Me._UTBL02 = value
					Me.SendPropertyChanged("UTBL02")
					Me.OnUTBL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL03", DbType:="SmallInt")>  _
		Public Property UTBL03() As System.Nullable(Of Short)
			Get
				Return Me._UTBL03
			End Get
			Set
				If (Me._UTBL03.Equals(value) = false) Then
					Me.OnUTBL03Changing(value)
					Me.SendPropertyChanging
					Me._UTBL03 = value
					Me.SendPropertyChanged("UTBL03")
					Me.OnUTBL03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL04", DbType:="SmallInt")>  _
		Public Property UTBL04() As System.Nullable(Of Short)
			Get
				Return Me._UTBL04
			End Get
			Set
				If (Me._UTBL04.Equals(value) = false) Then
					Me.OnUTBL04Changing(value)
					Me.SendPropertyChanging
					Me._UTBL04 = value
					Me.SendPropertyChanged("UTBL04")
					Me.OnUTBL04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UTBL05", DbType:="SmallInt")>  _
		Public Property UTBL05() As System.Nullable(Of Short)
			Get
				Return Me._UTBL05
			End Get
			Set
				If (Me._UTBL05.Equals(value) = false) Then
					Me.OnUTBL05Changing(value)
					Me.SendPropertyChanging
					Me._UTBL05 = value
					Me.SendPropertyChanged("UTBL05")
					Me.OnUTBL05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE01", DbType:="DateTime")>  _
		Public Property DATE01() As System.Nullable(Of Date)
			Get
				Return Me._DATE01
			End Get
			Set
				If (Me._DATE01.Equals(value) = false) Then
					Me.OnDATE01Changing(value)
					Me.SendPropertyChanging
					Me._DATE01 = value
					Me.SendPropertyChanged("DATE01")
					Me.OnDATE01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE02", DbType:="DateTime")>  _
		Public Property DATE02() As System.Nullable(Of Date)
			Get
				Return Me._DATE02
			End Get
			Set
				If (Me._DATE02.Equals(value) = false) Then
					Me.OnDATE02Changing(value)
					Me.SendPropertyChanging
					Me._DATE02 = value
					Me.SendPropertyChanged("DATE02")
					Me.OnDATE02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE03", DbType:="DateTime")>  _
		Public Property DATE03() As System.Nullable(Of Date)
			Get
				Return Me._DATE03
			End Get
			Set
				If (Me._DATE03.Equals(value) = false) Then
					Me.OnDATE03Changing(value)
					Me.SendPropertyChanging
					Me._DATE03 = value
					Me.SendPropertyChanged("DATE03")
					Me.OnDATE03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE04", DbType:="DateTime")>  _
		Public Property DATE04() As System.Nullable(Of Date)
			Get
				Return Me._DATE04
			End Get
			Set
				If (Me._DATE04.Equals(value) = false) Then
					Me.OnDATE04Changing(value)
					Me.SendPropertyChanging
					Me._DATE04 = value
					Me.SendPropertyChanged("DATE04")
					Me.OnDATE04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE05", DbType:="DateTime")>  _
		Public Property DATE05() As System.Nullable(Of Date)
			Get
				Return Me._DATE05
			End Get
			Set
				If (Me._DATE05.Equals(value) = false) Then
					Me.OnDATE05Changing(value)
					Me.SendPropertyChanging
					Me._DATE05 = value
					Me.SendPropertyChanged("DATE05")
					Me.OnDATE05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL01", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL01() As Short
			Get
				Return Me._BOOL01
			End Get
			Set
				If ((Me._BOOL01 = value)  _
							= false) Then
					Me.OnBOOL01Changing(value)
					Me.SendPropertyChanging
					Me._BOOL01 = value
					Me.SendPropertyChanged("BOOL01")
					Me.OnBOOL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL02", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL02() As Short
			Get
				Return Me._BOOL02
			End Get
			Set
				If ((Me._BOOL02 = value)  _
							= false) Then
					Me.OnBOOL02Changing(value)
					Me.SendPropertyChanging
					Me._BOOL02 = value
					Me.SendPropertyChanged("BOOL02")
					Me.OnBOOL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL03", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL03() As Short
			Get
				Return Me._BOOL03
			End Get
			Set
				If ((Me._BOOL03 = value)  _
							= false) Then
					Me.OnBOOL03Changing(value)
					Me.SendPropertyChanging
					Me._BOOL03 = value
					Me.SendPropertyChanged("BOOL03")
					Me.OnBOOL03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL04", DbType:="SmallInt NOT NULL")>  _
		Public Property BOOL04() As Short
			Get
				Return Me._BOOL04
			End Get
			Set
				If ((Me._BOOL04 = value)  _
							= false) Then
					Me.OnBOOL04Changing(value)
					Me.SendPropertyChanging
					Me._BOOL04 = value
					Me.SendPropertyChanged("BOOL04")
					Me.OnBOOL04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDEXTRA", Storage:="_TRDR1", ThisKey:="TRDR", OtherKey:="TRDR", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property TRDR1() As TRDR
			Get
				Return Me._TRDR1.Entity
			End Get
			Set
				Dim previousValue As TRDR = Me._TRDR1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDR1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDR1.Entity = Nothing
						previousValue.TRDEXTRA = Nothing
					End If
					Me._TRDR1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDEXTRA = Me
						Me._TRDR = value.TRDR
					Else
						Me._TRDR = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("TRDR1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVTrdBRoute")>  _
	Partial Public Class ccCVTrdBRoute
		
		Private _COMPANY As Short
		
		Private _SODTYPE As Short
		
		Private _TRDR As Integer
		
		Private _ISACTIVE As Short
		
		Private _TRDRCODE As String
		
		Private _TRDRNAME As String
		
		Private _AFM As String
		
		Private _ISPROSP As Short
		
		Private _SOCURRENCY As Short
		
		Private _TRDRADDRESS As String
		
		Private _TRDRZIP As String
		
		Private _TRDRCITY As String
		
		Private _TRDRDISTRICT1 As System.Nullable(Of Short)
		
		Private _PHONE01 As String
		
		Private _PHONE02 As String
		
		Private _TRDBUSINESS As System.Nullable(Of Short)
		
		Private _TRDRSALESMAN As System.Nullable(Of Integer)
		
		Private _TRDBRANCHCOMPANY As Short
		
		Private _TRDBRANCH As Integer
		
		Private _TRDBRANCHTRDR As Integer
		
		Private _TRDBRANCHSODTYPE As Short
		
		Private _TRDBRANCHISACTIVE As Short
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _ADDRESS As String
		
		Private _CITY As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _ZIP As String
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _ccCTest As System.Nullable(Of Integer)
		
		Private _ccCTrdBCity As System.Nullable(Of Integer)
		
		Private _ROUTING As System.Nullable(Of Short)
		
		Private _ccCRouting As System.Nullable(Of Integer)
		
		Private _ccCRoutingISACTIVE As System.Nullable(Of Short)
		
		Private _REMARKS As String
		
		Private _SOKM As System.Nullable(Of Double)
		
		Private _SOCOST As System.Nullable(Of Double)
		
		Private _SOCARRIER As System.Nullable(Of Short)
		
		Private _BeginCity As System.Nullable(Of Integer)
		
		Private _EndCity As System.Nullable(Of Integer)
		
		Private _ccCRoutingINSDATE As System.Nullable(Of Date)
		
		Private _ccCRoutingINSUSER As System.Nullable(Of Short)
		
		Private _ccCRoutingUPDDATE As System.Nullable(Of Date)
		
		Private _ccCRoutingUPDUSER As System.Nullable(Of Short)
		
		Private _ccCTrdBCityBeginDISTRICT As System.Nullable(Of Short)
		
		Private _ccCTrdBCityBeginExprCITY As String
		
		Private _ccCTrdBCityEndDISTRICT As System.Nullable(Of Short)
		
		Private _ccCTrdBCityEndCITY As String
		
		Private _ccCTrdBCityDISTRICT As System.Nullable(Of Short)
		
		Private _ccCTrdBCityCITY As String
		
		Private _ccCTrdBCityISACTIVE As System.Nullable(Of Short)
		
		Private _ccCTrdBCityINSDATE As System.Nullable(Of Date)
		
		Private _ccCTrdBCityINSUSER As System.Nullable(Of Short)
		
		Private _ccCTrdBCityUPDDATE As System.Nullable(Of Date)
		
		Private _ccCTrdBCityUPDUSER As System.Nullable(Of Short)
		
		Private _DISTRICTBeginCODE As String
		
		Private _DISTRICTBeginNAME As String
		
		Private _DISTRICTEndCODE As String
		
		Private _DISTRICTEndNAME As String
		
		Private _DISTRICTTRDBCODE As String
		
		Private _DISTRICTTRDBNAME As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me._COMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me._SODTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me._ISACTIVE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRCODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property TRDRCODE() As String
			Get
				Return Me._TRDRCODE
			End Get
			Set
				If (String.Equals(Me._TRDRCODE, value) = false) Then
					Me._TRDRCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRNAME", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property TRDRNAME() As String
			Get
				Return Me._TRDRNAME
			End Get
			Set
				If (String.Equals(Me._TRDRNAME, value) = false) Then
					Me._TRDRNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFM", DbType:="VarChar(20)")>  _
		Public Property AFM() As String
			Get
				Return Me._AFM
			End Get
			Set
				If (String.Equals(Me._AFM, value) = false) Then
					Me._AFM = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISPROSP", DbType:="SmallInt NOT NULL")>  _
		Public Property ISPROSP() As Short
			Get
				Return Me._ISPROSP
			End Get
			Set
				If ((Me._ISPROSP = value)  _
							= false) Then
					Me._ISPROSP = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me._SOCURRENCY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRADDRESS", DbType:="VarChar(100)")>  _
		Public Property TRDRADDRESS() As String
			Get
				Return Me._TRDRADDRESS
			End Get
			Set
				If (String.Equals(Me._TRDRADDRESS, value) = false) Then
					Me._TRDRADDRESS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRZIP", DbType:="VarChar(10)")>  _
		Public Property TRDRZIP() As String
			Get
				Return Me._TRDRZIP
			End Get
			Set
				If (String.Equals(Me._TRDRZIP, value) = false) Then
					Me._TRDRZIP = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRCITY", DbType:="VarChar(30)")>  _
		Public Property TRDRCITY() As String
			Get
				Return Me._TRDRCITY
			End Get
			Set
				If (String.Equals(Me._TRDRCITY, value) = false) Then
					Me._TRDRCITY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRDISTRICT1", DbType:="SmallInt")>  _
		Public Property TRDRDISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._TRDRDISTRICT1
			End Get
			Set
				If (Me._TRDRDISTRICT1.Equals(value) = false) Then
					Me._TRDRDISTRICT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE01", DbType:="VarChar(20)")>  _
		Public Property PHONE01() As String
			Get
				Return Me._PHONE01
			End Get
			Set
				If (String.Equals(Me._PHONE01, value) = false) Then
					Me._PHONE01 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE02", DbType:="VarChar(20)")>  _
		Public Property PHONE02() As String
			Get
				Return Me._PHONE02
			End Get
			Set
				If (String.Equals(Me._PHONE02, value) = false) Then
					Me._PHONE02 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBUSINESS", DbType:="SmallInt")>  _
		Public Property TRDBUSINESS() As System.Nullable(Of Short)
			Get
				Return Me._TRDBUSINESS
			End Get
			Set
				If (Me._TRDBUSINESS.Equals(value) = false) Then
					Me._TRDBUSINESS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRSALESMAN", DbType:="Int")>  _
		Public Property TRDRSALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRSALESMAN
			End Get
			Set
				If (Me._TRDRSALESMAN.Equals(value) = false) Then
					Me._TRDRSALESMAN = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHCOMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property TRDBRANCHCOMPANY() As Short
			Get
				Return Me._TRDBRANCHCOMPANY
			End Get
			Set
				If ((Me._TRDBRANCHCOMPANY = value)  _
							= false) Then
					Me._TRDBRANCHCOMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int NOT NULL")>  _
		Public Property TRDBRANCH() As Integer
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If ((Me._TRDBRANCH = value)  _
							= false) Then
					Me._TRDBRANCH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHTRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDBRANCHTRDR() As Integer
			Get
				Return Me._TRDBRANCHTRDR
			End Get
			Set
				If ((Me._TRDBRANCHTRDR = value)  _
							= false) Then
					Me._TRDBRANCHTRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHSODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property TRDBRANCHSODTYPE() As Short
			Get
				Return Me._TRDBRANCHSODTYPE
			End Get
			Set
				If ((Me._TRDBRANCHSODTYPE = value)  _
							= false) Then
					Me._TRDBRANCHSODTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property TRDBRANCHISACTIVE() As Short
			Get
				Return Me._TRDBRANCHISACTIVE
			End Get
			Set
				If ((Me._TRDBRANCHISACTIVE = value)  _
							= false) Then
					Me._TRDBRANCHISACTIVE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(50)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me._ADDRESS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me._CITY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me._DISTRICT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)")>  _
		Public Property ZIP() As String
			Get
				Return Me._ZIP
			End Get
			Set
				If (String.Equals(Me._ZIP, value) = false) Then
					Me._ZIP = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					Me._SALESMAN = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTest", DbType:="Int")>  _
		Public Property ccCTest() As System.Nullable(Of Integer)
			Get
				Return Me._ccCTest
			End Get
			Set
				If (Me._ccCTest.Equals(value) = false) Then
					Me._ccCTest = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCity", DbType:="Int")>  _
		Public Property ccCTrdBCity() As System.Nullable(Of Integer)
			Get
				Return Me._ccCTrdBCity
			End Get
			Set
				If (Me._ccCTrdBCity.Equals(value) = false) Then
					Me._ccCTrdBCity = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUTING", DbType:="SmallInt")>  _
		Public Property ROUTING() As System.Nullable(Of Short)
			Get
				Return Me._ROUTING
			End Get
			Set
				If (Me._ROUTING.Equals(value) = false) Then
					Me._ROUTING = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRouting", DbType:="Int")>  _
		Public Property ccCRouting() As System.Nullable(Of Integer)
			Get
				Return Me._ccCRouting
			End Get
			Set
				If (Me._ccCRouting.Equals(value) = false) Then
					Me._ccCRouting = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRoutingISACTIVE", DbType:="SmallInt")>  _
		Public Property ccCRoutingISACTIVE() As System.Nullable(Of Short)
			Get
				Return Me._ccCRoutingISACTIVE
			End Get
			Set
				If (Me._ccCRoutingISACTIVE.Equals(value) = false) Then
					Me._ccCRoutingISACTIVE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(250)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me._REMARKS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOKM", DbType:="Float")>  _
		Public Property SOKM() As System.Nullable(Of Double)
			Get
				Return Me._SOKM
			End Get
			Set
				If (Me._SOKM.Equals(value) = false) Then
					Me._SOKM = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCOST", DbType:="Float")>  _
		Public Property SOCOST() As System.Nullable(Of Double)
			Get
				Return Me._SOCOST
			End Get
			Set
				If (Me._SOCOST.Equals(value) = false) Then
					Me._SOCOST = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt")>  _
		Public Property SOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If (Me._SOCARRIER.Equals(value) = false) Then
					Me._SOCARRIER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BeginCity", DbType:="Int")>  _
		Public Property BeginCity() As System.Nullable(Of Integer)
			Get
				Return Me._BeginCity
			End Get
			Set
				If (Me._BeginCity.Equals(value) = false) Then
					Me._BeginCity = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndCity", DbType:="Int")>  _
		Public Property EndCity() As System.Nullable(Of Integer)
			Get
				Return Me._EndCity
			End Get
			Set
				If (Me._EndCity.Equals(value) = false) Then
					Me._EndCity = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRoutingINSDATE", DbType:="DateTime")>  _
		Public Property ccCRoutingINSDATE() As System.Nullable(Of Date)
			Get
				Return Me._ccCRoutingINSDATE
			End Get
			Set
				If (Me._ccCRoutingINSDATE.Equals(value) = false) Then
					Me._ccCRoutingINSDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRoutingINSUSER", DbType:="SmallInt")>  _
		Public Property ccCRoutingINSUSER() As System.Nullable(Of Short)
			Get
				Return Me._ccCRoutingINSUSER
			End Get
			Set
				If (Me._ccCRoutingINSUSER.Equals(value) = false) Then
					Me._ccCRoutingINSUSER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRoutingUPDDATE", DbType:="DateTime")>  _
		Public Property ccCRoutingUPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._ccCRoutingUPDDATE
			End Get
			Set
				If (Me._ccCRoutingUPDDATE.Equals(value) = false) Then
					Me._ccCRoutingUPDDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCRoutingUPDUSER", DbType:="SmallInt")>  _
		Public Property ccCRoutingUPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._ccCRoutingUPDUSER
			End Get
			Set
				If (Me._ccCRoutingUPDUSER.Equals(value) = false) Then
					Me._ccCRoutingUPDUSER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityBeginDISTRICT", DbType:="SmallInt")>  _
		Public Property ccCTrdBCityBeginDISTRICT() As System.Nullable(Of Short)
			Get
				Return Me._ccCTrdBCityBeginDISTRICT
			End Get
			Set
				If (Me._ccCTrdBCityBeginDISTRICT.Equals(value) = false) Then
					Me._ccCTrdBCityBeginDISTRICT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityBeginExprCITY", DbType:="VarChar(30)")>  _
		Public Property ccCTrdBCityBeginExprCITY() As String
			Get
				Return Me._ccCTrdBCityBeginExprCITY
			End Get
			Set
				If (String.Equals(Me._ccCTrdBCityBeginExprCITY, value) = false) Then
					Me._ccCTrdBCityBeginExprCITY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityEndDISTRICT", DbType:="SmallInt")>  _
		Public Property ccCTrdBCityEndDISTRICT() As System.Nullable(Of Short)
			Get
				Return Me._ccCTrdBCityEndDISTRICT
			End Get
			Set
				If (Me._ccCTrdBCityEndDISTRICT.Equals(value) = false) Then
					Me._ccCTrdBCityEndDISTRICT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityEndCITY", DbType:="VarChar(30)")>  _
		Public Property ccCTrdBCityEndCITY() As String
			Get
				Return Me._ccCTrdBCityEndCITY
			End Get
			Set
				If (String.Equals(Me._ccCTrdBCityEndCITY, value) = false) Then
					Me._ccCTrdBCityEndCITY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityDISTRICT", DbType:="SmallInt")>  _
		Public Property ccCTrdBCityDISTRICT() As System.Nullable(Of Short)
			Get
				Return Me._ccCTrdBCityDISTRICT
			End Get
			Set
				If (Me._ccCTrdBCityDISTRICT.Equals(value) = false) Then
					Me._ccCTrdBCityDISTRICT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityCITY", DbType:="VarChar(30)")>  _
		Public Property ccCTrdBCityCITY() As String
			Get
				Return Me._ccCTrdBCityCITY
			End Get
			Set
				If (String.Equals(Me._ccCTrdBCityCITY, value) = false) Then
					Me._ccCTrdBCityCITY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityISACTIVE", DbType:="SmallInt")>  _
		Public Property ccCTrdBCityISACTIVE() As System.Nullable(Of Short)
			Get
				Return Me._ccCTrdBCityISACTIVE
			End Get
			Set
				If (Me._ccCTrdBCityISACTIVE.Equals(value) = false) Then
					Me._ccCTrdBCityISACTIVE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityINSDATE", DbType:="DateTime")>  _
		Public Property ccCTrdBCityINSDATE() As System.Nullable(Of Date)
			Get
				Return Me._ccCTrdBCityINSDATE
			End Get
			Set
				If (Me._ccCTrdBCityINSDATE.Equals(value) = false) Then
					Me._ccCTrdBCityINSDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityINSUSER", DbType:="SmallInt")>  _
		Public Property ccCTrdBCityINSUSER() As System.Nullable(Of Short)
			Get
				Return Me._ccCTrdBCityINSUSER
			End Get
			Set
				If (Me._ccCTrdBCityINSUSER.Equals(value) = false) Then
					Me._ccCTrdBCityINSUSER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityUPDDATE", DbType:="DateTime")>  _
		Public Property ccCTrdBCityUPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._ccCTrdBCityUPDDATE
			End Get
			Set
				If (Me._ccCTrdBCityUPDDATE.Equals(value) = false) Then
					Me._ccCTrdBCityUPDDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTrdBCityUPDUSER", DbType:="SmallInt")>  _
		Public Property ccCTrdBCityUPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._ccCTrdBCityUPDUSER
			End Get
			Set
				If (Me._ccCTrdBCityUPDUSER.Equals(value) = false) Then
					Me._ccCTrdBCityUPDUSER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICTBeginCODE", DbType:="VarChar(10)")>  _
		Public Property DISTRICTBeginCODE() As String
			Get
				Return Me._DISTRICTBeginCODE
			End Get
			Set
				If (String.Equals(Me._DISTRICTBeginCODE, value) = false) Then
					Me._DISTRICTBeginCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICTBeginNAME", DbType:="VarChar(50)")>  _
		Public Property DISTRICTBeginNAME() As String
			Get
				Return Me._DISTRICTBeginNAME
			End Get
			Set
				If (String.Equals(Me._DISTRICTBeginNAME, value) = false) Then
					Me._DISTRICTBeginNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICTEndCODE", DbType:="VarChar(10)")>  _
		Public Property DISTRICTEndCODE() As String
			Get
				Return Me._DISTRICTEndCODE
			End Get
			Set
				If (String.Equals(Me._DISTRICTEndCODE, value) = false) Then
					Me._DISTRICTEndCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICTEndNAME", DbType:="VarChar(50)")>  _
		Public Property DISTRICTEndNAME() As String
			Get
				Return Me._DISTRICTEndNAME
			End Get
			Set
				If (String.Equals(Me._DISTRICTEndNAME, value) = false) Then
					Me._DISTRICTEndNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICTTRDBCODE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property DISTRICTTRDBCODE() As String
			Get
				Return Me._DISTRICTTRDBCODE
			End Get
			Set
				If (String.Equals(Me._DISTRICTTRDBCODE, value) = false) Then
					Me._DISTRICTTRDBCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICTTRDBNAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property DISTRICTTRDBNAME() As String
			Get
				Return Me._DISTRICTTRDBNAME
			End Get
			Set
				If (String.Equals(Me._DISTRICTTRDBNAME, value) = false) Then
					Me._DISTRICTTRDBNAME = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VTRDTRN")>  _
	Partial Public Class VTRDTRN
		
		Private _sopaytype As Integer
		
		Private _company As Short
		
		Private _findoc As Integer
		
		Private _iscancel As Short
		
		Private _origin As Short
		
		Private _trdtrn As Integer
		
		Private _id As Integer
		
		Private _branch As Short
		
		Private _fiscprd As Short
		
		Private _period As Short
		
		Private _trndate As Date
		
		Private _sosource As Integer
		
		Private _soredir As Integer
		
		Private _fincode As String
		
		Private _comments As String
		
		Private _sodtype As Short
		
		Private _trdr As Integer
		
		Private _trdbranch As System.Nullable(Of Integer)
		
		Private _trdrs As System.Nullable(Of Integer)
		
		Private _trdbranchs As System.Nullable(Of Integer)
		
		Private _prjc As System.Nullable(Of Integer)
		
		Private _busunits As System.Nullable(Of Short)
		
		Private _inst As System.Nullable(Of Integer)
		
		Private _salesman As System.Nullable(Of Integer)
		
		Private _collector As System.Nullable(Of Integer)
		
		Private _fprms As Short
		
		Private _tprms As Short
		
		Private _series As Short
		
		Private _socurrency As Short
		
		Private _cheque As System.Nullable(Of Integer)
		
		Private _chequetype As System.Nullable(Of Short)
		
		Private _chqsodtype As System.Nullable(Of Short)
		
		Private _chqtprms As System.Nullable(Of Short)
		
		Private _finaldate As System.Nullable(Of Date)
		
		Private _CreditCards As System.Nullable(Of Short)
		
		Private _CrdCardNum As String
		
		Private _Instalments As System.Nullable(Of Short)
		
		Private _CrdMachine As System.Nullable(Of Short)
		
		Private _PackNum As String
		
		Private _flg01 As Short
		
		Private _flg02 As Short
		
		Private _flg03 As Short
		
		Private _trdrrate As Double
		
		Private _lrate As Double
		
		Private _ttrnval As System.Nullable(Of Double)
		
		Private _ltrnval As System.Nullable(Of Double)
		
		Private _tturnovr As System.Nullable(Of Double)
		
		Private _lturnovr As System.Nullable(Of Double)
		
		Private _tdebit As System.Nullable(Of Double)
		
		Private _ldebit As System.Nullable(Of Double)
		
		Private _tcredit As System.Nullable(Of Double)
		
		Private _lcredit As System.Nullable(Of Double)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sopaytype", DbType:="Int NOT NULL")>  _
		Public Property sopaytype() As Integer
			Get
				Return Me._sopaytype
			End Get
			Set
				If ((Me._sopaytype = value)  _
							= false) Then
					Me._sopaytype = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_company", DbType:="SmallInt NOT NULL")>  _
		Public Property company() As Short
			Get
				Return Me._company
			End Get
			Set
				If ((Me._company = value)  _
							= false) Then
					Me._company = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_findoc", DbType:="Int NOT NULL")>  _
		Public Property findoc() As Integer
			Get
				Return Me._findoc
			End Get
			Set
				If ((Me._findoc = value)  _
							= false) Then
					Me._findoc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iscancel", DbType:="SmallInt NOT NULL")>  _
		Public Property iscancel() As Short
			Get
				Return Me._iscancel
			End Get
			Set
				If ((Me._iscancel = value)  _
							= false) Then
					Me._iscancel = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_origin", DbType:="SmallInt NOT NULL")>  _
		Public Property origin() As Short
			Get
				Return Me._origin
			End Get
			Set
				If ((Me._origin = value)  _
							= false) Then
					Me._origin = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdtrn", DbType:="Int NOT NULL")>  _
		Public Property trdtrn() As Integer
			Get
				Return Me._trdtrn
			End Get
			Set
				If ((Me._trdtrn = value)  _
							= false) Then
					Me._trdtrn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", DbType:="Int NOT NULL")>  _
		Public Property id() As Integer
			Get
				Return Me._id
			End Get
			Set
				If ((Me._id = value)  _
							= false) Then
					Me._id = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_branch", DbType:="SmallInt NOT NULL")>  _
		Public Property branch() As Short
			Get
				Return Me._branch
			End Get
			Set
				If ((Me._branch = value)  _
							= false) Then
					Me._branch = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fiscprd", DbType:="SmallInt NOT NULL")>  _
		Public Property fiscprd() As Short
			Get
				Return Me._fiscprd
			End Get
			Set
				If ((Me._fiscprd = value)  _
							= false) Then
					Me._fiscprd = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_period", DbType:="SmallInt NOT NULL")>  _
		Public Property period() As Short
			Get
				Return Me._period
			End Get
			Set
				If ((Me._period = value)  _
							= false) Then
					Me._period = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trndate", DbType:="DateTime NOT NULL")>  _
		Public Property trndate() As Date
			Get
				Return Me._trndate
			End Get
			Set
				If ((Me._trndate = value)  _
							= false) Then
					Me._trndate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sosource", DbType:="Int NOT NULL")>  _
		Public Property sosource() As Integer
			Get
				Return Me._sosource
			End Get
			Set
				If ((Me._sosource = value)  _
							= false) Then
					Me._sosource = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soredir", DbType:="Int NOT NULL")>  _
		Public Property soredir() As Integer
			Get
				Return Me._soredir
			End Get
			Set
				If ((Me._soredir = value)  _
							= false) Then
					Me._soredir = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fincode", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property fincode() As String
			Get
				Return Me._fincode
			End Get
			Set
				If (String.Equals(Me._fincode, value) = false) Then
					Me._fincode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_comments", DbType:="VarChar(255)")>  _
		Public Property comments() As String
			Get
				Return Me._comments
			End Get
			Set
				If (String.Equals(Me._comments, value) = false) Then
					Me._comments = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sodtype", DbType:="SmallInt NOT NULL")>  _
		Public Property sodtype() As Short
			Get
				Return Me._sodtype
			End Get
			Set
				If ((Me._sodtype = value)  _
							= false) Then
					Me._sodtype = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdr", DbType:="Int NOT NULL")>  _
		Public Property trdr() As Integer
			Get
				Return Me._trdr
			End Get
			Set
				If ((Me._trdr = value)  _
							= false) Then
					Me._trdr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdbranch", DbType:="Int")>  _
		Public Property trdbranch() As System.Nullable(Of Integer)
			Get
				Return Me._trdbranch
			End Get
			Set
				If (Me._trdbranch.Equals(value) = false) Then
					Me._trdbranch = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdrs", DbType:="Int")>  _
		Public Property trdrs() As System.Nullable(Of Integer)
			Get
				Return Me._trdrs
			End Get
			Set
				If (Me._trdrs.Equals(value) = false) Then
					Me._trdrs = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdbranchs", DbType:="Int")>  _
		Public Property trdbranchs() As System.Nullable(Of Integer)
			Get
				Return Me._trdbranchs
			End Get
			Set
				If (Me._trdbranchs.Equals(value) = false) Then
					Me._trdbranchs = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prjc", DbType:="Int")>  _
		Public Property prjc() As System.Nullable(Of Integer)
			Get
				Return Me._prjc
			End Get
			Set
				If (Me._prjc.Equals(value) = false) Then
					Me._prjc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_busunits", DbType:="SmallInt")>  _
		Public Property busunits() As System.Nullable(Of Short)
			Get
				Return Me._busunits
			End Get
			Set
				If (Me._busunits.Equals(value) = false) Then
					Me._busunits = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inst", DbType:="Int")>  _
		Public Property inst() As System.Nullable(Of Integer)
			Get
				Return Me._inst
			End Get
			Set
				If (Me._inst.Equals(value) = false) Then
					Me._inst = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesman", DbType:="Int")>  _
		Public Property salesman() As System.Nullable(Of Integer)
			Get
				Return Me._salesman
			End Get
			Set
				If (Me._salesman.Equals(value) = false) Then
					Me._salesman = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_collector", DbType:="Int")>  _
		Public Property collector() As System.Nullable(Of Integer)
			Get
				Return Me._collector
			End Get
			Set
				If (Me._collector.Equals(value) = false) Then
					Me._collector = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fprms", DbType:="SmallInt NOT NULL")>  _
		Public Property fprms() As Short
			Get
				Return Me._fprms
			End Get
			Set
				If ((Me._fprms = value)  _
							= false) Then
					Me._fprms = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tprms", DbType:="SmallInt NOT NULL")>  _
		Public Property tprms() As Short
			Get
				Return Me._tprms
			End Get
			Set
				If ((Me._tprms = value)  _
							= false) Then
					Me._tprms = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_series", DbType:="SmallInt NOT NULL")>  _
		Public Property series() As Short
			Get
				Return Me._series
			End Get
			Set
				If ((Me._series = value)  _
							= false) Then
					Me._series = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_socurrency", DbType:="SmallInt NOT NULL")>  _
		Public Property socurrency() As Short
			Get
				Return Me._socurrency
			End Get
			Set
				If ((Me._socurrency = value)  _
							= false) Then
					Me._socurrency = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheque", DbType:="Int")>  _
		Public Property cheque() As System.Nullable(Of Integer)
			Get
				Return Me._cheque
			End Get
			Set
				If (Me._cheque.Equals(value) = false) Then
					Me._cheque = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chequetype", DbType:="SmallInt")>  _
		Public Property chequetype() As System.Nullable(Of Short)
			Get
				Return Me._chequetype
			End Get
			Set
				If (Me._chequetype.Equals(value) = false) Then
					Me._chequetype = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chqsodtype", DbType:="SmallInt")>  _
		Public Property chqsodtype() As System.Nullable(Of Short)
			Get
				Return Me._chqsodtype
			End Get
			Set
				If (Me._chqsodtype.Equals(value) = false) Then
					Me._chqsodtype = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chqtprms", DbType:="SmallInt")>  _
		Public Property chqtprms() As System.Nullable(Of Short)
			Get
				Return Me._chqtprms
			End Get
			Set
				If (Me._chqtprms.Equals(value) = false) Then
					Me._chqtprms = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_finaldate", DbType:="DateTime")>  _
		Public Property finaldate() As System.Nullable(Of Date)
			Get
				Return Me._finaldate
			End Get
			Set
				If (Me._finaldate.Equals(value) = false) Then
					Me._finaldate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCards", DbType:="SmallInt")>  _
		Public Property CreditCards() As System.Nullable(Of Short)
			Get
				Return Me._CreditCards
			End Get
			Set
				If (Me._CreditCards.Equals(value) = false) Then
					Me._CreditCards = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrdCardNum", DbType:="VarChar(50)")>  _
		Public Property CrdCardNum() As String
			Get
				Return Me._CrdCardNum
			End Get
			Set
				If (String.Equals(Me._CrdCardNum, value) = false) Then
					Me._CrdCardNum = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Instalments", DbType:="SmallInt")>  _
		Public Property Instalments() As System.Nullable(Of Short)
			Get
				Return Me._Instalments
			End Get
			Set
				If (Me._Instalments.Equals(value) = false) Then
					Me._Instalments = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrdMachine", DbType:="SmallInt")>  _
		Public Property CrdMachine() As System.Nullable(Of Short)
			Get
				Return Me._CrdMachine
			End Get
			Set
				If (Me._CrdMachine.Equals(value) = false) Then
					Me._CrdMachine = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PackNum", DbType:="VarChar(30)")>  _
		Public Property PackNum() As String
			Get
				Return Me._PackNum
			End Get
			Set
				If (String.Equals(Me._PackNum, value) = false) Then
					Me._PackNum = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flg01", DbType:="SmallInt NOT NULL")>  _
		Public Property flg01() As Short
			Get
				Return Me._flg01
			End Get
			Set
				If ((Me._flg01 = value)  _
							= false) Then
					Me._flg01 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flg02", DbType:="SmallInt NOT NULL")>  _
		Public Property flg02() As Short
			Get
				Return Me._flg02
			End Get
			Set
				If ((Me._flg02 = value)  _
							= false) Then
					Me._flg02 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flg03", DbType:="SmallInt NOT NULL")>  _
		Public Property flg03() As Short
			Get
				Return Me._flg03
			End Get
			Set
				If ((Me._flg03 = value)  _
							= false) Then
					Me._flg03 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdrrate", DbType:="Float NOT NULL")>  _
		Public Property trdrrate() As Double
			Get
				Return Me._trdrrate
			End Get
			Set
				If ((Me._trdrrate = value)  _
							= false) Then
					Me._trdrrate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lrate", DbType:="Float NOT NULL")>  _
		Public Property lrate() As Double
			Get
				Return Me._lrate
			End Get
			Set
				If ((Me._lrate = value)  _
							= false) Then
					Me._lrate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ttrnval", DbType:="Float")>  _
		Public Property ttrnval() As System.Nullable(Of Double)
			Get
				Return Me._ttrnval
			End Get
			Set
				If (Me._ttrnval.Equals(value) = false) Then
					Me._ttrnval = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ltrnval", DbType:="Float")>  _
		Public Property ltrnval() As System.Nullable(Of Double)
			Get
				Return Me._ltrnval
			End Get
			Set
				If (Me._ltrnval.Equals(value) = false) Then
					Me._ltrnval = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tturnovr", DbType:="Float")>  _
		Public Property tturnovr() As System.Nullable(Of Double)
			Get
				Return Me._tturnovr
			End Get
			Set
				If (Me._tturnovr.Equals(value) = false) Then
					Me._tturnovr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lturnovr", DbType:="Float")>  _
		Public Property lturnovr() As System.Nullable(Of Double)
			Get
				Return Me._lturnovr
			End Get
			Set
				If (Me._lturnovr.Equals(value) = false) Then
					Me._lturnovr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tdebit", DbType:="Float")>  _
		Public Property tdebit() As System.Nullable(Of Double)
			Get
				Return Me._tdebit
			End Get
			Set
				If (Me._tdebit.Equals(value) = false) Then
					Me._tdebit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ldebit", DbType:="Float")>  _
		Public Property ldebit() As System.Nullable(Of Double)
			Get
				Return Me._ldebit
			End Get
			Set
				If (Me._ldebit.Equals(value) = false) Then
					Me._ldebit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tcredit", DbType:="Float")>  _
		Public Property tcredit() As System.Nullable(Of Double)
			Get
				Return Me._tcredit
			End Get
			Set
				If (Me._tcredit.Equals(value) = false) Then
					Me._tcredit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcredit", DbType:="Float")>  _
		Public Property lcredit() As System.Nullable(Of Double)
			Get
				Return Me._lcredit
			End Get
			Set
				If (Me._lcredit.Equals(value) = false) Then
					Me._lcredit = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRSN")>  _
	Partial Public Class PRSN
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _LOCKID As System.Nullable(Of Integer)
		
		Private _SODTYPE As Short
		
		Private _PRSN As Integer
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _NAME2 As String
		
		Private _NAME3 As String
		
		Private _NAME4 As String
		
		Private _NAME5 As String
		
		Private _ISACTIVE As Short
		
		Private _ISINPAY As Short
		
		Private _TINPERSON As String
		
		Private _TPRSN As Short
		
		Private _USERS As System.Nullable(Of Short)
		
		Private _BRANCH As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _GPNT As System.Nullable(Of Integer)
		
		Private _PRJC As System.Nullable(Of Integer)
		
		Private _PRSNID As System.Nullable(Of Integer)
		
		Private _AFM As String
		
		Private _IDENTITYNUM As String
		
		Private _NATIONALITY As System.Nullable(Of Short)
		
		Private _DEPART As System.Nullable(Of Short)
		
		Private _SOTITLE As System.Nullable(Of Short)
		
		Private _SOTITLENAME As String
		
		Private _SPECIALTY As System.Nullable(Of Short)
		
		Private _COMPLEXITY As System.Nullable(Of Short)
		
		Private _SOSEX As System.Nullable(Of Short)
		
		Private _EDUCAT As System.Nullable(Of Short)
		
		Private _TRUCKS As System.Nullable(Of Short)
		
		Private _BIRTHDATE As System.Nullable(Of Date)
		
		Private _FIRSTINDATE As System.Nullable(Of Date)
		
		Private _SOFROMTIME As System.Nullable(Of Date)
		
		Private _SOTOTIME As System.Nullable(Of Date)
		
		Private _ADDRESS As String
		
		Private _ZIP As String
		
		Private _DISTRICT As String
		
		Private _CITY As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _COUNTRY As System.Nullable(Of Short)
		
		Private _AREAS As System.Nullable(Of Short)
		
		Private _PHONE1 As String
		
		Private _PHONE2 As String
		
		Private _PHONEEXT As String
		
		Private _FAX As String
		
		Private _MOBILEPHONE As String
		
		Private _PHONELOCAL As String
		
		Private _WEBPAGE As String
		
		Private _EMAIL As String
		
		Private _EMAIL1 As String
		
		Private _IRSDATA As String
		
		Private _ISPROSP As Short
		
		Private _ACNMSK As String
		
		Private _REMARKS As String
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _USERCODE As String
		
		Private _SOPASSWORD As String
		
		Private _TRDRs As EntitySet(Of TRDR)
		
		Private _TRDRs1 As EntitySet(Of TRDR)
		
		Private _TRDBRANCHes As EntitySet(Of TRDBRANCH)
		
		Private _FINDOCs As EntitySet(Of FINDOC)
		
		Private _FINDOCs1 As EntitySet(Of FINDOC)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnLOCKIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCKIDChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnPRSNChanging(value As Integer)
    End Sub
    Partial Private Sub OnPRSNChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnNAME2Changing(value As String)
    End Sub
    Partial Private Sub OnNAME2Changed()
    End Sub
    Partial Private Sub OnNAME3Changing(value As String)
    End Sub
    Partial Private Sub OnNAME3Changed()
    End Sub
    Partial Private Sub OnNAME4Changing(value As String)
    End Sub
    Partial Private Sub OnNAME4Changed()
    End Sub
    Partial Private Sub OnNAME5Changing(value As String)
    End Sub
    Partial Private Sub OnNAME5Changed()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnISINPAYChanging(value As Short)
    End Sub
    Partial Private Sub OnISINPAYChanged()
    End Sub
    Partial Private Sub OnTINPERSONChanging(value As String)
    End Sub
    Partial Private Sub OnTINPERSONChanged()
    End Sub
    Partial Private Sub OnTPRSNChanging(value As Short)
    End Sub
    Partial Private Sub OnTPRSNChanged()
    End Sub
    Partial Private Sub OnUSERSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUSERSChanged()
    End Sub
    Partial Private Sub OnBRANCHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBRANCHChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnGPNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGPNTChanged()
    End Sub
    Partial Private Sub OnPRJCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJCChanged()
    End Sub
    Partial Private Sub OnPRSNIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRSNIDChanged()
    End Sub
    Partial Private Sub OnAFMChanging(value As String)
    End Sub
    Partial Private Sub OnAFMChanged()
    End Sub
    Partial Private Sub OnIDENTITYNUMChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTITYNUMChanged()
    End Sub
    Partial Private Sub OnNATIONALITYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNATIONALITYChanged()
    End Sub
    Partial Private Sub OnDEPARTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDEPARTChanged()
    End Sub
    Partial Private Sub OnSOTITLEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOTITLEChanged()
    End Sub
    Partial Private Sub OnSOTITLENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSOTITLENAMEChanged()
    End Sub
    Partial Private Sub OnSPECIALTYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSPECIALTYChanged()
    End Sub
    Partial Private Sub OnCOMPLEXITYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOMPLEXITYChanged()
    End Sub
    Partial Private Sub OnSOSEXChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOSEXChanged()
    End Sub
    Partial Private Sub OnEDUCATChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEDUCATChanged()
    End Sub
    Partial Private Sub OnTRUCKSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTRUCKSChanged()
    End Sub
    Partial Private Sub OnBIRTHDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBIRTHDATEChanged()
    End Sub
    Partial Private Sub OnFIRSTINDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFIRSTINDATEChanged()
    End Sub
    Partial Private Sub OnSOFROMTIMEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSOFROMTIMEChanged()
    End Sub
    Partial Private Sub OnSOTOTIMEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSOTOTIMEChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnDISTRICT1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDISTRICT1Changed()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnAREASChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnAREASChanged()
    End Sub
    Partial Private Sub OnPHONE1Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE1Changed()
    End Sub
    Partial Private Sub OnPHONE2Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE2Changed()
    End Sub
    Partial Private Sub OnPHONEEXTChanging(value As String)
    End Sub
    Partial Private Sub OnPHONEEXTChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnMOBILEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnMOBILEPHONEChanged()
    End Sub
    Partial Private Sub OnPHONELOCALChanging(value As String)
    End Sub
    Partial Private Sub OnPHONELOCALChanged()
    End Sub
    Partial Private Sub OnWEBPAGEChanging(value As String)
    End Sub
    Partial Private Sub OnWEBPAGEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnEMAIL1Changing(value As String)
    End Sub
    Partial Private Sub OnEMAIL1Changed()
    End Sub
    Partial Private Sub OnIRSDATAChanging(value As String)
    End Sub
    Partial Private Sub OnIRSDATAChanged()
    End Sub
    Partial Private Sub OnISPROSPChanging(value As Short)
    End Sub
    Partial Private Sub OnISPROSPChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnUSERCODEChanging(value As String)
    End Sub
    Partial Private Sub OnUSERCODEChanged()
    End Sub
    Partial Private Sub OnSOPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnSOPASSWORDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._TRDRs = New EntitySet(Of TRDR)(AddressOf Me.attach_TRDRs, AddressOf Me.detach_TRDRs)
			Me._TRDRs1 = New EntitySet(Of TRDR)(AddressOf Me.attach_TRDRs1, AddressOf Me.detach_TRDRs1)
			Me._TRDBRANCHes = New EntitySet(Of TRDBRANCH)(AddressOf Me.attach_TRDBRANCHes, AddressOf Me.detach_TRDBRANCHes)
			Me._FINDOCs = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs, AddressOf Me.detach_FINDOCs)
			Me._FINDOCs1 = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs1, AddressOf Me.detach_FINDOCs1)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCKID", DbType:="Int")>  _
		Public Property LOCKID() As System.Nullable(Of Integer)
			Get
				Return Me._LOCKID
			End Get
			Set
				If (Me._LOCKID.Equals(value) = false) Then
					Me.OnLOCKIDChanging(value)
					Me.SendPropertyChanging
					Me._LOCKID = value
					Me.SendPropertyChanged("LOCKID")
					Me.OnLOCKIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSN", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PRSN() As Integer
			Get
				Return Me._PRSN
			End Get
			Set
				If ((Me._PRSN = value)  _
							= false) Then
					Me.OnPRSNChanging(value)
					Me.SendPropertyChanging
					Me._PRSN = value
					Me.SendPropertyChanged("PRSN")
					Me.OnPRSNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME2", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME2() As String
			Get
				Return Me._NAME2
			End Get
			Set
				If (String.Equals(Me._NAME2, value) = false) Then
					Me.OnNAME2Changing(value)
					Me.SendPropertyChanging
					Me._NAME2 = value
					Me.SendPropertyChanged("NAME2")
					Me.OnNAME2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME3", DbType:="VarChar(64)")>  _
		Public Property NAME3() As String
			Get
				Return Me._NAME3
			End Get
			Set
				If (String.Equals(Me._NAME3, value) = false) Then
					Me.OnNAME3Changing(value)
					Me.SendPropertyChanging
					Me._NAME3 = value
					Me.SendPropertyChanged("NAME3")
					Me.OnNAME3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME4", DbType:="VarChar(64)")>  _
		Public Property NAME4() As String
			Get
				Return Me._NAME4
			End Get
			Set
				If (String.Equals(Me._NAME4, value) = false) Then
					Me.OnNAME4Changing(value)
					Me.SendPropertyChanging
					Me._NAME4 = value
					Me.SendPropertyChanged("NAME4")
					Me.OnNAME4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME5", DbType:="VarChar(64)")>  _
		Public Property NAME5() As String
			Get
				Return Me._NAME5
			End Get
			Set
				If (String.Equals(Me._NAME5, value) = false) Then
					Me.OnNAME5Changing(value)
					Me.SendPropertyChanging
					Me._NAME5 = value
					Me.SendPropertyChanged("NAME5")
					Me.OnNAME5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISINPAY", DbType:="SmallInt NOT NULL")>  _
		Public Property ISINPAY() As Short
			Get
				Return Me._ISINPAY
			End Get
			Set
				If ((Me._ISINPAY = value)  _
							= false) Then
					Me.OnISINPAYChanging(value)
					Me.SendPropertyChanging
					Me._ISINPAY = value
					Me.SendPropertyChanged("ISINPAY")
					Me.OnISINPAYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TINPERSON", DbType:="VarChar(32)")>  _
		Public Property TINPERSON() As String
			Get
				Return Me._TINPERSON
			End Get
			Set
				If (String.Equals(Me._TINPERSON, value) = false) Then
					Me.OnTINPERSONChanging(value)
					Me.SendPropertyChanging
					Me._TINPERSON = value
					Me.SendPropertyChanged("TINPERSON")
					Me.OnTINPERSONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPRSN", DbType:="SmallInt NOT NULL")>  _
		Public Property TPRSN() As Short
			Get
				Return Me._TPRSN
			End Get
			Set
				If ((Me._TPRSN = value)  _
							= false) Then
					Me.OnTPRSNChanging(value)
					Me.SendPropertyChanging
					Me._TPRSN = value
					Me.SendPropertyChanged("TPRSN")
					Me.OnTPRSNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USERS", DbType:="SmallInt")>  _
		Public Property USERS() As System.Nullable(Of Short)
			Get
				Return Me._USERS
			End Get
			Set
				If (Me._USERS.Equals(value) = false) Then
					Me.OnUSERSChanging(value)
					Me.SendPropertyChanging
					Me._USERS = value
					Me.SendPropertyChanged("USERS")
					Me.OnUSERSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt")>  _
		Public Property BRANCH() As System.Nullable(Of Short)
			Get
				Return Me._BRANCH
			End Get
			Set
				If (Me._BRANCH.Equals(value) = false) Then
					Me.OnBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BRANCH = value
					Me.SendPropertyChanged("BRANCH")
					Me.OnBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GPNT", DbType:="Int")>  _
		Public Property GPNT() As System.Nullable(Of Integer)
			Get
				Return Me._GPNT
			End Get
			Set
				If (Me._GPNT.Equals(value) = false) Then
					Me.OnGPNTChanging(value)
					Me.SendPropertyChanging
					Me._GPNT = value
					Me.SendPropertyChanged("GPNT")
					Me.OnGPNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJC", DbType:="Int")>  _
		Public Property PRJC() As System.Nullable(Of Integer)
			Get
				Return Me._PRJC
			End Get
			Set
				If (Me._PRJC.Equals(value) = false) Then
					Me.OnPRJCChanging(value)
					Me.SendPropertyChanging
					Me._PRJC = value
					Me.SendPropertyChanged("PRJC")
					Me.OnPRJCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSNID", DbType:="Int")>  _
		Public Property PRSNID() As System.Nullable(Of Integer)
			Get
				Return Me._PRSNID
			End Get
			Set
				If (Me._PRSNID.Equals(value) = false) Then
					Me.OnPRSNIDChanging(value)
					Me.SendPropertyChanging
					Me._PRSNID = value
					Me.SendPropertyChanged("PRSNID")
					Me.OnPRSNIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AFM", DbType:="VarChar(20)")>  _
		Public Property AFM() As String
			Get
				Return Me._AFM
			End Get
			Set
				If (String.Equals(Me._AFM, value) = false) Then
					Me.OnAFMChanging(value)
					Me.SendPropertyChanging
					Me._AFM = value
					Me.SendPropertyChanged("AFM")
					Me.OnAFMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTITYNUM", DbType:="VarChar(15)")>  _
		Public Property IDENTITYNUM() As String
			Get
				Return Me._IDENTITYNUM
			End Get
			Set
				If (String.Equals(Me._IDENTITYNUM, value) = false) Then
					Me.OnIDENTITYNUMChanging(value)
					Me.SendPropertyChanging
					Me._IDENTITYNUM = value
					Me.SendPropertyChanged("IDENTITYNUM")
					Me.OnIDENTITYNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONALITY", DbType:="SmallInt")>  _
		Public Property NATIONALITY() As System.Nullable(Of Short)
			Get
				Return Me._NATIONALITY
			End Get
			Set
				If (Me._NATIONALITY.Equals(value) = false) Then
					Me.OnNATIONALITYChanging(value)
					Me.SendPropertyChanging
					Me._NATIONALITY = value
					Me.SendPropertyChanged("NATIONALITY")
					Me.OnNATIONALITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPART", DbType:="SmallInt")>  _
		Public Property DEPART() As System.Nullable(Of Short)
			Get
				Return Me._DEPART
			End Get
			Set
				If (Me._DEPART.Equals(value) = false) Then
					Me.OnDEPARTChanging(value)
					Me.SendPropertyChanging
					Me._DEPART = value
					Me.SendPropertyChanged("DEPART")
					Me.OnDEPARTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOTITLE", DbType:="SmallInt")>  _
		Public Property SOTITLE() As System.Nullable(Of Short)
			Get
				Return Me._SOTITLE
			End Get
			Set
				If (Me._SOTITLE.Equals(value) = false) Then
					Me.OnSOTITLEChanging(value)
					Me.SendPropertyChanging
					Me._SOTITLE = value
					Me.SendPropertyChanged("SOTITLE")
					Me.OnSOTITLEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOTITLENAME", DbType:="VarChar(64)")>  _
		Public Property SOTITLENAME() As String
			Get
				Return Me._SOTITLENAME
			End Get
			Set
				If (String.Equals(Me._SOTITLENAME, value) = false) Then
					Me.OnSOTITLENAMEChanging(value)
					Me.SendPropertyChanging
					Me._SOTITLENAME = value
					Me.SendPropertyChanged("SOTITLENAME")
					Me.OnSOTITLENAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIALTY", DbType:="SmallInt")>  _
		Public Property SPECIALTY() As System.Nullable(Of Short)
			Get
				Return Me._SPECIALTY
			End Get
			Set
				If (Me._SPECIALTY.Equals(value) = false) Then
					Me.OnSPECIALTYChanging(value)
					Me.SendPropertyChanging
					Me._SPECIALTY = value
					Me.SendPropertyChanged("SPECIALTY")
					Me.OnSPECIALTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPLEXITY", DbType:="SmallInt")>  _
		Public Property COMPLEXITY() As System.Nullable(Of Short)
			Get
				Return Me._COMPLEXITY
			End Get
			Set
				If (Me._COMPLEXITY.Equals(value) = false) Then
					Me.OnCOMPLEXITYChanging(value)
					Me.SendPropertyChanging
					Me._COMPLEXITY = value
					Me.SendPropertyChanged("COMPLEXITY")
					Me.OnCOMPLEXITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSEX", DbType:="SmallInt")>  _
		Public Property SOSEX() As System.Nullable(Of Short)
			Get
				Return Me._SOSEX
			End Get
			Set
				If (Me._SOSEX.Equals(value) = false) Then
					Me.OnSOSEXChanging(value)
					Me.SendPropertyChanging
					Me._SOSEX = value
					Me.SendPropertyChanged("SOSEX")
					Me.OnSOSEXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDUCAT", DbType:="SmallInt")>  _
		Public Property EDUCAT() As System.Nullable(Of Short)
			Get
				Return Me._EDUCAT
			End Get
			Set
				If (Me._EDUCAT.Equals(value) = false) Then
					Me.OnEDUCATChanging(value)
					Me.SendPropertyChanging
					Me._EDUCAT = value
					Me.SendPropertyChanged("EDUCAT")
					Me.OnEDUCATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUCKS", DbType:="SmallInt")>  _
		Public Property TRUCKS() As System.Nullable(Of Short)
			Get
				Return Me._TRUCKS
			End Get
			Set
				If (Me._TRUCKS.Equals(value) = false) Then
					Me.OnTRUCKSChanging(value)
					Me.SendPropertyChanging
					Me._TRUCKS = value
					Me.SendPropertyChanged("TRUCKS")
					Me.OnTRUCKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIRTHDATE", DbType:="DateTime")>  _
		Public Property BIRTHDATE() As System.Nullable(Of Date)
			Get
				Return Me._BIRTHDATE
			End Get
			Set
				If (Me._BIRTHDATE.Equals(value) = false) Then
					Me.OnBIRTHDATEChanging(value)
					Me.SendPropertyChanging
					Me._BIRTHDATE = value
					Me.SendPropertyChanged("BIRTHDATE")
					Me.OnBIRTHDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRSTINDATE", DbType:="DateTime")>  _
		Public Property FIRSTINDATE() As System.Nullable(Of Date)
			Get
				Return Me._FIRSTINDATE
			End Get
			Set
				If (Me._FIRSTINDATE.Equals(value) = false) Then
					Me.OnFIRSTINDATEChanging(value)
					Me.SendPropertyChanging
					Me._FIRSTINDATE = value
					Me.SendPropertyChanged("FIRSTINDATE")
					Me.OnFIRSTINDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOFROMTIME", DbType:="DateTime")>  _
		Public Property SOFROMTIME() As System.Nullable(Of Date)
			Get
				Return Me._SOFROMTIME
			End Get
			Set
				If (Me._SOFROMTIME.Equals(value) = false) Then
					Me.OnSOFROMTIMEChanging(value)
					Me.SendPropertyChanging
					Me._SOFROMTIME = value
					Me.SendPropertyChanged("SOFROMTIME")
					Me.OnSOFROMTIMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOTOTIME", DbType:="DateTime")>  _
		Public Property SOTOTIME() As System.Nullable(Of Date)
			Get
				Return Me._SOTOTIME
			End Get
			Set
				If (Me._SOTOTIME.Equals(value) = false) Then
					Me.OnSOTOTIMEChanging(value)
					Me.SendPropertyChanging
					Me._SOTOTIME = value
					Me.SendPropertyChanged("SOTOTIME")
					Me.OnSOTOTIMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(50)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me.OnADDRESSChanging(value)
					Me.SendPropertyChanging
					Me._ADDRESS = value
					Me.SendPropertyChanged("ADDRESS")
					Me.OnADDRESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)")>  _
		Public Property ZIP() As String
			Get
				Return Me._ZIP
			End Get
			Set
				If (String.Equals(Me._ZIP, value) = false) Then
					Me.OnZIPChanging(value)
					Me.SendPropertyChanging
					Me._ZIP = value
					Me.SendPropertyChanged("ZIP")
					Me.OnZIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="VarChar(40)")>  _
		Public Property DISTRICT() As String
			Get
				Return Me._DISTRICT
			End Get
			Set
				If (String.Equals(Me._DISTRICT, value) = false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me.OnCITYChanging(value)
					Me.SendPropertyChanging
					Me._CITY = value
					Me.SendPropertyChanged("CITY")
					Me.OnCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me.OnDISTRICT1Changing(value)
					Me.SendPropertyChanging
					Me._DISTRICT1 = value
					Me.SendPropertyChanged("DISTRICT1")
					Me.OnDISTRICT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt")>  _
		Public Property COUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._COUNTRY
			End Get
			Set
				If (Me._COUNTRY.Equals(value) = false) Then
					Me.OnCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._COUNTRY = value
					Me.SendPropertyChanged("COUNTRY")
					Me.OnCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AREAS", DbType:="SmallInt")>  _
		Public Property AREAS() As System.Nullable(Of Short)
			Get
				Return Me._AREAS
			End Get
			Set
				If (Me._AREAS.Equals(value) = false) Then
					Me.OnAREASChanging(value)
					Me.SendPropertyChanging
					Me._AREAS = value
					Me.SendPropertyChanged("AREAS")
					Me.OnAREASChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE1", DbType:="VarChar(20)")>  _
		Public Property PHONE1() As String
			Get
				Return Me._PHONE1
			End Get
			Set
				If (String.Equals(Me._PHONE1, value) = false) Then
					Me.OnPHONE1Changing(value)
					Me.SendPropertyChanging
					Me._PHONE1 = value
					Me.SendPropertyChanged("PHONE1")
					Me.OnPHONE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE2", DbType:="VarChar(20)")>  _
		Public Property PHONE2() As String
			Get
				Return Me._PHONE2
			End Get
			Set
				If (String.Equals(Me._PHONE2, value) = false) Then
					Me.OnPHONE2Changing(value)
					Me.SendPropertyChanging
					Me._PHONE2 = value
					Me.SendPropertyChanged("PHONE2")
					Me.OnPHONE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONEEXT", DbType:="VarChar(20)")>  _
		Public Property PHONEEXT() As String
			Get
				Return Me._PHONEEXT
			End Get
			Set
				If (String.Equals(Me._PHONEEXT, value) = false) Then
					Me.OnPHONEEXTChanging(value)
					Me.SendPropertyChanging
					Me._PHONEEXT = value
					Me.SendPropertyChanged("PHONEEXT")
					Me.OnPHONEEXTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="VarChar(20)")>  _
		Public Property FAX() As String
			Get
				Return Me._FAX
			End Get
			Set
				If (String.Equals(Me._FAX, value) = false) Then
					Me.OnFAXChanging(value)
					Me.SendPropertyChanging
					Me._FAX = value
					Me.SendPropertyChanged("FAX")
					Me.OnFAXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILEPHONE", DbType:="VarChar(20)")>  _
		Public Property MOBILEPHONE() As String
			Get
				Return Me._MOBILEPHONE
			End Get
			Set
				If (String.Equals(Me._MOBILEPHONE, value) = false) Then
					Me.OnMOBILEPHONEChanging(value)
					Me.SendPropertyChanging
					Me._MOBILEPHONE = value
					Me.SendPropertyChanged("MOBILEPHONE")
					Me.OnMOBILEPHONEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONELOCAL", DbType:="VarChar(20)")>  _
		Public Property PHONELOCAL() As String
			Get
				Return Me._PHONELOCAL
			End Get
			Set
				If (String.Equals(Me._PHONELOCAL, value) = false) Then
					Me.OnPHONELOCALChanging(value)
					Me.SendPropertyChanging
					Me._PHONELOCAL = value
					Me.SendPropertyChanged("PHONELOCAL")
					Me.OnPHONELOCALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEBPAGE", DbType:="VarChar(64)")>  _
		Public Property WEBPAGE() As String
			Get
				Return Me._WEBPAGE
			End Get
			Set
				If (String.Equals(Me._WEBPAGE, value) = false) Then
					Me.OnWEBPAGEChanging(value)
					Me.SendPropertyChanging
					Me._WEBPAGE = value
					Me.SendPropertyChanged("WEBPAGE")
					Me.OnWEBPAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="VarChar(64)")>  _
		Public Property EMAIL() As String
			Get
				Return Me._EMAIL
			End Get
			Set
				If (String.Equals(Me._EMAIL, value) = false) Then
					Me.OnEMAILChanging(value)
					Me.SendPropertyChanging
					Me._EMAIL = value
					Me.SendPropertyChanged("EMAIL")
					Me.OnEMAILChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL1", DbType:="VarChar(64)")>  _
		Public Property EMAIL1() As String
			Get
				Return Me._EMAIL1
			End Get
			Set
				If (String.Equals(Me._EMAIL1, value) = false) Then
					Me.OnEMAIL1Changing(value)
					Me.SendPropertyChanging
					Me._EMAIL1 = value
					Me.SendPropertyChanged("EMAIL1")
					Me.OnEMAIL1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IRSDATA", DbType:="VarChar(128)")>  _
		Public Property IRSDATA() As String
			Get
				Return Me._IRSDATA
			End Get
			Set
				If (String.Equals(Me._IRSDATA, value) = false) Then
					Me.OnIRSDATAChanging(value)
					Me.SendPropertyChanging
					Me._IRSDATA = value
					Me.SendPropertyChanged("IRSDATA")
					Me.OnIRSDATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISPROSP", DbType:="SmallInt NOT NULL")>  _
		Public Property ISPROSP() As Short
			Get
				Return Me._ISPROSP
			End Get
			Set
				If ((Me._ISPROSP = value)  _
							= false) Then
					Me.OnISPROSPChanging(value)
					Me.SendPropertyChanging
					Me._ISPROSP = value
					Me.SendPropertyChanged("ISPROSP")
					Me.OnISPROSPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(2000)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USERCODE", DbType:="VarChar(255)")>  _
		Public Property USERCODE() As String
			Get
				Return Me._USERCODE
			End Get
			Set
				If (String.Equals(Me._USERCODE, value) = false) Then
					Me.OnUSERCODEChanging(value)
					Me.SendPropertyChanging
					Me._USERCODE = value
					Me.SendPropertyChanged("USERCODE")
					Me.OnUSERCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPASSWORD", DbType:="VarChar(255)")>  _
		Public Property SOPASSWORD() As String
			Get
				Return Me._SOPASSWORD
			End Get
			Set
				If (String.Equals(Me._SOPASSWORD, value) = false) Then
					Me.OnSOPASSWORDChanging(value)
					Me.SendPropertyChanging
					Me._SOPASSWORD = value
					Me.SendPropertyChanged("SOPASSWORD")
					Me.OnSOPASSWORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_TRDR", Storage:="_TRDRs", ThisKey:="PRSN", OtherKey:="COLLECTOR")>  _
		Public Property TRDRs() As EntitySet(Of TRDR)
			Get
				Return Me._TRDRs
			End Get
			Set
				Me._TRDRs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_TRDR1", Storage:="_TRDRs1", ThisKey:="PRSN", OtherKey:="SALESMAN")>  _
		Public Property TRDRs1() As EntitySet(Of TRDR)
			Get
				Return Me._TRDRs1
			End Get
			Set
				Me._TRDRs1.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_TRDBRANCH", Storage:="_TRDBRANCHes", ThisKey:="PRSN", OtherKey:="SALESMAN")>  _
		Public Property TRDBRANCHes() As EntitySet(Of TRDBRANCH)
			Get
				Return Me._TRDBRANCHes
			End Get
			Set
				Me._TRDBRANCHes.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_FINDOC", Storage:="_FINDOCs", ThisKey:="PRSN", OtherKey:="COLLECTOR")>  _
		Public Property FINDOCs() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs
			End Get
			Set
				Me._FINDOCs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_FINDOC1", Storage:="_FINDOCs1", ThisKey:="PRSN", OtherKey:="SALESMAN")>  _
		Public Property FINDOCs1() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs1
			End Get
			Set
				Me._FINDOCs1.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_TRDRs(ByVal entity As TRDR)
			Me.SendPropertyChanging
			entity.PRSN = Me
		End Sub
		
		Private Sub detach_TRDRs(ByVal entity As TRDR)
			Me.SendPropertyChanging
			entity.PRSN = Nothing
		End Sub
		
		Private Sub attach_TRDRs1(ByVal entity As TRDR)
			Me.SendPropertyChanging
			entity.PRSN1 = Me
		End Sub
		
		Private Sub detach_TRDRs1(ByVal entity As TRDR)
			Me.SendPropertyChanging
			entity.PRSN1 = Nothing
		End Sub
		
		Private Sub attach_TRDBRANCHes(ByVal entity As TRDBRANCH)
			Me.SendPropertyChanging
			entity.PRSN = Me
		End Sub
		
		Private Sub detach_TRDBRANCHes(ByVal entity As TRDBRANCH)
			Me.SendPropertyChanging
			entity.PRSN = Nothing
		End Sub
		
		Private Sub attach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.PRSN = Me
		End Sub
		
		Private Sub detach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.PRSN = Nothing
		End Sub
		
		Private Sub attach_FINDOCs1(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.PRSN1 = Me
		End Sub
		
		Private Sub detach_FINDOCs1(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.PRSN1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVSoCarrierProPayments")>  _
	Partial Public Class ccCVSoCarrierProPayment
		
		Private _FINDOC As Integer
		
		Private _TRNDATE As Date
		
		Private _COMPANY As Short
		
		Private _TRDR As Integer
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _VATAMNT As Double
		
		Private _NETAMNT As Double
		
		Private _SUMAMNT As Double
		
		Private _fincodeTim As String
		
		Private _FULLYTRANSF As Short
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL")>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime NOT NULL")>  _
		Public Property TRNDATE() As Date
			Get
				Return Me._TRNDATE
			End Get
			Set
				If ((Me._TRNDATE = value)  _
							= false) Then
					Me._TRNDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me._COMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATAMNT", DbType:="Float NOT NULL")>  _
		Public Property VATAMNT() As Double
			Get
				Return Me._VATAMNT
			End Get
			Set
				If ((Me._VATAMNT = value)  _
							= false) Then
					Me._VATAMNT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETAMNT", DbType:="Float NOT NULL")>  _
		Public Property NETAMNT() As Double
			Get
				Return Me._NETAMNT
			End Get
			Set
				If ((Me._NETAMNT = value)  _
							= false) Then
					Me._NETAMNT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUMAMNT", DbType:="Float NOT NULL")>  _
		Public Property SUMAMNT() As Double
			Get
				Return Me._SUMAMNT
			End Get
			Set
				If ((Me._SUMAMNT = value)  _
							= false) Then
					Me._SUMAMNT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fincodeTim", DbType:="VarChar(30)")>  _
		Public Property fincodeTim() As String
			Get
				Return Me._fincodeTim
			End Get
			Set
				If (String.Equals(Me._fincodeTim, value) = false) Then
					Me._fincodeTim = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULLYTRANSF", DbType:="SmallInt NOT NULL")>  _
		Public Property FULLYTRANSF() As Short
			Get
				Return Me._FULLYTRANSF
			End Get
			Set
				If ((Me._FULLYTRANSF = value)  _
							= false) Then
					Me._FULLYTRANSF = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHEQUE")>  _
	Partial Public Class CHEQUE
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SODTYPE As Short
		
		Private _CHEQUE As Integer
		
		Private _SOSOURCE As System.Nullable(Of Integer)
		
		Private _FISCPRD As Short
		
		Private _PERIOD As Short
		
		Private _SERIES As Short
		
		Private _FPRMS As Short
		
		Private _CHEQUETYPE As Short
		
		Private _CHEQUEKIND As Short
		
		Private _SERIESNUM As Integer
		
		Private _CODE As String
		
		Private _CHEQUENUMBER As String
		
		Private _CHEQUESTATES As Short
		
		Private _BANK As System.Nullable(Of Integer)
		
		Private _BANKBRANCH As System.Nullable(Of Integer)
		
		Private _BANKACC As System.Nullable(Of Integer)
		
		Private _BANKACNNUM As String
		
		Private _CRTDATE As System.Nullable(Of Date)
		
		Private _DATEOFS As Date
		
		Private _PLACEOFS As String
		
		Private _FINALDATE As Date
		
		Private _FFISCPRD As System.Nullable(Of Short)
		
		Private _FPERIOD As System.Nullable(Of Short)
		
		Private _SOCURRENCY As Short
		
		Private _CHEQUERATE As Double
		
		Private _CHEQUEVAL As Double
		
		Private _LCHEQUEVAL As Double
		
		Private _CHEQUEBAL As Double
		
		Private _LCHEQUEBAL As Double
		
		Private _SODTYPEPUBLISHER As Short
		
		Private _TRDRPUBLISHER As System.Nullable(Of Integer)
		
		Private _CREATORNAME As String
		
		Private _CREATORADDR As String
		
		Private _PUBLISHERAFM As String
		
		Private _CREATORPHONE As String
		
		Private _SODTYPEPOSSESSOR As System.Nullable(Of Short)
		
		Private _TRDRPOSSESSOR As System.Nullable(Of Integer)
		
		Private _HOLDERNAME As String
		
		Private _HOLDERADDR As String
		
		Private _GUARANTNAME As String
		
		Private _OSMODE As Short
		
		Private _FOLDER As System.Nullable(Of Short)
		
		Private _ISBLOCKED As Short
		
		Private _TRANSFERABLE As Short
		
		Private _ACNMSK As String
		
		Private _REMARKS As String
		
		Private _TRNDATE As System.Nullable(Of Date)
		
		Private _PAYDATE As System.Nullable(Of Date)
		
		Private _FINDOCC As System.Nullable(Of Integer)
		
		Private _TRDFLINESC As System.Nullable(Of Integer)
		
		Private _CODELINE As String
		
		Private _ISPRINT As Short
		
		Private _CSODTYPE As System.Nullable(Of Short)
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _ISCANCEL As Short
		
		Private _OCHEQUESTATES As System.Nullable(Of Short)
		
		Private _OSODTYPEPOSSESSOR As System.Nullable(Of Short)
		
		Private _OTRDRPOSSESSOR As System.Nullable(Of Integer)
		
		Private _OPOSSESSORNAME As String
		
		Private _OPOSSESSORADDRESS As String
		
		Private _OCHEQUEBAL As System.Nullable(Of Double)
		
		Private _OFOLDER As System.Nullable(Of Short)
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _TEMPID As System.Nullable(Of Integer)
		
		Private _TRDFLINEs As EntitySet(Of TRDFLINE)
		
		Private _FPRM As EntityRef(Of FPRM)
		
		Private _SERIES1 As EntityRef(Of SERIES)
		
		Private _TRDFLINE As EntityRef(Of TRDFLINE)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnCHEQUEChanging(value As Integer)
    End Sub
    Partial Private Sub OnCHEQUEChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnFISCPRDChanging(value As Short)
    End Sub
    Partial Private Sub OnFISCPRDChanged()
    End Sub
    Partial Private Sub OnPERIODChanging(value As Short)
    End Sub
    Partial Private Sub OnPERIODChanged()
    End Sub
    Partial Private Sub OnSERIESChanging(value As Short)
    End Sub
    Partial Private Sub OnSERIESChanged()
    End Sub
    Partial Private Sub OnFPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnFPRMSChanged()
    End Sub
    Partial Private Sub OnCHEQUETYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnCHEQUETYPEChanged()
    End Sub
    Partial Private Sub OnCHEQUEKINDChanging(value As Short)
    End Sub
    Partial Private Sub OnCHEQUEKINDChanged()
    End Sub
    Partial Private Sub OnSERIESNUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnSERIESNUMChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnCHEQUENUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCHEQUENUMBERChanged()
    End Sub
    Partial Private Sub OnCHEQUESTATESChanging(value As Short)
    End Sub
    Partial Private Sub OnCHEQUESTATESChanged()
    End Sub
    Partial Private Sub OnBANKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANKChanged()
    End Sub
    Partial Private Sub OnBANKBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANKBRANCHChanged()
    End Sub
    Partial Private Sub OnBANKACCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANKACCChanged()
    End Sub
    Partial Private Sub OnBANKACNNUMChanging(value As String)
    End Sub
    Partial Private Sub OnBANKACNNUMChanged()
    End Sub
    Partial Private Sub OnCRTDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCRTDATEChanged()
    End Sub
    Partial Private Sub OnDATEOFSChanging(value As Date)
    End Sub
    Partial Private Sub OnDATEOFSChanged()
    End Sub
    Partial Private Sub OnPLACEOFSChanging(value As String)
    End Sub
    Partial Private Sub OnPLACEOFSChanged()
    End Sub
    Partial Private Sub OnFINALDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnFINALDATEChanged()
    End Sub
    Partial Private Sub OnFFISCPRDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFFISCPRDChanged()
    End Sub
    Partial Private Sub OnFPERIODChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFPERIODChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCURRENCYChanged()
    End Sub
    Partial Private Sub OnCHEQUERATEChanging(value As Double)
    End Sub
    Partial Private Sub OnCHEQUERATEChanged()
    End Sub
    Partial Private Sub OnCHEQUEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnCHEQUEVALChanged()
    End Sub
    Partial Private Sub OnLCHEQUEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnLCHEQUEVALChanged()
    End Sub
    Partial Private Sub OnCHEQUEBALChanging(value As Double)
    End Sub
    Partial Private Sub OnCHEQUEBALChanged()
    End Sub
    Partial Private Sub OnLCHEQUEBALChanging(value As Double)
    End Sub
    Partial Private Sub OnLCHEQUEBALChanged()
    End Sub
    Partial Private Sub OnSODTYPEPUBLISHERChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEPUBLISHERChanged()
    End Sub
    Partial Private Sub OnTRDRPUBLISHERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRPUBLISHERChanged()
    End Sub
    Partial Private Sub OnCREATORNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCREATORNAMEChanged()
    End Sub
    Partial Private Sub OnCREATORADDRChanging(value As String)
    End Sub
    Partial Private Sub OnCREATORADDRChanged()
    End Sub
    Partial Private Sub OnPUBLISHERAFMChanging(value As String)
    End Sub
    Partial Private Sub OnPUBLISHERAFMChanged()
    End Sub
    Partial Private Sub OnCREATORPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnCREATORPHONEChanged()
    End Sub
    Partial Private Sub OnSODTYPEPOSSESSORChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSODTYPEPOSSESSORChanged()
    End Sub
    Partial Private Sub OnTRDRPOSSESSORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRPOSSESSORChanged()
    End Sub
    Partial Private Sub OnHOLDERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOLDERNAMEChanged()
    End Sub
    Partial Private Sub OnHOLDERADDRChanging(value As String)
    End Sub
    Partial Private Sub OnHOLDERADDRChanged()
    End Sub
    Partial Private Sub OnGUARANTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGUARANTNAMEChanged()
    End Sub
    Partial Private Sub OnOSMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnOSMODEChanged()
    End Sub
    Partial Private Sub OnFOLDERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFOLDERChanged()
    End Sub
    Partial Private Sub OnISBLOCKEDChanging(value As Short)
    End Sub
    Partial Private Sub OnISBLOCKEDChanged()
    End Sub
    Partial Private Sub OnTRANSFERABLEChanging(value As Short)
    End Sub
    Partial Private Sub OnTRANSFERABLEChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnTRNDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTRNDATEChanged()
    End Sub
    Partial Private Sub OnPAYDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPAYDATEChanged()
    End Sub
    Partial Private Sub OnFINDOCCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCCChanged()
    End Sub
    Partial Private Sub OnTRDFLINESCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDFLINESCChanged()
    End Sub
    Partial Private Sub OnCODELINEChanging(value As String)
    End Sub
    Partial Private Sub OnCODELINEChanged()
    End Sub
    Partial Private Sub OnISPRINTChanging(value As Short)
    End Sub
    Partial Private Sub OnISPRINTChanged()
    End Sub
    Partial Private Sub OnCSODTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCSODTYPEChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnISCANCELChanging(value As Short)
    End Sub
    Partial Private Sub OnISCANCELChanged()
    End Sub
    Partial Private Sub OnOCHEQUESTATESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnOCHEQUESTATESChanged()
    End Sub
    Partial Private Sub OnOSODTYPEPOSSESSORChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnOSODTYPEPOSSESSORChanged()
    End Sub
    Partial Private Sub OnOTRDRPOSSESSORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOTRDRPOSSESSORChanged()
    End Sub
    Partial Private Sub OnOPOSSESSORNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOPOSSESSORNAMEChanged()
    End Sub
    Partial Private Sub OnOPOSSESSORADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnOPOSSESSORADDRESSChanged()
    End Sub
    Partial Private Sub OnOCHEQUEBALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOCHEQUEBALChanged()
    End Sub
    Partial Private Sub OnOFOLDERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnOFOLDERChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnTEMPIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPIDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._TRDFLINEs = New EntitySet(Of TRDFLINE)(AddressOf Me.attach_TRDFLINEs, AddressOf Me.detach_TRDFLINEs)
			Me._FPRM = CType(Nothing, EntityRef(Of FPRM))
			Me._SERIES1 = CType(Nothing, EntityRef(Of SERIES))
			Me._TRDFLINE = CType(Nothing, EntityRef(Of TRDFLINE))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					If (Me._FPRM.HasLoadedOrAssignedValue OrElse Me._SERIES1.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUE", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CHEQUE() As Integer
			Get
				Return Me._CHEQUE
			End Get
			Set
				If ((Me._CHEQUE = value)  _
							= false) Then
					Me.OnCHEQUEChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUE = value
					Me.SendPropertyChanged("CHEQUE")
					Me.OnCHEQUEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int")>  _
		Public Property SOSOURCE() As System.Nullable(Of Integer)
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If (Me._SOSOURCE.Equals(value) = false) Then
					If (Me._FPRM.HasLoadedOrAssignedValue OrElse Me._SERIES1.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FISCPRD", DbType:="SmallInt NOT NULL")>  _
		Public Property FISCPRD() As Short
			Get
				Return Me._FISCPRD
			End Get
			Set
				If ((Me._FISCPRD = value)  _
							= false) Then
					Me.OnFISCPRDChanging(value)
					Me.SendPropertyChanging
					Me._FISCPRD = value
					Me.SendPropertyChanged("FISCPRD")
					Me.OnFISCPRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD", DbType:="SmallInt NOT NULL")>  _
		Public Property PERIOD() As Short
			Get
				Return Me._PERIOD
			End Get
			Set
				If ((Me._PERIOD = value)  _
							= false) Then
					Me.OnPERIODChanging(value)
					Me.SendPropertyChanging
					Me._PERIOD = value
					Me.SendPropertyChanged("PERIOD")
					Me.OnPERIODChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIES", DbType:="SmallInt NOT NULL")>  _
		Public Property SERIES() As Short
			Get
				Return Me._SERIES
			End Get
			Set
				If ((Me._SERIES = value)  _
							= false) Then
					If Me._SERIES1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSERIESChanging(value)
					Me.SendPropertyChanging
					Me._SERIES = value
					Me.SendPropertyChanged("SERIES")
					Me.OnSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					If Me._FPRM.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._FPRMS = value
					Me.SendPropertyChanged("FPRMS")
					Me.OnFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUETYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property CHEQUETYPE() As Short
			Get
				Return Me._CHEQUETYPE
			End Get
			Set
				If ((Me._CHEQUETYPE = value)  _
							= false) Then
					Me.OnCHEQUETYPEChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUETYPE = value
					Me.SendPropertyChanged("CHEQUETYPE")
					Me.OnCHEQUETYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEKIND", DbType:="SmallInt NOT NULL")>  _
		Public Property CHEQUEKIND() As Short
			Get
				Return Me._CHEQUEKIND
			End Get
			Set
				If ((Me._CHEQUEKIND = value)  _
							= false) Then
					Me.OnCHEQUEKINDChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUEKIND = value
					Me.SendPropertyChanged("CHEQUEKIND")
					Me.OnCHEQUEKINDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIESNUM", DbType:="Int NOT NULL")>  _
		Public Property SERIESNUM() As Integer
			Get
				Return Me._SERIESNUM
			End Get
			Set
				If ((Me._SERIESNUM = value)  _
							= false) Then
					Me.OnSERIESNUMChanging(value)
					Me.SendPropertyChanging
					Me._SERIESNUM = value
					Me.SendPropertyChanged("SERIESNUM")
					Me.OnSERIESNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUENUMBER", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
		Public Property CHEQUENUMBER() As String
			Get
				Return Me._CHEQUENUMBER
			End Get
			Set
				If (String.Equals(Me._CHEQUENUMBER, value) = false) Then
					Me.OnCHEQUENUMBERChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUENUMBER = value
					Me.SendPropertyChanged("CHEQUENUMBER")
					Me.OnCHEQUENUMBERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUESTATES", DbType:="SmallInt NOT NULL")>  _
		Public Property CHEQUESTATES() As Short
			Get
				Return Me._CHEQUESTATES
			End Get
			Set
				If ((Me._CHEQUESTATES = value)  _
							= false) Then
					Me.OnCHEQUESTATESChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUESTATES = value
					Me.SendPropertyChanged("CHEQUESTATES")
					Me.OnCHEQUESTATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANK", DbType:="Int")>  _
		Public Property BANK() As System.Nullable(Of Integer)
			Get
				Return Me._BANK
			End Get
			Set
				If (Me._BANK.Equals(value) = false) Then
					Me.OnBANKChanging(value)
					Me.SendPropertyChanging
					Me._BANK = value
					Me.SendPropertyChanged("BANK")
					Me.OnBANKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKBRANCH", DbType:="Int")>  _
		Public Property BANKBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._BANKBRANCH
			End Get
			Set
				If (Me._BANKBRANCH.Equals(value) = false) Then
					Me.OnBANKBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BANKBRANCH = value
					Me.SendPropertyChanged("BANKBRANCH")
					Me.OnBANKBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKACC", DbType:="Int")>  _
		Public Property BANKACC() As System.Nullable(Of Integer)
			Get
				Return Me._BANKACC
			End Get
			Set
				If (Me._BANKACC.Equals(value) = false) Then
					Me.OnBANKACCChanging(value)
					Me.SendPropertyChanging
					Me._BANKACC = value
					Me.SendPropertyChanged("BANKACC")
					Me.OnBANKACCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKACNNUM", DbType:="VarChar(25)")>  _
		Public Property BANKACNNUM() As String
			Get
				Return Me._BANKACNNUM
			End Get
			Set
				If (String.Equals(Me._BANKACNNUM, value) = false) Then
					Me.OnBANKACNNUMChanging(value)
					Me.SendPropertyChanging
					Me._BANKACNNUM = value
					Me.SendPropertyChanged("BANKACNNUM")
					Me.OnBANKACNNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRTDATE", DbType:="DateTime")>  _
		Public Property CRTDATE() As System.Nullable(Of Date)
			Get
				Return Me._CRTDATE
			End Get
			Set
				If (Me._CRTDATE.Equals(value) = false) Then
					Me.OnCRTDATEChanging(value)
					Me.SendPropertyChanging
					Me._CRTDATE = value
					Me.SendPropertyChanged("CRTDATE")
					Me.OnCRTDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATEOFS", DbType:="DateTime NOT NULL")>  _
		Public Property DATEOFS() As Date
			Get
				Return Me._DATEOFS
			End Get
			Set
				If ((Me._DATEOFS = value)  _
							= false) Then
					Me.OnDATEOFSChanging(value)
					Me.SendPropertyChanging
					Me._DATEOFS = value
					Me.SendPropertyChanged("DATEOFS")
					Me.OnDATEOFSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACEOFS", DbType:="VarChar(30)")>  _
		Public Property PLACEOFS() As String
			Get
				Return Me._PLACEOFS
			End Get
			Set
				If (String.Equals(Me._PLACEOFS, value) = false) Then
					Me.OnPLACEOFSChanging(value)
					Me.SendPropertyChanging
					Me._PLACEOFS = value
					Me.SendPropertyChanged("PLACEOFS")
					Me.OnPLACEOFSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINALDATE", DbType:="DateTime NOT NULL")>  _
		Public Property FINALDATE() As Date
			Get
				Return Me._FINALDATE
			End Get
			Set
				If ((Me._FINALDATE = value)  _
							= false) Then
					Me.OnFINALDATEChanging(value)
					Me.SendPropertyChanging
					Me._FINALDATE = value
					Me.SendPropertyChanged("FINALDATE")
					Me.OnFINALDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFISCPRD", DbType:="SmallInt")>  _
		Public Property FFISCPRD() As System.Nullable(Of Short)
			Get
				Return Me._FFISCPRD
			End Get
			Set
				If (Me._FFISCPRD.Equals(value) = false) Then
					Me.OnFFISCPRDChanging(value)
					Me.SendPropertyChanging
					Me._FFISCPRD = value
					Me.SendPropertyChanged("FFISCPRD")
					Me.OnFFISCPRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPERIOD", DbType:="SmallInt")>  _
		Public Property FPERIOD() As System.Nullable(Of Short)
			Get
				Return Me._FPERIOD
			End Get
			Set
				If (Me._FPERIOD.Equals(value) = false) Then
					Me.OnFPERIODChanging(value)
					Me.SendPropertyChanging
					Me._FPERIOD = value
					Me.SendPropertyChanged("FPERIOD")
					Me.OnFPERIODChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me.OnSOCURRENCYChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCY = value
					Me.SendPropertyChanged("SOCURRENCY")
					Me.OnSOCURRENCYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUERATE", DbType:="Float NOT NULL")>  _
		Public Property CHEQUERATE() As Double
			Get
				Return Me._CHEQUERATE
			End Get
			Set
				If ((Me._CHEQUERATE = value)  _
							= false) Then
					Me.OnCHEQUERATEChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUERATE = value
					Me.SendPropertyChanged("CHEQUERATE")
					Me.OnCHEQUERATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEVAL", DbType:="Float NOT NULL")>  _
		Public Property CHEQUEVAL() As Double
			Get
				Return Me._CHEQUEVAL
			End Get
			Set
				If ((Me._CHEQUEVAL = value)  _
							= false) Then
					Me.OnCHEQUEVALChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUEVAL = value
					Me.SendPropertyChanged("CHEQUEVAL")
					Me.OnCHEQUEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCHEQUEVAL", DbType:="Float NOT NULL")>  _
		Public Property LCHEQUEVAL() As Double
			Get
				Return Me._LCHEQUEVAL
			End Get
			Set
				If ((Me._LCHEQUEVAL = value)  _
							= false) Then
					Me.OnLCHEQUEVALChanging(value)
					Me.SendPropertyChanging
					Me._LCHEQUEVAL = value
					Me.SendPropertyChanged("LCHEQUEVAL")
					Me.OnLCHEQUEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEBAL", DbType:="Float NOT NULL")>  _
		Public Property CHEQUEBAL() As Double
			Get
				Return Me._CHEQUEBAL
			End Get
			Set
				If ((Me._CHEQUEBAL = value)  _
							= false) Then
					Me.OnCHEQUEBALChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUEBAL = value
					Me.SendPropertyChanged("CHEQUEBAL")
					Me.OnCHEQUEBALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCHEQUEBAL", DbType:="Float NOT NULL")>  _
		Public Property LCHEQUEBAL() As Double
			Get
				Return Me._LCHEQUEBAL
			End Get
			Set
				If ((Me._LCHEQUEBAL = value)  _
							= false) Then
					Me.OnLCHEQUEBALChanging(value)
					Me.SendPropertyChanging
					Me._LCHEQUEBAL = value
					Me.SendPropertyChanged("LCHEQUEBAL")
					Me.OnLCHEQUEBALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPEPUBLISHER", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPEPUBLISHER() As Short
			Get
				Return Me._SODTYPEPUBLISHER
			End Get
			Set
				If ((Me._SODTYPEPUBLISHER = value)  _
							= false) Then
					Me.OnSODTYPEPUBLISHERChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPEPUBLISHER = value
					Me.SendPropertyChanged("SODTYPEPUBLISHER")
					Me.OnSODTYPEPUBLISHERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRPUBLISHER", DbType:="Int")>  _
		Public Property TRDRPUBLISHER() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRPUBLISHER
			End Get
			Set
				If (Me._TRDRPUBLISHER.Equals(value) = false) Then
					Me.OnTRDRPUBLISHERChanging(value)
					Me.SendPropertyChanging
					Me._TRDRPUBLISHER = value
					Me.SendPropertyChanged("TRDRPUBLISHER")
					Me.OnTRDRPUBLISHERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATORNAME", DbType:="VarChar(64)")>  _
		Public Property CREATORNAME() As String
			Get
				Return Me._CREATORNAME
			End Get
			Set
				If (String.Equals(Me._CREATORNAME, value) = false) Then
					Me.OnCREATORNAMEChanging(value)
					Me.SendPropertyChanging
					Me._CREATORNAME = value
					Me.SendPropertyChanged("CREATORNAME")
					Me.OnCREATORNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATORADDR", DbType:="VarChar(30)")>  _
		Public Property CREATORADDR() As String
			Get
				Return Me._CREATORADDR
			End Get
			Set
				If (String.Equals(Me._CREATORADDR, value) = false) Then
					Me.OnCREATORADDRChanging(value)
					Me.SendPropertyChanging
					Me._CREATORADDR = value
					Me.SendPropertyChanged("CREATORADDR")
					Me.OnCREATORADDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PUBLISHERAFM", DbType:="VarChar(20)")>  _
		Public Property PUBLISHERAFM() As String
			Get
				Return Me._PUBLISHERAFM
			End Get
			Set
				If (String.Equals(Me._PUBLISHERAFM, value) = false) Then
					Me.OnPUBLISHERAFMChanging(value)
					Me.SendPropertyChanging
					Me._PUBLISHERAFM = value
					Me.SendPropertyChanged("PUBLISHERAFM")
					Me.OnPUBLISHERAFMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATORPHONE", DbType:="VarChar(15)")>  _
		Public Property CREATORPHONE() As String
			Get
				Return Me._CREATORPHONE
			End Get
			Set
				If (String.Equals(Me._CREATORPHONE, value) = false) Then
					Me.OnCREATORPHONEChanging(value)
					Me.SendPropertyChanging
					Me._CREATORPHONE = value
					Me.SendPropertyChanged("CREATORPHONE")
					Me.OnCREATORPHONEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPEPOSSESSOR", DbType:="SmallInt")>  _
		Public Property SODTYPEPOSSESSOR() As System.Nullable(Of Short)
			Get
				Return Me._SODTYPEPOSSESSOR
			End Get
			Set
				If (Me._SODTYPEPOSSESSOR.Equals(value) = false) Then
					Me.OnSODTYPEPOSSESSORChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPEPOSSESSOR = value
					Me.SendPropertyChanged("SODTYPEPOSSESSOR")
					Me.OnSODTYPEPOSSESSORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRPOSSESSOR", DbType:="Int")>  _
		Public Property TRDRPOSSESSOR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRPOSSESSOR
			End Get
			Set
				If (Me._TRDRPOSSESSOR.Equals(value) = false) Then
					Me.OnTRDRPOSSESSORChanging(value)
					Me.SendPropertyChanging
					Me._TRDRPOSSESSOR = value
					Me.SendPropertyChanged("TRDRPOSSESSOR")
					Me.OnTRDRPOSSESSORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLDERNAME", DbType:="VarChar(64)")>  _
		Public Property HOLDERNAME() As String
			Get
				Return Me._HOLDERNAME
			End Get
			Set
				If (String.Equals(Me._HOLDERNAME, value) = false) Then
					Me.OnHOLDERNAMEChanging(value)
					Me.SendPropertyChanging
					Me._HOLDERNAME = value
					Me.SendPropertyChanged("HOLDERNAME")
					Me.OnHOLDERNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLDERADDR", DbType:="VarChar(30)")>  _
		Public Property HOLDERADDR() As String
			Get
				Return Me._HOLDERADDR
			End Get
			Set
				If (String.Equals(Me._HOLDERADDR, value) = false) Then
					Me.OnHOLDERADDRChanging(value)
					Me.SendPropertyChanging
					Me._HOLDERADDR = value
					Me.SendPropertyChanged("HOLDERADDR")
					Me.OnHOLDERADDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUARANTNAME", DbType:="VarChar(64)")>  _
		Public Property GUARANTNAME() As String
			Get
				Return Me._GUARANTNAME
			End Get
			Set
				If (String.Equals(Me._GUARANTNAME, value) = false) Then
					Me.OnGUARANTNAMEChanging(value)
					Me.SendPropertyChanging
					Me._GUARANTNAME = value
					Me.SendPropertyChanged("GUARANTNAME")
					Me.OnGUARANTNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OSMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property OSMODE() As Short
			Get
				Return Me._OSMODE
			End Get
			Set
				If ((Me._OSMODE = value)  _
							= false) Then
					Me.OnOSMODEChanging(value)
					Me.SendPropertyChanging
					Me._OSMODE = value
					Me.SendPropertyChanged("OSMODE")
					Me.OnOSMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOLDER", DbType:="SmallInt")>  _
		Public Property FOLDER() As System.Nullable(Of Short)
			Get
				Return Me._FOLDER
			End Get
			Set
				If (Me._FOLDER.Equals(value) = false) Then
					Me.OnFOLDERChanging(value)
					Me.SendPropertyChanging
					Me._FOLDER = value
					Me.SendPropertyChanged("FOLDER")
					Me.OnFOLDERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISBLOCKED", DbType:="SmallInt NOT NULL")>  _
		Public Property ISBLOCKED() As Short
			Get
				Return Me._ISBLOCKED
			End Get
			Set
				If ((Me._ISBLOCKED = value)  _
							= false) Then
					Me.OnISBLOCKEDChanging(value)
					Me.SendPropertyChanging
					Me._ISBLOCKED = value
					Me.SendPropertyChanged("ISBLOCKED")
					Me.OnISBLOCKEDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSFERABLE", DbType:="SmallInt NOT NULL")>  _
		Public Property TRANSFERABLE() As Short
			Get
				Return Me._TRANSFERABLE
			End Get
			Set
				If ((Me._TRANSFERABLE = value)  _
							= false) Then
					Me.OnTRANSFERABLEChanging(value)
					Me.SendPropertyChanging
					Me._TRANSFERABLE = value
					Me.SendPropertyChanged("TRANSFERABLE")
					Me.OnTRANSFERABLEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(2000)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime")>  _
		Public Property TRNDATE() As System.Nullable(Of Date)
			Get
				Return Me._TRNDATE
			End Get
			Set
				If (Me._TRNDATE.Equals(value) = false) Then
					Me.OnTRNDATEChanging(value)
					Me.SendPropertyChanging
					Me._TRNDATE = value
					Me.SendPropertyChanged("TRNDATE")
					Me.OnTRNDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYDATE", DbType:="DateTime")>  _
		Public Property PAYDATE() As System.Nullable(Of Date)
			Get
				Return Me._PAYDATE
			End Get
			Set
				If (Me._PAYDATE.Equals(value) = false) Then
					Me.OnPAYDATEChanging(value)
					Me.SendPropertyChanging
					Me._PAYDATE = value
					Me.SendPropertyChanged("PAYDATE")
					Me.OnPAYDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCC", DbType:="Int")>  _
		Public Property FINDOCC() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCC
			End Get
			Set
				If (Me._FINDOCC.Equals(value) = false) Then
					If Me._TRDFLINE.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCC = value
					Me.SendPropertyChanged("FINDOCC")
					Me.OnFINDOCCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDFLINESC", DbType:="Int")>  _
		Public Property TRDFLINESC() As System.Nullable(Of Integer)
			Get
				Return Me._TRDFLINESC
			End Get
			Set
				If (Me._TRDFLINESC.Equals(value) = false) Then
					If Me._TRDFLINE.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTRDFLINESCChanging(value)
					Me.SendPropertyChanging
					Me._TRDFLINESC = value
					Me.SendPropertyChanged("TRDFLINESC")
					Me.OnTRDFLINESCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODELINE", DbType:="VarChar(80)")>  _
		Public Property CODELINE() As String
			Get
				Return Me._CODELINE
			End Get
			Set
				If (String.Equals(Me._CODELINE, value) = false) Then
					Me.OnCODELINEChanging(value)
					Me.SendPropertyChanging
					Me._CODELINE = value
					Me.SendPropertyChanged("CODELINE")
					Me.OnCODELINEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISPRINT", DbType:="SmallInt NOT NULL")>  _
		Public Property ISPRINT() As Short
			Get
				Return Me._ISPRINT
			End Get
			Set
				If ((Me._ISPRINT = value)  _
							= false) Then
					Me.OnISPRINTChanging(value)
					Me.SendPropertyChanging
					Me._ISPRINT = value
					Me.SendPropertyChanged("ISPRINT")
					Me.OnISPRINTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSODTYPE", DbType:="SmallInt")>  _
		Public Property CSODTYPE() As System.Nullable(Of Short)
			Get
				Return Me._CSODTYPE
			End Get
			Set
				If (Me._CSODTYPE.Equals(value) = false) Then
					Me.OnCSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._CSODTYPE = value
					Me.SendPropertyChanged("CSODTYPE")
					Me.OnCSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCANCEL", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCANCEL() As Short
			Get
				Return Me._ISCANCEL
			End Get
			Set
				If ((Me._ISCANCEL = value)  _
							= false) Then
					Me.OnISCANCELChanging(value)
					Me.SendPropertyChanging
					Me._ISCANCEL = value
					Me.SendPropertyChanged("ISCANCEL")
					Me.OnISCANCELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCHEQUESTATES", DbType:="SmallInt")>  _
		Public Property OCHEQUESTATES() As System.Nullable(Of Short)
			Get
				Return Me._OCHEQUESTATES
			End Get
			Set
				If (Me._OCHEQUESTATES.Equals(value) = false) Then
					Me.OnOCHEQUESTATESChanging(value)
					Me.SendPropertyChanging
					Me._OCHEQUESTATES = value
					Me.SendPropertyChanged("OCHEQUESTATES")
					Me.OnOCHEQUESTATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OSODTYPEPOSSESSOR", DbType:="SmallInt")>  _
		Public Property OSODTYPEPOSSESSOR() As System.Nullable(Of Short)
			Get
				Return Me._OSODTYPEPOSSESSOR
			End Get
			Set
				If (Me._OSODTYPEPOSSESSOR.Equals(value) = false) Then
					Me.OnOSODTYPEPOSSESSORChanging(value)
					Me.SendPropertyChanging
					Me._OSODTYPEPOSSESSOR = value
					Me.SendPropertyChanged("OSODTYPEPOSSESSOR")
					Me.OnOSODTYPEPOSSESSORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTRDRPOSSESSOR", DbType:="Int")>  _
		Public Property OTRDRPOSSESSOR() As System.Nullable(Of Integer)
			Get
				Return Me._OTRDRPOSSESSOR
			End Get
			Set
				If (Me._OTRDRPOSSESSOR.Equals(value) = false) Then
					Me.OnOTRDRPOSSESSORChanging(value)
					Me.SendPropertyChanging
					Me._OTRDRPOSSESSOR = value
					Me.SendPropertyChanged("OTRDRPOSSESSOR")
					Me.OnOTRDRPOSSESSORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPOSSESSORNAME", DbType:="VarChar(64)")>  _
		Public Property OPOSSESSORNAME() As String
			Get
				Return Me._OPOSSESSORNAME
			End Get
			Set
				If (String.Equals(Me._OPOSSESSORNAME, value) = false) Then
					Me.OnOPOSSESSORNAMEChanging(value)
					Me.SendPropertyChanging
					Me._OPOSSESSORNAME = value
					Me.SendPropertyChanged("OPOSSESSORNAME")
					Me.OnOPOSSESSORNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPOSSESSORADDRESS", DbType:="VarChar(30)")>  _
		Public Property OPOSSESSORADDRESS() As String
			Get
				Return Me._OPOSSESSORADDRESS
			End Get
			Set
				If (String.Equals(Me._OPOSSESSORADDRESS, value) = false) Then
					Me.OnOPOSSESSORADDRESSChanging(value)
					Me.SendPropertyChanging
					Me._OPOSSESSORADDRESS = value
					Me.SendPropertyChanged("OPOSSESSORADDRESS")
					Me.OnOPOSSESSORADDRESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OCHEQUEBAL", DbType:="Float")>  _
		Public Property OCHEQUEBAL() As System.Nullable(Of Double)
			Get
				Return Me._OCHEQUEBAL
			End Get
			Set
				If (Me._OCHEQUEBAL.Equals(value) = false) Then
					Me.OnOCHEQUEBALChanging(value)
					Me.SendPropertyChanging
					Me._OCHEQUEBAL = value
					Me.SendPropertyChanged("OCHEQUEBAL")
					Me.OnOCHEQUEBALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFOLDER", DbType:="SmallInt")>  _
		Public Property OFOLDER() As System.Nullable(Of Short)
			Get
				Return Me._OFOLDER
			End Get
			Set
				If (Me._OFOLDER.Equals(value) = false) Then
					Me.OnOFOLDERChanging(value)
					Me.SendPropertyChanging
					Me._OFOLDER = value
					Me.SendPropertyChanged("OFOLDER")
					Me.OnOFOLDERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPID", DbType:="Int")>  _
		Public Property TEMPID() As System.Nullable(Of Integer)
			Get
				Return Me._TEMPID
			End Get
			Set
				If (Me._TEMPID.Equals(value) = false) Then
					Me.OnTEMPIDChanging(value)
					Me.SendPropertyChanging
					Me._TEMPID = value
					Me.SendPropertyChanged("TEMPID")
					Me.OnTEMPIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CHEQUE_TRDFLINE", Storage:="_TRDFLINEs", ThisKey:="CHEQUE", OtherKey:="CHEQUE")>  _
		Public Property TRDFLINEs() As EntitySet(Of TRDFLINE)
			Get
				Return Me._TRDFLINEs
			End Get
			Set
				Me._TRDFLINEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FPRM_CHEQUE", Storage:="_FPRM", ThisKey:="COMPANY,SOSOURCE,FPRMS", OtherKey:="COMPANY,SOSOURCE,FPRMS", IsForeignKey:=true)>  _
		Public Property FPRM() As FPRM
			Get
				Return Me._FPRM.Entity
			End Get
			Set
				Dim previousValue As FPRM = Me._FPRM.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FPRM.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FPRM.Entity = Nothing
						previousValue.CHEQUEs.Remove(Me)
					End If
					Me._FPRM.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.CHEQUEs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._SOSOURCE = value.SOSOURCE
						Me._FPRMS = value.FPRMS
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._SOSOURCE = CType(Nothing, Nullable(Of Integer))
						Me._FPRMS = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("FPRM")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SERIES_CHEQUE", Storage:="_SERIES1", ThisKey:="COMPANY,SOSOURCE,SERIES", OtherKey:="COMPANY,SOSOURCE,SERIES", IsForeignKey:=true)>  _
		Public Property SERIES1() As SERIES
			Get
				Return Me._SERIES1.Entity
			End Get
			Set
				Dim previousValue As SERIES = Me._SERIES1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._SERIES1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._SERIES1.Entity = Nothing
						previousValue.CHEQUEs.Remove(Me)
					End If
					Me._SERIES1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.CHEQUEs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._SOSOURCE = value.SOSOURCE
						Me._SERIES = value.SERIES
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._SOSOURCE = CType(Nothing, Nullable(Of Integer))
						Me._SERIES = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("SERIES1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDFLINE_CHEQUE", Storage:="_TRDFLINE", ThisKey:="FINDOCC,TRDFLINESC", OtherKey:="FINDOC,TRDFLINES", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
		Public Property TRDFLINE() As TRDFLINE
			Get
				Return Me._TRDFLINE.Entity
			End Get
			Set
				Dim previousValue As TRDFLINE = Me._TRDFLINE.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDFLINE.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDFLINE.Entity = Nothing
						previousValue.CHEQUEs.Remove(Me)
					End If
					Me._TRDFLINE.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.CHEQUEs.Add(Me)
						Me._FINDOCC = value.FINDOC
						Me._TRDFLINESC = value.TRDFLINES
					Else
						Me._FINDOCC = CType(Nothing, Nullable(Of Integer))
						Me._TRDFLINESC = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("TRDFLINE")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_TRDFLINEs(ByVal entity As TRDFLINE)
			Me.SendPropertyChanging
			entity.CHEQUE1 = Me
		End Sub
		
		Private Sub detach_TRDFLINEs(ByVal entity As TRDFLINE)
			Me.SendPropertyChanging
			entity.CHEQUE1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SERIES")>  _
	Partial Public Class SERIES
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SOSOURCE As Integer
		
		Private _SOREDIR As Integer
		
		Private _SERIES As Short
		
		Private _CODE As String
		
		Private _FPRMS As Short
		
		Private _TFPRMS As Short
		
		Private _NAME As String
		
		Private _COMMENTS As String
		
		Private _ISACTIVE As Short
		
		Private _BRANCH As System.Nullable(Of Short)
		
		Private _WHOUSE As System.Nullable(Of Short)
		
		Private _BRANCHSEC As System.Nullable(Of Short)
		
		Private _WHOUSESEC As System.Nullable(Of Short)
		
		Private _WHOUSEBIN As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _PROCDEF As System.Nullable(Of Short)
		
		Private _AUTONUMBER As Short
		
		Private _FINCODEGENERATE As Short
		
		Private _HANDMD As Short
		
		Private _ISRESTRICTED As Short
		
		Private _PRINTMODE As Short
		
		Private _SOPRINTER As String
		
		Private _SOFORMREDIR As Integer
		
		Private _TEMPLATES As System.Nullable(Of Short)
		
		Private _COPIES As Short
		
		Private _CHKPRINTDOC As Short
		
		Private _REPRINTDOC As Short
		
		Private _REPRINTMD As Short
		
		Private _PRINTDOCAPPRV As Short
		
		Private _USECUSDISP As Short
		
		Private _SSOSOURCE As System.Nullable(Of Integer)
		
		Private _SSERIES As System.Nullable(Of Short)
		
		Private _CSERIES As System.Nullable(Of Short)
		
		Private _PAYMD As Short
		
		Private _PFINPAYTERMS As Short
		
		Private _PSERIES As System.Nullable(Of Short)
		
		Private _GLSERIES As System.Nullable(Of Short)
		
		Private _ALSERIES As System.Nullable(Of Short)
		
		Private _AMODE As Short
		
		Private _ASERIES As System.Nullable(Of Short)
		
		Private _VSERIES As System.Nullable(Of Short)
		
		Private _ESERIES As System.Nullable(Of Short)
		
		Private _SPCSMD As Short
		
		Private _PRDMD As Short
		
		Private _PRDSERIES As System.Nullable(Of Short)
		
		Private _PRDITEMD As Short
		
		Private _PRDITEMSERIES As System.Nullable(Of Short)
		
		Private _CHQAUTO As Short
		
		Private _SOISCONV As Short
		
		Private _SONOCONV As Short
		
		Private _SERIESACCESS As String
		
		Private _SERIESPAY As String
		
		Private _SERIESCNV As String
		
		Private _BGPREFIX As String
		
		Private _TRACEPRN As Short
		
		Private _ECOLLABORATION As System.Nullable(Of Short)
		
		Private _GSISPACKAGES As System.Nullable(Of Short)
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _cccseries As String
		
		Private _ccctype As String
		
		Private _ccCPrDescr As String
		
		Private _CHEQUEs As EntitySet(Of CHEQUE)
		
		Private _SERIESNUMs As EntitySet(Of SERIESNUM)
		
		Private _FINDOCs As EntitySet(Of FINDOC)
		
		Private _FPRM As EntityRef(Of FPRM)
		
		Private _WHOUSEBIN1 As EntityRef(Of WHOUSEBIN)
		
		Private _BRANCH1 As EntityRef(Of BRANCH)
		
		Private _BRANCH2 As EntityRef(Of BRANCH)
		
		Private _WHOUSE1 As EntityRef(Of WHOUSE)
		
		Private _WHOUSE2 As EntityRef(Of WHOUSE)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnSOREDIRChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOREDIRChanged()
    End Sub
    Partial Private Sub OnSERIESChanging(value As Short)
    End Sub
    Partial Private Sub OnSERIESChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnFPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnFPRMSChanged()
    End Sub
    Partial Private Sub OnTFPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnTFPRMSChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnBRANCHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBRANCHChanged()
    End Sub
    Partial Private Sub OnWHOUSEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSEChanged()
    End Sub
    Partial Private Sub OnBRANCHSECChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBRANCHSECChanged()
    End Sub
    Partial Private Sub OnWHOUSESECChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSESECChanged()
    End Sub
    Partial Private Sub OnWHOUSEBINChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSEBINChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnPROCDEFChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPROCDEFChanged()
    End Sub
    Partial Private Sub OnAUTONUMBERChanging(value As Short)
    End Sub
    Partial Private Sub OnAUTONUMBERChanged()
    End Sub
    Partial Private Sub OnFINCODEGENERATEChanging(value As Short)
    End Sub
    Partial Private Sub OnFINCODEGENERATEChanged()
    End Sub
    Partial Private Sub OnHANDMDChanging(value As Short)
    End Sub
    Partial Private Sub OnHANDMDChanged()
    End Sub
    Partial Private Sub OnISRESTRICTEDChanging(value As Short)
    End Sub
    Partial Private Sub OnISRESTRICTEDChanged()
    End Sub
    Partial Private Sub OnPRINTMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnPRINTMODEChanged()
    End Sub
    Partial Private Sub OnSOPRINTERChanging(value As String)
    End Sub
    Partial Private Sub OnSOPRINTERChanged()
    End Sub
    Partial Private Sub OnSOFORMREDIRChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOFORMREDIRChanged()
    End Sub
    Partial Private Sub OnTEMPLATESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTEMPLATESChanged()
    End Sub
    Partial Private Sub OnCOPIESChanging(value As Short)
    End Sub
    Partial Private Sub OnCOPIESChanged()
    End Sub
    Partial Private Sub OnCHKPRINTDOCChanging(value As Short)
    End Sub
    Partial Private Sub OnCHKPRINTDOCChanged()
    End Sub
    Partial Private Sub OnREPRINTDOCChanging(value As Short)
    End Sub
    Partial Private Sub OnREPRINTDOCChanged()
    End Sub
    Partial Private Sub OnREPRINTMDChanging(value As Short)
    End Sub
    Partial Private Sub OnREPRINTMDChanged()
    End Sub
    Partial Private Sub OnPRINTDOCAPPRVChanging(value As Short)
    End Sub
    Partial Private Sub OnPRINTDOCAPPRVChanged()
    End Sub
    Partial Private Sub OnUSECUSDISPChanging(value As Short)
    End Sub
    Partial Private Sub OnUSECUSDISPChanged()
    End Sub
    Partial Private Sub OnSSOSOURCEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSSOSOURCEChanged()
    End Sub
    Partial Private Sub OnSSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSSERIESChanged()
    End Sub
    Partial Private Sub OnCSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCSERIESChanged()
    End Sub
    Partial Private Sub OnPAYMDChanging(value As Short)
    End Sub
    Partial Private Sub OnPAYMDChanged()
    End Sub
    Partial Private Sub OnPFINPAYTERMSChanging(value As Short)
    End Sub
    Partial Private Sub OnPFINPAYTERMSChanged()
    End Sub
    Partial Private Sub OnPSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPSERIESChanged()
    End Sub
    Partial Private Sub OnGLSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGLSERIESChanged()
    End Sub
    Partial Private Sub OnALSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnALSERIESChanged()
    End Sub
    Partial Private Sub OnAMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnAMODEChanged()
    End Sub
    Partial Private Sub OnASERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnASERIESChanged()
    End Sub
    Partial Private Sub OnVSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVSERIESChanged()
    End Sub
    Partial Private Sub OnESERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnESERIESChanged()
    End Sub
    Partial Private Sub OnSPCSMDChanging(value As Short)
    End Sub
    Partial Private Sub OnSPCSMDChanged()
    End Sub
    Partial Private Sub OnPRDMDChanging(value As Short)
    End Sub
    Partial Private Sub OnPRDMDChanged()
    End Sub
    Partial Private Sub OnPRDSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRDSERIESChanged()
    End Sub
    Partial Private Sub OnPRDITEMDChanging(value As Short)
    End Sub
    Partial Private Sub OnPRDITEMDChanged()
    End Sub
    Partial Private Sub OnPRDITEMSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRDITEMSERIESChanged()
    End Sub
    Partial Private Sub OnCHQAUTOChanging(value As Short)
    End Sub
    Partial Private Sub OnCHQAUTOChanged()
    End Sub
    Partial Private Sub OnSOISCONVChanging(value As Short)
    End Sub
    Partial Private Sub OnSOISCONVChanged()
    End Sub
    Partial Private Sub OnSONOCONVChanging(value As Short)
    End Sub
    Partial Private Sub OnSONOCONVChanged()
    End Sub
    Partial Private Sub OnSERIESACCESSChanging(value As String)
    End Sub
    Partial Private Sub OnSERIESACCESSChanged()
    End Sub
    Partial Private Sub OnSERIESPAYChanging(value As String)
    End Sub
    Partial Private Sub OnSERIESPAYChanged()
    End Sub
    Partial Private Sub OnSERIESCNVChanging(value As String)
    End Sub
    Partial Private Sub OnSERIESCNVChanged()
    End Sub
    Partial Private Sub OnBGPREFIXChanging(value As String)
    End Sub
    Partial Private Sub OnBGPREFIXChanged()
    End Sub
    Partial Private Sub OnTRACEPRNChanging(value As Short)
    End Sub
    Partial Private Sub OnTRACEPRNChanged()
    End Sub
    Partial Private Sub OnECOLLABORATIONChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnECOLLABORATIONChanged()
    End Sub
    Partial Private Sub OnGSISPACKAGESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGSISPACKAGESChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OncccseriesChanging(value As String)
    End Sub
    Partial Private Sub OncccseriesChanged()
    End Sub
    Partial Private Sub OnccctypeChanging(value As String)
    End Sub
    Partial Private Sub OnccctypeChanged()
    End Sub
    Partial Private Sub OnccCPrDescrChanging(value As String)
    End Sub
    Partial Private Sub OnccCPrDescrChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._CHEQUEs = New EntitySet(Of CHEQUE)(AddressOf Me.attach_CHEQUEs, AddressOf Me.detach_CHEQUEs)
			Me._SERIESNUMs = New EntitySet(Of SERIESNUM)(AddressOf Me.attach_SERIESNUMs, AddressOf Me.detach_SERIESNUMs)
			Me._FINDOCs = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs, AddressOf Me.detach_FINDOCs)
			Me._FPRM = CType(Nothing, EntityRef(Of FPRM))
			Me._WHOUSEBIN1 = CType(Nothing, EntityRef(Of WHOUSEBIN))
			Me._BRANCH1 = CType(Nothing, EntityRef(Of BRANCH))
			Me._BRANCH2 = CType(Nothing, EntityRef(Of BRANCH))
			Me._WHOUSE1 = CType(Nothing, EntityRef(Of WHOUSE))
			Me._WHOUSE2 = CType(Nothing, EntityRef(Of WHOUSE))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					If (((((Me._FPRM.HasLoadedOrAssignedValue OrElse Me._WHOUSEBIN1.HasLoadedOrAssignedValue)  _
								OrElse Me._BRANCH1.HasLoadedOrAssignedValue)  _
								OrElse Me._BRANCH2.HasLoadedOrAssignedValue)  _
								OrElse Me._WHOUSE1.HasLoadedOrAssignedValue)  _
								OrElse Me._WHOUSE2.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					If Me._FPRM.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOREDIR", DbType:="Int NOT NULL")>  _
		Public Property SOREDIR() As Integer
			Get
				Return Me._SOREDIR
			End Get
			Set
				If ((Me._SOREDIR = value)  _
							= false) Then
					Me.OnSOREDIRChanging(value)
					Me.SendPropertyChanging
					Me._SOREDIR = value
					Me.SendPropertyChanged("SOREDIR")
					Me.OnSOREDIRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIES", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SERIES() As Short
			Get
				Return Me._SERIES
			End Get
			Set
				If ((Me._SERIES = value)  _
							= false) Then
					Me.OnSERIESChanging(value)
					Me.SendPropertyChanging
					Me._SERIES = value
					Me.SendPropertyChanged("SERIES")
					Me.OnSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					If Me._FPRM.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._FPRMS = value
					Me.SendPropertyChanged("FPRMS")
					Me.OnFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property TFPRMS() As Short
			Get
				Return Me._TFPRMS
			End Get
			Set
				If ((Me._TFPRMS = value)  _
							= false) Then
					Me.OnTFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._TFPRMS = value
					Me.SendPropertyChanged("TFPRMS")
					Me.OnTFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt")>  _
		Public Property BRANCH() As System.Nullable(Of Short)
			Get
				Return Me._BRANCH
			End Get
			Set
				If (Me._BRANCH.Equals(value) = false) Then
					If Me._BRANCH1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BRANCH = value
					Me.SendPropertyChanged("BRANCH")
					Me.OnBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt")>  _
		Public Property WHOUSE() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSE
			End Get
			Set
				If (Me._WHOUSE.Equals(value) = false) Then
					If (Me._WHOUSEBIN1.HasLoadedOrAssignedValue OrElse Me._WHOUSE1.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSEChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSE = value
					Me.SendPropertyChanged("WHOUSE")
					Me.OnWHOUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCHSEC", DbType:="SmallInt")>  _
		Public Property BRANCHSEC() As System.Nullable(Of Short)
			Get
				Return Me._BRANCHSEC
			End Get
			Set
				If (Me._BRANCHSEC.Equals(value) = false) Then
					If Me._BRANCH2.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnBRANCHSECChanging(value)
					Me.SendPropertyChanging
					Me._BRANCHSEC = value
					Me.SendPropertyChanged("BRANCHSEC")
					Me.OnBRANCHSECChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSESEC", DbType:="SmallInt")>  _
		Public Property WHOUSESEC() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSESEC
			End Get
			Set
				If (Me._WHOUSESEC.Equals(value) = false) Then
					If Me._WHOUSE2.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSESECChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSESEC = value
					Me.SendPropertyChanged("WHOUSESEC")
					Me.OnWHOUSESECChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSEBIN", DbType:="SmallInt")>  _
		Public Property WHOUSEBIN() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSEBIN
			End Get
			Set
				If (Me._WHOUSEBIN.Equals(value) = false) Then
					If Me._WHOUSEBIN1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSEBINChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSEBIN = value
					Me.SendPropertyChanged("WHOUSEBIN")
					Me.OnWHOUSEBINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCDEF", DbType:="SmallInt")>  _
		Public Property PROCDEF() As System.Nullable(Of Short)
			Get
				Return Me._PROCDEF
			End Get
			Set
				If (Me._PROCDEF.Equals(value) = false) Then
					Me.OnPROCDEFChanging(value)
					Me.SendPropertyChanging
					Me._PROCDEF = value
					Me.SendPropertyChanged("PROCDEF")
					Me.OnPROCDEFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTONUMBER", DbType:="SmallInt NOT NULL")>  _
		Public Property AUTONUMBER() As Short
			Get
				Return Me._AUTONUMBER
			End Get
			Set
				If ((Me._AUTONUMBER = value)  _
							= false) Then
					Me.OnAUTONUMBERChanging(value)
					Me.SendPropertyChanging
					Me._AUTONUMBER = value
					Me.SendPropertyChanged("AUTONUMBER")
					Me.OnAUTONUMBERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODEGENERATE", DbType:="SmallInt NOT NULL")>  _
		Public Property FINCODEGENERATE() As Short
			Get
				Return Me._FINCODEGENERATE
			End Get
			Set
				If ((Me._FINCODEGENERATE = value)  _
							= false) Then
					Me.OnFINCODEGENERATEChanging(value)
					Me.SendPropertyChanging
					Me._FINCODEGENERATE = value
					Me.SendPropertyChanged("FINCODEGENERATE")
					Me.OnFINCODEGENERATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HANDMD", DbType:="SmallInt NOT NULL")>  _
		Public Property HANDMD() As Short
			Get
				Return Me._HANDMD
			End Get
			Set
				If ((Me._HANDMD = value)  _
							= false) Then
					Me.OnHANDMDChanging(value)
					Me.SendPropertyChanging
					Me._HANDMD = value
					Me.SendPropertyChanged("HANDMD")
					Me.OnHANDMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISRESTRICTED", DbType:="SmallInt NOT NULL")>  _
		Public Property ISRESTRICTED() As Short
			Get
				Return Me._ISRESTRICTED
			End Get
			Set
				If ((Me._ISRESTRICTED = value)  _
							= false) Then
					Me.OnISRESTRICTEDChanging(value)
					Me.SendPropertyChanging
					Me._ISRESTRICTED = value
					Me.SendPropertyChanged("ISRESTRICTED")
					Me.OnISRESTRICTEDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINTMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property PRINTMODE() As Short
			Get
				Return Me._PRINTMODE
			End Get
			Set
				If ((Me._PRINTMODE = value)  _
							= false) Then
					Me.OnPRINTMODEChanging(value)
					Me.SendPropertyChanging
					Me._PRINTMODE = value
					Me.SendPropertyChanged("PRINTMODE")
					Me.OnPRINTMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPRINTER", DbType:="VarChar(64)")>  _
		Public Property SOPRINTER() As String
			Get
				Return Me._SOPRINTER
			End Get
			Set
				If (String.Equals(Me._SOPRINTER, value) = false) Then
					Me.OnSOPRINTERChanging(value)
					Me.SendPropertyChanging
					Me._SOPRINTER = value
					Me.SendPropertyChanged("SOPRINTER")
					Me.OnSOPRINTERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOFORMREDIR", DbType:="Int NOT NULL")>  _
		Public Property SOFORMREDIR() As Integer
			Get
				Return Me._SOFORMREDIR
			End Get
			Set
				If ((Me._SOFORMREDIR = value)  _
							= false) Then
					Me.OnSOFORMREDIRChanging(value)
					Me.SendPropertyChanging
					Me._SOFORMREDIR = value
					Me.SendPropertyChanged("SOFORMREDIR")
					Me.OnSOFORMREDIRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATES", DbType:="SmallInt")>  _
		Public Property TEMPLATES() As System.Nullable(Of Short)
			Get
				Return Me._TEMPLATES
			End Get
			Set
				If (Me._TEMPLATES.Equals(value) = false) Then
					Me.OnTEMPLATESChanging(value)
					Me.SendPropertyChanging
					Me._TEMPLATES = value
					Me.SendPropertyChanged("TEMPLATES")
					Me.OnTEMPLATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COPIES", DbType:="SmallInt NOT NULL")>  _
		Public Property COPIES() As Short
			Get
				Return Me._COPIES
			End Get
			Set
				If ((Me._COPIES = value)  _
							= false) Then
					Me.OnCOPIESChanging(value)
					Me.SendPropertyChanging
					Me._COPIES = value
					Me.SendPropertyChanged("COPIES")
					Me.OnCOPIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHKPRINTDOC", DbType:="SmallInt NOT NULL")>  _
		Public Property CHKPRINTDOC() As Short
			Get
				Return Me._CHKPRINTDOC
			End Get
			Set
				If ((Me._CHKPRINTDOC = value)  _
							= false) Then
					Me.OnCHKPRINTDOCChanging(value)
					Me.SendPropertyChanging
					Me._CHKPRINTDOC = value
					Me.SendPropertyChanged("CHKPRINTDOC")
					Me.OnCHKPRINTDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPRINTDOC", DbType:="SmallInt NOT NULL")>  _
		Public Property REPRINTDOC() As Short
			Get
				Return Me._REPRINTDOC
			End Get
			Set
				If ((Me._REPRINTDOC = value)  _
							= false) Then
					Me.OnREPRINTDOCChanging(value)
					Me.SendPropertyChanging
					Me._REPRINTDOC = value
					Me.SendPropertyChanged("REPRINTDOC")
					Me.OnREPRINTDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPRINTMD", DbType:="SmallInt NOT NULL")>  _
		Public Property REPRINTMD() As Short
			Get
				Return Me._REPRINTMD
			End Get
			Set
				If ((Me._REPRINTMD = value)  _
							= false) Then
					Me.OnREPRINTMDChanging(value)
					Me.SendPropertyChanging
					Me._REPRINTMD = value
					Me.SendPropertyChanged("REPRINTMD")
					Me.OnREPRINTMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINTDOCAPPRV", DbType:="SmallInt NOT NULL")>  _
		Public Property PRINTDOCAPPRV() As Short
			Get
				Return Me._PRINTDOCAPPRV
			End Get
			Set
				If ((Me._PRINTDOCAPPRV = value)  _
							= false) Then
					Me.OnPRINTDOCAPPRVChanging(value)
					Me.SendPropertyChanging
					Me._PRINTDOCAPPRV = value
					Me.SendPropertyChanged("PRINTDOCAPPRV")
					Me.OnPRINTDOCAPPRVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USECUSDISP", DbType:="SmallInt NOT NULL")>  _
		Public Property USECUSDISP() As Short
			Get
				Return Me._USECUSDISP
			End Get
			Set
				If ((Me._USECUSDISP = value)  _
							= false) Then
					Me.OnUSECUSDISPChanging(value)
					Me.SendPropertyChanging
					Me._USECUSDISP = value
					Me.SendPropertyChanged("USECUSDISP")
					Me.OnUSECUSDISPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSOSOURCE", DbType:="Int")>  _
		Public Property SSOSOURCE() As System.Nullable(Of Integer)
			Get
				Return Me._SSOSOURCE
			End Get
			Set
				If (Me._SSOSOURCE.Equals(value) = false) Then
					Me.OnSSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SSOSOURCE = value
					Me.SendPropertyChanged("SSOSOURCE")
					Me.OnSSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSERIES", DbType:="SmallInt")>  _
		Public Property SSERIES() As System.Nullable(Of Short)
			Get
				Return Me._SSERIES
			End Get
			Set
				If (Me._SSERIES.Equals(value) = false) Then
					Me.OnSSERIESChanging(value)
					Me.SendPropertyChanging
					Me._SSERIES = value
					Me.SendPropertyChanged("SSERIES")
					Me.OnSSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSERIES", DbType:="SmallInt")>  _
		Public Property CSERIES() As System.Nullable(Of Short)
			Get
				Return Me._CSERIES
			End Get
			Set
				If (Me._CSERIES.Equals(value) = false) Then
					Me.OnCSERIESChanging(value)
					Me.SendPropertyChanging
					Me._CSERIES = value
					Me.SendPropertyChanged("CSERIES")
					Me.OnCSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMD", DbType:="SmallInt NOT NULL")>  _
		Public Property PAYMD() As Short
			Get
				Return Me._PAYMD
			End Get
			Set
				If ((Me._PAYMD = value)  _
							= false) Then
					Me.OnPAYMDChanging(value)
					Me.SendPropertyChanging
					Me._PAYMD = value
					Me.SendPropertyChanged("PAYMD")
					Me.OnPAYMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PFINPAYTERMS", DbType:="SmallInt NOT NULL")>  _
		Public Property PFINPAYTERMS() As Short
			Get
				Return Me._PFINPAYTERMS
			End Get
			Set
				If ((Me._PFINPAYTERMS = value)  _
							= false) Then
					Me.OnPFINPAYTERMSChanging(value)
					Me.SendPropertyChanging
					Me._PFINPAYTERMS = value
					Me.SendPropertyChanged("PFINPAYTERMS")
					Me.OnPFINPAYTERMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PSERIES", DbType:="SmallInt")>  _
		Public Property PSERIES() As System.Nullable(Of Short)
			Get
				Return Me._PSERIES
			End Get
			Set
				If (Me._PSERIES.Equals(value) = false) Then
					Me.OnPSERIESChanging(value)
					Me.SendPropertyChanging
					Me._PSERIES = value
					Me.SendPropertyChanged("PSERIES")
					Me.OnPSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLSERIES", DbType:="SmallInt")>  _
		Public Property GLSERIES() As System.Nullable(Of Short)
			Get
				Return Me._GLSERIES
			End Get
			Set
				If (Me._GLSERIES.Equals(value) = false) Then
					Me.OnGLSERIESChanging(value)
					Me.SendPropertyChanging
					Me._GLSERIES = value
					Me.SendPropertyChanged("GLSERIES")
					Me.OnGLSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALSERIES", DbType:="SmallInt")>  _
		Public Property ALSERIES() As System.Nullable(Of Short)
			Get
				Return Me._ALSERIES
			End Get
			Set
				If (Me._ALSERIES.Equals(value) = false) Then
					Me.OnALSERIESChanging(value)
					Me.SendPropertyChanging
					Me._ALSERIES = value
					Me.SendPropertyChanged("ALSERIES")
					Me.OnALSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property AMODE() As Short
			Get
				Return Me._AMODE
			End Get
			Set
				If ((Me._AMODE = value)  _
							= false) Then
					Me.OnAMODEChanging(value)
					Me.SendPropertyChanging
					Me._AMODE = value
					Me.SendPropertyChanged("AMODE")
					Me.OnAMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASERIES", DbType:="SmallInt")>  _
		Public Property ASERIES() As System.Nullable(Of Short)
			Get
				Return Me._ASERIES
			End Get
			Set
				If (Me._ASERIES.Equals(value) = false) Then
					Me.OnASERIESChanging(value)
					Me.SendPropertyChanging
					Me._ASERIES = value
					Me.SendPropertyChanged("ASERIES")
					Me.OnASERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VSERIES", DbType:="SmallInt")>  _
		Public Property VSERIES() As System.Nullable(Of Short)
			Get
				Return Me._VSERIES
			End Get
			Set
				If (Me._VSERIES.Equals(value) = false) Then
					Me.OnVSERIESChanging(value)
					Me.SendPropertyChanging
					Me._VSERIES = value
					Me.SendPropertyChanged("VSERIES")
					Me.OnVSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESERIES", DbType:="SmallInt")>  _
		Public Property ESERIES() As System.Nullable(Of Short)
			Get
				Return Me._ESERIES
			End Get
			Set
				If (Me._ESERIES.Equals(value) = false) Then
					Me.OnESERIESChanging(value)
					Me.SendPropertyChanging
					Me._ESERIES = value
					Me.SendPropertyChanged("ESERIES")
					Me.OnESERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCSMD", DbType:="SmallInt NOT NULL")>  _
		Public Property SPCSMD() As Short
			Get
				Return Me._SPCSMD
			End Get
			Set
				If ((Me._SPCSMD = value)  _
							= false) Then
					Me.OnSPCSMDChanging(value)
					Me.SendPropertyChanging
					Me._SPCSMD = value
					Me.SendPropertyChanged("SPCSMD")
					Me.OnSPCSMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRDMD", DbType:="SmallInt NOT NULL")>  _
		Public Property PRDMD() As Short
			Get
				Return Me._PRDMD
			End Get
			Set
				If ((Me._PRDMD = value)  _
							= false) Then
					Me.OnPRDMDChanging(value)
					Me.SendPropertyChanging
					Me._PRDMD = value
					Me.SendPropertyChanged("PRDMD")
					Me.OnPRDMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRDSERIES", DbType:="SmallInt")>  _
		Public Property PRDSERIES() As System.Nullable(Of Short)
			Get
				Return Me._PRDSERIES
			End Get
			Set
				If (Me._PRDSERIES.Equals(value) = false) Then
					Me.OnPRDSERIESChanging(value)
					Me.SendPropertyChanging
					Me._PRDSERIES = value
					Me.SendPropertyChanged("PRDSERIES")
					Me.OnPRDSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRDITEMD", DbType:="SmallInt NOT NULL")>  _
		Public Property PRDITEMD() As Short
			Get
				Return Me._PRDITEMD
			End Get
			Set
				If ((Me._PRDITEMD = value)  _
							= false) Then
					Me.OnPRDITEMDChanging(value)
					Me.SendPropertyChanging
					Me._PRDITEMD = value
					Me.SendPropertyChanged("PRDITEMD")
					Me.OnPRDITEMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRDITEMSERIES", DbType:="SmallInt")>  _
		Public Property PRDITEMSERIES() As System.Nullable(Of Short)
			Get
				Return Me._PRDITEMSERIES
			End Get
			Set
				If (Me._PRDITEMSERIES.Equals(value) = false) Then
					Me.OnPRDITEMSERIESChanging(value)
					Me.SendPropertyChanging
					Me._PRDITEMSERIES = value
					Me.SendPropertyChanged("PRDITEMSERIES")
					Me.OnPRDITEMSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHQAUTO", DbType:="SmallInt NOT NULL")>  _
		Public Property CHQAUTO() As Short
			Get
				Return Me._CHQAUTO
			End Get
			Set
				If ((Me._CHQAUTO = value)  _
							= false) Then
					Me.OnCHQAUTOChanging(value)
					Me.SendPropertyChanging
					Me._CHQAUTO = value
					Me.SendPropertyChanged("CHQAUTO")
					Me.OnCHQAUTOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOISCONV", DbType:="SmallInt NOT NULL")>  _
		Public Property SOISCONV() As Short
			Get
				Return Me._SOISCONV
			End Get
			Set
				If ((Me._SOISCONV = value)  _
							= false) Then
					Me.OnSOISCONVChanging(value)
					Me.SendPropertyChanging
					Me._SOISCONV = value
					Me.SendPropertyChanged("SOISCONV")
					Me.OnSOISCONVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SONOCONV", DbType:="SmallInt NOT NULL")>  _
		Public Property SONOCONV() As Short
			Get
				Return Me._SONOCONV
			End Get
			Set
				If ((Me._SONOCONV = value)  _
							= false) Then
					Me.OnSONOCONVChanging(value)
					Me.SendPropertyChanging
					Me._SONOCONV = value
					Me.SendPropertyChanged("SONOCONV")
					Me.OnSONOCONVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIESACCESS", DbType:="VarChar(4000)")>  _
		Public Property SERIESACCESS() As String
			Get
				Return Me._SERIESACCESS
			End Get
			Set
				If (String.Equals(Me._SERIESACCESS, value) = false) Then
					Me.OnSERIESACCESSChanging(value)
					Me.SendPropertyChanging
					Me._SERIESACCESS = value
					Me.SendPropertyChanged("SERIESACCESS")
					Me.OnSERIESACCESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIESPAY", DbType:="VarChar(1000)")>  _
		Public Property SERIESPAY() As String
			Get
				Return Me._SERIESPAY
			End Get
			Set
				If (String.Equals(Me._SERIESPAY, value) = false) Then
					Me.OnSERIESPAYChanging(value)
					Me.SendPropertyChanging
					Me._SERIESPAY = value
					Me.SendPropertyChanged("SERIESPAY")
					Me.OnSERIESPAYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIESCNV", DbType:="VarChar(2000)")>  _
		Public Property SERIESCNV() As String
			Get
				Return Me._SERIESCNV
			End Get
			Set
				If (String.Equals(Me._SERIESCNV, value) = false) Then
					Me.OnSERIESCNVChanging(value)
					Me.SendPropertyChanging
					Me._SERIESCNV = value
					Me.SendPropertyChanged("SERIESCNV")
					Me.OnSERIESCNVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGPREFIX", DbType:="VarChar(10)")>  _
		Public Property BGPREFIX() As String
			Get
				Return Me._BGPREFIX
			End Get
			Set
				If (String.Equals(Me._BGPREFIX, value) = false) Then
					Me.OnBGPREFIXChanging(value)
					Me.SendPropertyChanging
					Me._BGPREFIX = value
					Me.SendPropertyChanged("BGPREFIX")
					Me.OnBGPREFIXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRACEPRN", DbType:="SmallInt NOT NULL")>  _
		Public Property TRACEPRN() As Short
			Get
				Return Me._TRACEPRN
			End Get
			Set
				If ((Me._TRACEPRN = value)  _
							= false) Then
					Me.OnTRACEPRNChanging(value)
					Me.SendPropertyChanging
					Me._TRACEPRN = value
					Me.SendPropertyChanged("TRACEPRN")
					Me.OnTRACEPRNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ECOLLABORATION", DbType:="SmallInt")>  _
		Public Property ECOLLABORATION() As System.Nullable(Of Short)
			Get
				Return Me._ECOLLABORATION
			End Get
			Set
				If (Me._ECOLLABORATION.Equals(value) = false) Then
					Me.OnECOLLABORATIONChanging(value)
					Me.SendPropertyChanging
					Me._ECOLLABORATION = value
					Me.SendPropertyChanged("ECOLLABORATION")
					Me.OnECOLLABORATIONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISPACKAGES", DbType:="SmallInt")>  _
		Public Property GSISPACKAGES() As System.Nullable(Of Short)
			Get
				Return Me._GSISPACKAGES
			End Get
			Set
				If (Me._GSISPACKAGES.Equals(value) = false) Then
					Me.OnGSISPACKAGESChanging(value)
					Me.SendPropertyChanging
					Me._GSISPACKAGES = value
					Me.SendPropertyChanged("GSISPACKAGES")
					Me.OnGSISPACKAGESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccseries", DbType:="VarChar(30)")>  _
		Public Property cccseries() As String
			Get
				Return Me._cccseries
			End Get
			Set
				If (String.Equals(Me._cccseries, value) = false) Then
					Me.OncccseriesChanging(value)
					Me.SendPropertyChanging
					Me._cccseries = value
					Me.SendPropertyChanged("cccseries")
					Me.OncccseriesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccctype", DbType:="VarChar(30)")>  _
		Public Property ccctype() As String
			Get
				Return Me._ccctype
			End Get
			Set
				If (String.Equals(Me._ccctype, value) = false) Then
					Me.OnccctypeChanging(value)
					Me.SendPropertyChanging
					Me._ccctype = value
					Me.SendPropertyChanged("ccctype")
					Me.OnccctypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCPrDescr", DbType:="VarChar(50)")>  _
		Public Property ccCPrDescr() As String
			Get
				Return Me._ccCPrDescr
			End Get
			Set
				If (String.Equals(Me._ccCPrDescr, value) = false) Then
					Me.OnccCPrDescrChanging(value)
					Me.SendPropertyChanging
					Me._ccCPrDescr = value
					Me.SendPropertyChanged("ccCPrDescr")
					Me.OnccCPrDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SERIES_CHEQUE", Storage:="_CHEQUEs", ThisKey:="COMPANY,SOSOURCE,SERIES", OtherKey:="COMPANY,SOSOURCE,SERIES")>  _
		Public Property CHEQUEs() As EntitySet(Of CHEQUE)
			Get
				Return Me._CHEQUEs
			End Get
			Set
				Me._CHEQUEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SERIES_SERIESNUM", Storage:="_SERIESNUMs", ThisKey:="COMPANY,SOSOURCE,SERIES", OtherKey:="COMPANY,SOSOURCE,SERIES")>  _
		Public Property SERIESNUMs() As EntitySet(Of SERIESNUM)
			Get
				Return Me._SERIESNUMs
			End Get
			Set
				Me._SERIESNUMs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SERIES_FINDOC", Storage:="_FINDOCs", ThisKey:="COMPANY,SOSOURCE,SERIES", OtherKey:="COMPANY,SOSOURCE,SERIES")>  _
		Public Property FINDOCs() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs
			End Get
			Set
				Me._FINDOCs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FPRM_SERIES", Storage:="_FPRM", ThisKey:="COMPANY,SOSOURCE,FPRMS", OtherKey:="COMPANY,SOSOURCE,FPRMS", IsForeignKey:=true)>  _
		Public Property FPRM() As FPRM
			Get
				Return Me._FPRM.Entity
			End Get
			Set
				Dim previousValue As FPRM = Me._FPRM.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FPRM.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FPRM.Entity = Nothing
						previousValue.SERIES.Remove(Me)
					End If
					Me._FPRM.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SERIES.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._SOSOURCE = value.SOSOURCE
						Me._FPRMS = value.FPRMS
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._SOSOURCE = CType(Nothing, Integer)
						Me._FPRMS = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("FPRM")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSEBIN_SERIES", Storage:="_WHOUSEBIN1", ThisKey:="COMPANY,WHOUSE,WHOUSEBIN", OtherKey:="COMPANY,WHOUSE,WHOUSEBIN", IsForeignKey:=true)>  _
		Public Property WHOUSEBIN1() As WHOUSEBIN
			Get
				Return Me._WHOUSEBIN1.Entity
			End Get
			Set
				Dim previousValue As WHOUSEBIN = Me._WHOUSEBIN1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSEBIN1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSEBIN1.Entity = Nothing
						previousValue.SERIES.Remove(Me)
					End If
					Me._WHOUSEBIN1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SERIES.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSE = value.WHOUSE
						Me._WHOUSEBIN = value.WHOUSEBIN
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSE = CType(Nothing, Nullable(Of Short))
						Me._WHOUSEBIN = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSEBIN1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_SERIES", Storage:="_BRANCH1", ThisKey:="COMPANY,BRANCH", OtherKey:="COMPANY,BRANCH", IsForeignKey:=true)>  _
		Public Property BRANCH1() As BRANCH
			Get
				Return Me._BRANCH1.Entity
			End Get
			Set
				Dim previousValue As BRANCH = Me._BRANCH1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._BRANCH1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._BRANCH1.Entity = Nothing
						previousValue.SERIES.Remove(Me)
					End If
					Me._BRANCH1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SERIES.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._BRANCH = value.BRANCH
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._BRANCH = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("BRANCH1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_SERIES1", Storage:="_BRANCH2", ThisKey:="COMPANY,BRANCHSEC", OtherKey:="COMPANY,BRANCH", IsForeignKey:=true)>  _
		Public Property BRANCH2() As BRANCH
			Get
				Return Me._BRANCH2.Entity
			End Get
			Set
				Dim previousValue As BRANCH = Me._BRANCH2.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._BRANCH2.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._BRANCH2.Entity = Nothing
						previousValue.SERIES1.Remove(Me)
					End If
					Me._BRANCH2.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SERIES1.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._BRANCHSEC = value.BRANCH
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._BRANCHSEC = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("BRANCH2")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_SERIES", Storage:="_WHOUSE1", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE", IsForeignKey:=true)>  _
		Public Property WHOUSE1() As WHOUSE
			Get
				Return Me._WHOUSE1.Entity
			End Get
			Set
				Dim previousValue As WHOUSE = Me._WHOUSE1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSE1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSE1.Entity = Nothing
						previousValue.SERIES.Remove(Me)
					End If
					Me._WHOUSE1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SERIES.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSE = value.WHOUSE
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSE = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSE1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_SERIES1", Storage:="_WHOUSE2", ThisKey:="COMPANY,WHOUSESEC", OtherKey:="COMPANY,WHOUSE", IsForeignKey:=true)>  _
		Public Property WHOUSE2() As WHOUSE
			Get
				Return Me._WHOUSE2.Entity
			End Get
			Set
				Dim previousValue As WHOUSE = Me._WHOUSE2.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSE2.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSE2.Entity = Nothing
						previousValue.SERIES1.Remove(Me)
					End If
					Me._WHOUSE2.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SERIES1.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSESEC = value.WHOUSE
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSESEC = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSE2")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_CHEQUEs(ByVal entity As CHEQUE)
			Me.SendPropertyChanging
			entity.SERIES1 = Me
		End Sub
		
		Private Sub detach_CHEQUEs(ByVal entity As CHEQUE)
			Me.SendPropertyChanging
			entity.SERIES1 = Nothing
		End Sub
		
		Private Sub attach_SERIESNUMs(ByVal entity As SERIESNUM)
			Me.SendPropertyChanging
			entity.SERIES1 = Me
		End Sub
		
		Private Sub detach_SERIESNUMs(ByVal entity As SERIESNUM)
			Me.SendPropertyChanging
			entity.SERIES1 = Nothing
		End Sub
		
		Private Sub attach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.SERIES1 = Me
		End Sub
		
		Private Sub detach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.SERIES1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SERIESNUM")>  _
	Partial Public Class SERIESNUM
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SOSOURCE As Integer
		
		Private _SERIES As Short
		
		Private _FISCPRD As Short
		
		Private _SERIESNUM As Integer
		
		Private _SERIES1 As EntityRef(Of SERIES)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnSERIESChanging(value As Short)
    End Sub
    Partial Private Sub OnSERIESChanged()
    End Sub
    Partial Private Sub OnFISCPRDChanging(value As Short)
    End Sub
    Partial Private Sub OnFISCPRDChanged()
    End Sub
    Partial Private Sub OnSERIESNUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnSERIESNUMChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._SERIES1 = CType(Nothing, EntityRef(Of SERIES))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					If Me._SERIES1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					If Me._SERIES1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIES", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SERIES() As Short
			Get
				Return Me._SERIES
			End Get
			Set
				If ((Me._SERIES = value)  _
							= false) Then
					If Me._SERIES1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSERIESChanging(value)
					Me.SendPropertyChanging
					Me._SERIES = value
					Me.SendPropertyChanged("SERIES")
					Me.OnSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FISCPRD", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FISCPRD() As Short
			Get
				Return Me._FISCPRD
			End Get
			Set
				If ((Me._FISCPRD = value)  _
							= false) Then
					Me.OnFISCPRDChanging(value)
					Me.SendPropertyChanging
					Me._FISCPRD = value
					Me.SendPropertyChanged("FISCPRD")
					Me.OnFISCPRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIESNUM", DbType:="Int NOT NULL")>  _
		Public Property SERIESNUM() As Integer
			Get
				Return Me._SERIESNUM
			End Get
			Set
				If ((Me._SERIESNUM = value)  _
							= false) Then
					Me.OnSERIESNUMChanging(value)
					Me.SendPropertyChanging
					Me._SERIESNUM = value
					Me.SendPropertyChanged("SERIESNUM")
					Me.OnSERIESNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SERIES_SERIESNUM", Storage:="_SERIES1", ThisKey:="COMPANY,SOSOURCE,SERIES", OtherKey:="COMPANY,SOSOURCE,SERIES", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property SERIES1() As SERIES
			Get
				Return Me._SERIES1.Entity
			End Get
			Set
				Dim previousValue As SERIES = Me._SERIES1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._SERIES1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._SERIES1.Entity = Nothing
						previousValue.SERIESNUMs.Remove(Me)
					End If
					Me._SERIES1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SERIESNUMs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._SOSOURCE = value.SOSOURCE
						Me._SERIES = value.SERIES
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._SOSOURCE = CType(Nothing, Integer)
						Me._SERIES = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("SERIES1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SPCOSTANAL")>  _
	Partial Public Class SPCOSTANAL
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _FINDOC As Integer
		
		Private _SPCOSTANAL As Short
		
		Private _COMPANY As Short
		
		Private _LINENUM As Integer
		
		Private _SPCOST As Short
		
		Private _SPECALCTYPE As Short
		
		Private _SPEMODIFY As Short
		
		Private _SPCOSTKIND As Short
		
		Private _STAGE As System.Nullable(Of Short)
		
		Private _STAGELINENUM As System.Nullable(Of Short)
		
		Private _SOVAL As Double
		
		Private _COSTVAL As Double
		
		Private _COMMENTS As String
		
		Private _SPEACNVAL As Short
		
		Private _FINDOC1 As EntityRef(Of FINDOC)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFINDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINDOCChanged()
    End Sub
    Partial Private Sub OnSPCOSTANALChanging(value As Short)
    End Sub
    Partial Private Sub OnSPCOSTANALChanged()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnLINENUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnLINENUMChanged()
    End Sub
    Partial Private Sub OnSPCOSTChanging(value As Short)
    End Sub
    Partial Private Sub OnSPCOSTChanged()
    End Sub
    Partial Private Sub OnSPECALCTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSPECALCTYPEChanged()
    End Sub
    Partial Private Sub OnSPEMODIFYChanging(value As Short)
    End Sub
    Partial Private Sub OnSPEMODIFYChanged()
    End Sub
    Partial Private Sub OnSPCOSTKINDChanging(value As Short)
    End Sub
    Partial Private Sub OnSPCOSTKINDChanged()
    End Sub
    Partial Private Sub OnSTAGEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSTAGEChanged()
    End Sub
    Partial Private Sub OnSTAGELINENUMChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSTAGELINENUMChanged()
    End Sub
    Partial Private Sub OnSOVALChanging(value As Double)
    End Sub
    Partial Private Sub OnSOVALChanged()
    End Sub
    Partial Private Sub OnCOSTVALChanging(value As Double)
    End Sub
    Partial Private Sub OnCOSTVALChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnSPEACNVALChanging(value As Short)
    End Sub
    Partial Private Sub OnSPEACNVALChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FINDOC1 = CType(Nothing, EntityRef(Of FINDOC))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					If Me._FINDOC1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOC = value
					Me.SendPropertyChanged("FINDOC")
					Me.OnFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCOSTANAL", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SPCOSTANAL() As Short
			Get
				Return Me._SPCOSTANAL
			End Get
			Set
				If ((Me._SPCOSTANAL = value)  _
							= false) Then
					Me.OnSPCOSTANALChanging(value)
					Me.SendPropertyChanging
					Me._SPCOSTANAL = value
					Me.SendPropertyChanged("SPCOSTANAL")
					Me.OnSPCOSTANALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINENUM", DbType:="Int NOT NULL")>  _
		Public Property LINENUM() As Integer
			Get
				Return Me._LINENUM
			End Get
			Set
				If ((Me._LINENUM = value)  _
							= false) Then
					Me.OnLINENUMChanging(value)
					Me.SendPropertyChanging
					Me._LINENUM = value
					Me.SendPropertyChanged("LINENUM")
					Me.OnLINENUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCOST", DbType:="SmallInt NOT NULL")>  _
		Public Property SPCOST() As Short
			Get
				Return Me._SPCOST
			End Get
			Set
				If ((Me._SPCOST = value)  _
							= false) Then
					Me.OnSPCOSTChanging(value)
					Me.SendPropertyChanging
					Me._SPCOST = value
					Me.SendPropertyChanged("SPCOST")
					Me.OnSPCOSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECALCTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SPECALCTYPE() As Short
			Get
				Return Me._SPECALCTYPE
			End Get
			Set
				If ((Me._SPECALCTYPE = value)  _
							= false) Then
					Me.OnSPECALCTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SPECALCTYPE = value
					Me.SendPropertyChanged("SPECALCTYPE")
					Me.OnSPECALCTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPEMODIFY", DbType:="SmallInt NOT NULL")>  _
		Public Property SPEMODIFY() As Short
			Get
				Return Me._SPEMODIFY
			End Get
			Set
				If ((Me._SPEMODIFY = value)  _
							= false) Then
					Me.OnSPEMODIFYChanging(value)
					Me.SendPropertyChanging
					Me._SPEMODIFY = value
					Me.SendPropertyChanged("SPEMODIFY")
					Me.OnSPEMODIFYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCOSTKIND", DbType:="SmallInt NOT NULL")>  _
		Public Property SPCOSTKIND() As Short
			Get
				Return Me._SPCOSTKIND
			End Get
			Set
				If ((Me._SPCOSTKIND = value)  _
							= false) Then
					Me.OnSPCOSTKINDChanging(value)
					Me.SendPropertyChanging
					Me._SPCOSTKIND = value
					Me.SendPropertyChanged("SPCOSTKIND")
					Me.OnSPCOSTKINDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAGE", DbType:="SmallInt")>  _
		Public Property STAGE() As System.Nullable(Of Short)
			Get
				Return Me._STAGE
			End Get
			Set
				If (Me._STAGE.Equals(value) = false) Then
					Me.OnSTAGEChanging(value)
					Me.SendPropertyChanging
					Me._STAGE = value
					Me.SendPropertyChanged("STAGE")
					Me.OnSTAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAGELINENUM", DbType:="SmallInt")>  _
		Public Property STAGELINENUM() As System.Nullable(Of Short)
			Get
				Return Me._STAGELINENUM
			End Get
			Set
				If (Me._STAGELINENUM.Equals(value) = false) Then
					Me.OnSTAGELINENUMChanging(value)
					Me.SendPropertyChanging
					Me._STAGELINENUM = value
					Me.SendPropertyChanged("STAGELINENUM")
					Me.OnSTAGELINENUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOVAL", DbType:="Float NOT NULL")>  _
		Public Property SOVAL() As Double
			Get
				Return Me._SOVAL
			End Get
			Set
				If ((Me._SOVAL = value)  _
							= false) Then
					Me.OnSOVALChanging(value)
					Me.SendPropertyChanging
					Me._SOVAL = value
					Me.SendPropertyChanged("SOVAL")
					Me.OnSOVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTVAL", DbType:="Float NOT NULL")>  _
		Public Property COSTVAL() As Double
			Get
				Return Me._COSTVAL
			End Get
			Set
				If ((Me._COSTVAL = value)  _
							= false) Then
					Me.OnCOSTVALChanging(value)
					Me.SendPropertyChanging
					Me._COSTVAL = value
					Me.SendPropertyChanged("COSTVAL")
					Me.OnCOSTVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPEACNVAL", DbType:="SmallInt NOT NULL")>  _
		Public Property SPEACNVAL() As Short
			Get
				Return Me._SPEACNVAL
			End Get
			Set
				If ((Me._SPEACNVAL = value)  _
							= false) Then
					Me.OnSPEACNVALChanging(value)
					Me.SendPropertyChanging
					Me._SPEACNVAL = value
					Me.SendPropertyChanged("SPEACNVAL")
					Me.OnSPEACNVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_SPCOSTANAL", Storage:="_FINDOC1", ThisKey:="FINDOC", OtherKey:="FINDOC", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property FINDOC1() As FINDOC
			Get
				Return Me._FINDOC1.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC1.Entity = Nothing
						previousValue.SPCOSTANALs.Remove(Me)
					End If
					Me._FINDOC1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.SPCOSTANALs.Add(Me)
						Me._FINDOC = value.FINDOC
					Else
						Me._FINDOC = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("FINDOC1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVFinPayTerms")>  _
	Partial Public Class ccCVFinPayTerm
		
		Private _TRDR As Integer
		
		Private _TRNDATE As Date
		
		Private _FINALDATE As System.Nullable(Of Date)
		
		Private _FINCODE As String
		
		Private _FINDOC As Integer
		
		Private _SOSOURCE As System.Nullable(Of Integer)
		
		Private _SOREDIR As System.Nullable(Of Integer)
		
		Private _TVAL As System.Nullable(Of Double)
		
		Private _TRDRRATE As System.Nullable(Of Double)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _SALCODE As String
		
		Private _SALNAME As String
		
		Private _COLCODE As String
		
		Private _COLNAME As String
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _PJCODE As String
		
		Private _PJNAME As String
		
		Private _TRCODE As String
		
		Private _TRNAME As String
		
		Private _PAYMENT As System.Nullable(Of Short)
		
		Private _SHIPMENT As System.Nullable(Of Short)
		
		Private _SOCARRIER As System.Nullable(Of Short)
		
		Private _OPNTVAL As System.Nullable(Of Double)
		
		Private _SOCURRENCY As Short
		
		Private _OITYPE As System.Nullable(Of Short)
		
		Private _STAMNT As System.Nullable(Of Double)
		
		Private _SOPNTAMNT As System.Nullable(Of Double)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime NOT NULL")>  _
		Public Property TRNDATE() As Date
			Get
				Return Me._TRNDATE
			End Get
			Set
				If ((Me._TRNDATE = value)  _
							= false) Then
					Me._TRNDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINALDATE", DbType:="DateTime")>  _
		Public Property FINALDATE() As System.Nullable(Of Date)
			Get
				Return Me._FINALDATE
			End Get
			Set
				If (Me._FINALDATE.Equals(value) = false) Then
					Me._FINALDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODE", DbType:="VarChar(30)")>  _
		Public Property FINCODE() As String
			Get
				Return Me._FINCODE
			End Get
			Set
				If (String.Equals(Me._FINCODE, value) = false) Then
					Me._FINCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL")>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int")>  _
		Public Property SOSOURCE() As System.Nullable(Of Integer)
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If (Me._SOSOURCE.Equals(value) = false) Then
					Me._SOSOURCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOREDIR", DbType:="Int")>  _
		Public Property SOREDIR() As System.Nullable(Of Integer)
			Get
				Return Me._SOREDIR
			End Get
			Set
				If (Me._SOREDIR.Equals(value) = false) Then
					Me._SOREDIR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TVAL", DbType:="Float")>  _
		Public Property TVAL() As System.Nullable(Of Double)
			Get
				Return Me._TVAL
			End Get
			Set
				If (Me._TVAL.Equals(value) = false) Then
					Me._TVAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRRATE", DbType:="Float")>  _
		Public Property TRDRRATE() As System.Nullable(Of Double)
			Get
				Return Me._TRDRRATE
			End Get
			Set
				If (Me._TRDRRATE.Equals(value) = false) Then
					Me._TRDRRATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					Me._SALESMAN = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALCODE", DbType:="VarChar(25)")>  _
		Public Property SALCODE() As String
			Get
				Return Me._SALCODE
			End Get
			Set
				If (String.Equals(Me._SALCODE, value) = false) Then
					Me._SALCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALNAME", DbType:="VarChar(64)")>  _
		Public Property SALNAME() As String
			Get
				Return Me._SALNAME
			End Get
			Set
				If (String.Equals(Me._SALNAME, value) = false) Then
					Me._SALNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLCODE", DbType:="VarChar(25)")>  _
		Public Property COLCODE() As String
			Get
				Return Me._COLCODE
			End Get
			Set
				If (String.Equals(Me._COLCODE, value) = false) Then
					Me._COLCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLNAME", DbType:="VarChar(64)")>  _
		Public Property COLNAME() As String
			Get
				Return Me._COLNAME
			End Get
			Set
				If (String.Equals(Me._COLNAME, value) = false) Then
					Me._COLNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me._BUSUNITS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJCODE", DbType:="VarChar(25)")>  _
		Public Property PJCODE() As String
			Get
				Return Me._PJCODE
			End Get
			Set
				If (String.Equals(Me._PJCODE, value) = false) Then
					Me._PJCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJNAME", DbType:="VarChar(64)")>  _
		Public Property PJNAME() As String
			Get
				Return Me._PJNAME
			End Get
			Set
				If (String.Equals(Me._PJNAME, value) = false) Then
					Me._PJNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRCODE", DbType:="VarChar(25)")>  _
		Public Property TRCODE() As String
			Get
				Return Me._TRCODE
			End Get
			Set
				If (String.Equals(Me._TRCODE, value) = false) Then
					Me._TRCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNAME", DbType:="VarChar(128)")>  _
		Public Property TRNAME() As String
			Get
				Return Me._TRNAME
			End Get
			Set
				If (String.Equals(Me._TRNAME, value) = false) Then
					Me._TRNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT", DbType:="SmallInt")>  _
		Public Property PAYMENT() As System.Nullable(Of Short)
			Get
				Return Me._PAYMENT
			End Get
			Set
				If (Me._PAYMENT.Equals(value) = false) Then
					Me._PAYMENT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPMENT", DbType:="SmallInt")>  _
		Public Property SHIPMENT() As System.Nullable(Of Short)
			Get
				Return Me._SHIPMENT
			End Get
			Set
				If (Me._SHIPMENT.Equals(value) = false) Then
					Me._SHIPMENT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt")>  _
		Public Property SOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If (Me._SOCARRIER.Equals(value) = false) Then
					Me._SOCARRIER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNTVAL", DbType:="Float")>  _
		Public Property OPNTVAL() As System.Nullable(Of Double)
			Get
				Return Me._OPNTVAL
			End Get
			Set
				If (Me._OPNTVAL.Equals(value) = false) Then
					Me._OPNTVAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me._SOCURRENCY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OITYPE", DbType:="SmallInt")>  _
		Public Property OITYPE() As System.Nullable(Of Short)
			Get
				Return Me._OITYPE
			End Get
			Set
				If (Me._OITYPE.Equals(value) = false) Then
					Me._OITYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAMNT", DbType:="Float")>  _
		Public Property STAMNT() As System.Nullable(Of Double)
			Get
				Return Me._STAMNT
			End Get
			Set
				If (Me._STAMNT.Equals(value) = false) Then
					Me._STAMNT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPNTAMNT", DbType:="Float")>  _
		Public Property SOPNTAMNT() As System.Nullable(Of Double)
			Get
				Return Me._SOPNTAMNT
			End Get
			Set
				If (Me._SOPNTAMNT.Equals(value) = false) Then
					Me._SOPNTAMNT = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRDFINDATA")>  _
	Partial Public Class TRDFINDATA
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _TRDR As Integer
		
		Private _LBAL As Double
		
		Private _LTURNOVR As Double
		
		Private _TBAL As Double
		
		Private _TTURNOVR As Double
		
		Private _DEBDATEV As System.Nullable(Of Date)
		
		Private _CREDATEV As System.Nullable(Of Date)
		
		Private _CNTVAL01 As System.Nullable(Of Double)
		
		Private _CNTVAL02 As System.Nullable(Of Double)
		
		Private _CNTVAL03 As System.Nullable(Of Double)
		
		Private _CNTVAL04 As System.Nullable(Of Double)
		
		Private _CNTVAL05 As System.Nullable(Of Double)
		
		Private _CNTVAL06 As System.Nullable(Of Double)
		
		Private _CNTVAL07 As System.Nullable(Of Double)
		
		Private _CNTVAL08 As System.Nullable(Of Double)
		
		Private _CNTVAL09 As System.Nullable(Of Double)
		
		Private _CNTVAL10 As System.Nullable(Of Double)
		
		Private _CNTVAL11 As System.Nullable(Of Double)
		
		Private _CNTVAL12 As System.Nullable(Of Double)
		
		Private _CNTVAL13 As System.Nullable(Of Double)
		
		Private _CNTVAL14 As System.Nullable(Of Double)
		
		Private _CNTVAL15 As System.Nullable(Of Double)
		
		Private _CNTVAL16 As System.Nullable(Of Double)
		
		Private _CNTVAL17 As System.Nullable(Of Double)
		
		Private _CNTVAL18 As System.Nullable(Of Double)
		
		Private _CNTVAL19 As System.Nullable(Of Double)
		
		Private _CNTVAL20 As System.Nullable(Of Double)
		
		Private _TRDR1 As EntityRef(Of TRDR)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnLBALChanging(value As Double)
    End Sub
    Partial Private Sub OnLBALChanged()
    End Sub
    Partial Private Sub OnLTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnLTURNOVRChanged()
    End Sub
    Partial Private Sub OnTBALChanging(value As Double)
    End Sub
    Partial Private Sub OnTBALChanged()
    End Sub
    Partial Private Sub OnTTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnTTURNOVRChanged()
    End Sub
    Partial Private Sub OnDEBDATEVChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDEBDATEVChanged()
    End Sub
    Partial Private Sub OnCREDATEVChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREDATEVChanged()
    End Sub
    Partial Private Sub OnCNTVAL01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL01Changed()
    End Sub
    Partial Private Sub OnCNTVAL02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL02Changed()
    End Sub
    Partial Private Sub OnCNTVAL03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL03Changed()
    End Sub
    Partial Private Sub OnCNTVAL04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL04Changed()
    End Sub
    Partial Private Sub OnCNTVAL05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL05Changed()
    End Sub
    Partial Private Sub OnCNTVAL06Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL06Changed()
    End Sub
    Partial Private Sub OnCNTVAL07Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL07Changed()
    End Sub
    Partial Private Sub OnCNTVAL08Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL08Changed()
    End Sub
    Partial Private Sub OnCNTVAL09Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL09Changed()
    End Sub
    Partial Private Sub OnCNTVAL10Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL10Changed()
    End Sub
    Partial Private Sub OnCNTVAL11Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL11Changed()
    End Sub
    Partial Private Sub OnCNTVAL12Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL12Changed()
    End Sub
    Partial Private Sub OnCNTVAL13Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL13Changed()
    End Sub
    Partial Private Sub OnCNTVAL14Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL14Changed()
    End Sub
    Partial Private Sub OnCNTVAL15Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL15Changed()
    End Sub
    Partial Private Sub OnCNTVAL16Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL16Changed()
    End Sub
    Partial Private Sub OnCNTVAL17Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL17Changed()
    End Sub
    Partial Private Sub OnCNTVAL18Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL18Changed()
    End Sub
    Partial Private Sub OnCNTVAL19Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL19Changed()
    End Sub
    Partial Private Sub OnCNTVAL20Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL20Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._TRDR1 = CType(Nothing, EntityRef(Of TRDR))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					If Me._TRDR1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LBAL", DbType:="Float NOT NULL")>  _
		Public Property LBAL() As Double
			Get
				Return Me._LBAL
			End Get
			Set
				If ((Me._LBAL = value)  _
							= false) Then
					Me.OnLBALChanging(value)
					Me.SendPropertyChanging
					Me._LBAL = value
					Me.SendPropertyChanged("LBAL")
					Me.OnLBALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property LTURNOVR() As Double
			Get
				Return Me._LTURNOVR
			End Get
			Set
				If ((Me._LTURNOVR = value)  _
							= false) Then
					Me.OnLTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._LTURNOVR = value
					Me.SendPropertyChanged("LTURNOVR")
					Me.OnLTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TBAL", DbType:="Float NOT NULL")>  _
		Public Property TBAL() As Double
			Get
				Return Me._TBAL
			End Get
			Set
				If ((Me._TBAL = value)  _
							= false) Then
					Me.OnTBALChanging(value)
					Me.SendPropertyChanging
					Me._TBAL = value
					Me.SendPropertyChanged("TBAL")
					Me.OnTBALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property TTURNOVR() As Double
			Get
				Return Me._TTURNOVR
			End Get
			Set
				If ((Me._TTURNOVR = value)  _
							= false) Then
					Me.OnTTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._TTURNOVR = value
					Me.SendPropertyChanged("TTURNOVR")
					Me.OnTTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEBDATEV", DbType:="DateTime")>  _
		Public Property DEBDATEV() As System.Nullable(Of Date)
			Get
				Return Me._DEBDATEV
			End Get
			Set
				If (Me._DEBDATEV.Equals(value) = false) Then
					Me.OnDEBDATEVChanging(value)
					Me.SendPropertyChanging
					Me._DEBDATEV = value
					Me.SendPropertyChanged("DEBDATEV")
					Me.OnDEBDATEVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREDATEV", DbType:="DateTime")>  _
		Public Property CREDATEV() As System.Nullable(Of Date)
			Get
				Return Me._CREDATEV
			End Get
			Set
				If (Me._CREDATEV.Equals(value) = false) Then
					Me.OnCREDATEVChanging(value)
					Me.SendPropertyChanging
					Me._CREDATEV = value
					Me.SendPropertyChanged("CREDATEV")
					Me.OnCREDATEVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL01", DbType:="Float")>  _
		Public Property CNTVAL01() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL01
			End Get
			Set
				If (Me._CNTVAL01.Equals(value) = false) Then
					Me.OnCNTVAL01Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL01 = value
					Me.SendPropertyChanged("CNTVAL01")
					Me.OnCNTVAL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL02", DbType:="Float")>  _
		Public Property CNTVAL02() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL02
			End Get
			Set
				If (Me._CNTVAL02.Equals(value) = false) Then
					Me.OnCNTVAL02Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL02 = value
					Me.SendPropertyChanged("CNTVAL02")
					Me.OnCNTVAL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL03", DbType:="Float")>  _
		Public Property CNTVAL03() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL03
			End Get
			Set
				If (Me._CNTVAL03.Equals(value) = false) Then
					Me.OnCNTVAL03Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL03 = value
					Me.SendPropertyChanged("CNTVAL03")
					Me.OnCNTVAL03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL04", DbType:="Float")>  _
		Public Property CNTVAL04() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL04
			End Get
			Set
				If (Me._CNTVAL04.Equals(value) = false) Then
					Me.OnCNTVAL04Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL04 = value
					Me.SendPropertyChanged("CNTVAL04")
					Me.OnCNTVAL04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL05", DbType:="Float")>  _
		Public Property CNTVAL05() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL05
			End Get
			Set
				If (Me._CNTVAL05.Equals(value) = false) Then
					Me.OnCNTVAL05Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL05 = value
					Me.SendPropertyChanged("CNTVAL05")
					Me.OnCNTVAL05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL06", DbType:="Float")>  _
		Public Property CNTVAL06() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL06
			End Get
			Set
				If (Me._CNTVAL06.Equals(value) = false) Then
					Me.OnCNTVAL06Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL06 = value
					Me.SendPropertyChanged("CNTVAL06")
					Me.OnCNTVAL06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL07", DbType:="Float")>  _
		Public Property CNTVAL07() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL07
			End Get
			Set
				If (Me._CNTVAL07.Equals(value) = false) Then
					Me.OnCNTVAL07Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL07 = value
					Me.SendPropertyChanged("CNTVAL07")
					Me.OnCNTVAL07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL08", DbType:="Float")>  _
		Public Property CNTVAL08() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL08
			End Get
			Set
				If (Me._CNTVAL08.Equals(value) = false) Then
					Me.OnCNTVAL08Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL08 = value
					Me.SendPropertyChanged("CNTVAL08")
					Me.OnCNTVAL08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL09", DbType:="Float")>  _
		Public Property CNTVAL09() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL09
			End Get
			Set
				If (Me._CNTVAL09.Equals(value) = false) Then
					Me.OnCNTVAL09Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL09 = value
					Me.SendPropertyChanged("CNTVAL09")
					Me.OnCNTVAL09Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL10", DbType:="Float")>  _
		Public Property CNTVAL10() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL10
			End Get
			Set
				If (Me._CNTVAL10.Equals(value) = false) Then
					Me.OnCNTVAL10Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL10 = value
					Me.SendPropertyChanged("CNTVAL10")
					Me.OnCNTVAL10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL11", DbType:="Float")>  _
		Public Property CNTVAL11() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL11
			End Get
			Set
				If (Me._CNTVAL11.Equals(value) = false) Then
					Me.OnCNTVAL11Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL11 = value
					Me.SendPropertyChanged("CNTVAL11")
					Me.OnCNTVAL11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL12", DbType:="Float")>  _
		Public Property CNTVAL12() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL12
			End Get
			Set
				If (Me._CNTVAL12.Equals(value) = false) Then
					Me.OnCNTVAL12Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL12 = value
					Me.SendPropertyChanged("CNTVAL12")
					Me.OnCNTVAL12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL13", DbType:="Float")>  _
		Public Property CNTVAL13() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL13
			End Get
			Set
				If (Me._CNTVAL13.Equals(value) = false) Then
					Me.OnCNTVAL13Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL13 = value
					Me.SendPropertyChanged("CNTVAL13")
					Me.OnCNTVAL13Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL14", DbType:="Float")>  _
		Public Property CNTVAL14() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL14
			End Get
			Set
				If (Me._CNTVAL14.Equals(value) = false) Then
					Me.OnCNTVAL14Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL14 = value
					Me.SendPropertyChanged("CNTVAL14")
					Me.OnCNTVAL14Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL15", DbType:="Float")>  _
		Public Property CNTVAL15() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL15
			End Get
			Set
				If (Me._CNTVAL15.Equals(value) = false) Then
					Me.OnCNTVAL15Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL15 = value
					Me.SendPropertyChanged("CNTVAL15")
					Me.OnCNTVAL15Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL16", DbType:="Float")>  _
		Public Property CNTVAL16() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL16
			End Get
			Set
				If (Me._CNTVAL16.Equals(value) = false) Then
					Me.OnCNTVAL16Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL16 = value
					Me.SendPropertyChanged("CNTVAL16")
					Me.OnCNTVAL16Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL17", DbType:="Float")>  _
		Public Property CNTVAL17() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL17
			End Get
			Set
				If (Me._CNTVAL17.Equals(value) = false) Then
					Me.OnCNTVAL17Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL17 = value
					Me.SendPropertyChanged("CNTVAL17")
					Me.OnCNTVAL17Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL18", DbType:="Float")>  _
		Public Property CNTVAL18() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL18
			End Get
			Set
				If (Me._CNTVAL18.Equals(value) = false) Then
					Me.OnCNTVAL18Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL18 = value
					Me.SendPropertyChanged("CNTVAL18")
					Me.OnCNTVAL18Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL19", DbType:="Float")>  _
		Public Property CNTVAL19() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL19
			End Get
			Set
				If (Me._CNTVAL19.Equals(value) = false) Then
					Me.OnCNTVAL19Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL19 = value
					Me.SendPropertyChanged("CNTVAL19")
					Me.OnCNTVAL19Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL20", DbType:="Float")>  _
		Public Property CNTVAL20() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL20
			End Get
			Set
				If (Me._CNTVAL20.Equals(value) = false) Then
					Me.OnCNTVAL20Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL20 = value
					Me.SendPropertyChanged("CNTVAL20")
					Me.OnCNTVAL20Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDFINDATA", Storage:="_TRDR1", ThisKey:="TRDR", OtherKey:="TRDR", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property TRDR1() As TRDR
			Get
				Return Me._TRDR1.Entity
			End Get
			Set
				Dim previousValue As TRDR = Me._TRDR1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDR1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDR1.Entity = Nothing
						previousValue.TRDFINDATAs.Remove(Me)
					End If
					Me._TRDR1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDFINDATAs.Add(Me)
						Me._TRDR = value.TRDR
					Else
						Me._TRDR = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("TRDR1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVCurBal")>  _
	Partial Public Class ccCVCurBal
		
		Private _COMPANY As Short
		
		Private _TRDR As Integer
		
		Private _pdb As System.Nullable(Of Double)
		
		Private _pcr As System.Nullable(Of Double)
		
		Private _pbal As System.Nullable(Of Double)
		
		Private _plturnover As System.Nullable(Of Double)
		
		Private _ptturnover As System.Nullable(Of Double)
		
		Private _MaxFiscPrd As System.Nullable(Of Short)
		
		Private _MaxPeriod As System.Nullable(Of Short)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me._COMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL")>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdb", DbType:="Float")>  _
		Public Property pdb() As System.Nullable(Of Double)
			Get
				Return Me._pdb
			End Get
			Set
				If (Me._pdb.Equals(value) = false) Then
					Me._pdb = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcr", DbType:="Float")>  _
		Public Property pcr() As System.Nullable(Of Double)
			Get
				Return Me._pcr
			End Get
			Set
				If (Me._pcr.Equals(value) = false) Then
					Me._pcr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pbal", DbType:="Float")>  _
		Public Property pbal() As System.Nullable(Of Double)
			Get
				Return Me._pbal
			End Get
			Set
				If (Me._pbal.Equals(value) = false) Then
					Me._pbal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_plturnover", DbType:="Float")>  _
		Public Property plturnover() As System.Nullable(Of Double)
			Get
				Return Me._plturnover
			End Get
			Set
				If (Me._plturnover.Equals(value) = false) Then
					Me._plturnover = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ptturnover", DbType:="Float")>  _
		Public Property ptturnover() As System.Nullable(Of Double)
			Get
				Return Me._ptturnover
			End Get
			Set
				If (Me._ptturnover.Equals(value) = false) Then
					Me._ptturnover = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxFiscPrd", DbType:="SmallInt")>  _
		Public Property MaxFiscPrd() As System.Nullable(Of Short)
			Get
				Return Me._MaxFiscPrd
			End Get
			Set
				If (Me._MaxFiscPrd.Equals(value) = false) Then
					Me._MaxFiscPrd = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxPeriod", DbType:="SmallInt")>  _
		Public Property MaxPeriod() As System.Nullable(Of Short)
			Get
				Return Me._MaxPeriod
			End Get
			Set
				If (Me._MaxPeriod.Equals(value) = false) Then
					Me._MaxPeriod = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVChequeOpen")>  _
	Partial Public Class ccCVChequeOpen
		
		Private _COMPANY As Short
		
		Private _SODTYPE As Short
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _TRDRPOSSESSOR As System.Nullable(Of Integer)
		
		Private _CHEQUE As Integer
		
		Private _CHEQUENUMBER As String
		
		Private _CODE As String
		
		Private _CRTDATE As System.Nullable(Of Date)
		
		Private _FINALDATE As Date
		
		Private _FPRMS As Short
		
		Private _CHEQUESTATES As Short
		
		Private _LCHEQUEVAL As Double
		
		Private _LCHEQUEBAL As Double
		
		Private _TRDRPUBLISHER As System.Nullable(Of Integer)
		
		Private _SODTYPEPOSSESSOR As System.Nullable(Of Short)
		
		Private _HOLDERNAME As String
		
		Private _SODTYPEPUBLISHER As Short
		
		Private _ISCANCEL As Short
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me._COMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me._SODTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRPOSSESSOR", DbType:="Int")>  _
		Public Property TRDRPOSSESSOR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRPOSSESSOR
			End Get
			Set
				If (Me._TRDRPOSSESSOR.Equals(value) = false) Then
					Me._TRDRPOSSESSOR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUE", DbType:="Int NOT NULL")>  _
		Public Property CHEQUE() As Integer
			Get
				Return Me._CHEQUE
			End Get
			Set
				If ((Me._CHEQUE = value)  _
							= false) Then
					Me._CHEQUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUENUMBER", DbType:="VarChar(40) NOT NULL", CanBeNull:=false)>  _
		Public Property CHEQUENUMBER() As String
			Get
				Return Me._CHEQUENUMBER
			End Get
			Set
				If (String.Equals(Me._CHEQUENUMBER, value) = false) Then
					Me._CHEQUENUMBER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRTDATE", DbType:="DateTime")>  _
		Public Property CRTDATE() As System.Nullable(Of Date)
			Get
				Return Me._CRTDATE
			End Get
			Set
				If (Me._CRTDATE.Equals(value) = false) Then
					Me._CRTDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINALDATE", DbType:="DateTime NOT NULL")>  _
		Public Property FINALDATE() As Date
			Get
				Return Me._FINALDATE
			End Get
			Set
				If ((Me._FINALDATE = value)  _
							= false) Then
					Me._FINALDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					Me._FPRMS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUESTATES", DbType:="SmallInt NOT NULL")>  _
		Public Property CHEQUESTATES() As Short
			Get
				Return Me._CHEQUESTATES
			End Get
			Set
				If ((Me._CHEQUESTATES = value)  _
							= false) Then
					Me._CHEQUESTATES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCHEQUEVAL", DbType:="Float NOT NULL")>  _
		Public Property LCHEQUEVAL() As Double
			Get
				Return Me._LCHEQUEVAL
			End Get
			Set
				If ((Me._LCHEQUEVAL = value)  _
							= false) Then
					Me._LCHEQUEVAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCHEQUEBAL", DbType:="Float NOT NULL")>  _
		Public Property LCHEQUEBAL() As Double
			Get
				Return Me._LCHEQUEBAL
			End Get
			Set
				If ((Me._LCHEQUEBAL = value)  _
							= false) Then
					Me._LCHEQUEBAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRPUBLISHER", DbType:="Int")>  _
		Public Property TRDRPUBLISHER() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRPUBLISHER
			End Get
			Set
				If (Me._TRDRPUBLISHER.Equals(value) = false) Then
					Me._TRDRPUBLISHER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPEPOSSESSOR", DbType:="SmallInt")>  _
		Public Property SODTYPEPOSSESSOR() As System.Nullable(Of Short)
			Get
				Return Me._SODTYPEPOSSESSOR
			End Get
			Set
				If (Me._SODTYPEPOSSESSOR.Equals(value) = false) Then
					Me._SODTYPEPOSSESSOR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLDERNAME", DbType:="VarChar(64)")>  _
		Public Property HOLDERNAME() As String
			Get
				Return Me._HOLDERNAME
			End Get
			Set
				If (String.Equals(Me._HOLDERNAME, value) = false) Then
					Me._HOLDERNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPEPUBLISHER", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPEPUBLISHER() As Short
			Get
				Return Me._SODTYPEPUBLISHER
			End Get
			Set
				If ((Me._SODTYPEPUBLISHER = value)  _
							= false) Then
					Me._SODTYPEPUBLISHER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCANCEL", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCANCEL() As Short
			Get
				Return Me._ISCANCEL
			End Get
			Set
				If ((Me._ISCANCEL = value)  _
							= false) Then
					Me._ISCANCEL = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRDBALSHEET")>  _
	Partial Public Class TRDBALSHEET
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _FISCPRD As Short
		
		Private _PERIOD As Short
		
		Private _TRDR As Integer
		
		Private _LDEBIT As Double
		
		Private _LCREDIT As Double
		
		Private _LTURNOVR As Double
		
		Private _TDEBIT As Double
		
		Private _TCREDIT As Double
		
		Private _TTURNOVR As Double
		
		Private _CNTVAL01 As System.Nullable(Of Double)
		
		Private _CNTVAL02 As System.Nullable(Of Double)
		
		Private _CNTVAL03 As System.Nullable(Of Double)
		
		Private _CNTVAL04 As System.Nullable(Of Double)
		
		Private _CNTVAL05 As System.Nullable(Of Double)
		
		Private _CNTVAL06 As System.Nullable(Of Double)
		
		Private _CNTVAL07 As System.Nullable(Of Double)
		
		Private _CNTVAL08 As System.Nullable(Of Double)
		
		Private _CNTVAL09 As System.Nullable(Of Double)
		
		Private _CNTVAL10 As System.Nullable(Of Double)
		
		Private _CNTVAL11 As System.Nullable(Of Double)
		
		Private _CNTVAL12 As System.Nullable(Of Double)
		
		Private _CNTVAL13 As System.Nullable(Of Double)
		
		Private _CNTVAL14 As System.Nullable(Of Double)
		
		Private _CNTVAL15 As System.Nullable(Of Double)
		
		Private _CNTVAL16 As System.Nullable(Of Double)
		
		Private _CNTVAL17 As System.Nullable(Of Double)
		
		Private _CNTVAL18 As System.Nullable(Of Double)
		
		Private _CNTVAL19 As System.Nullable(Of Double)
		
		Private _CNTVAL20 As System.Nullable(Of Double)
		
		Private _TRDR1 As EntityRef(Of TRDR)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnFISCPRDChanging(value As Short)
    End Sub
    Partial Private Sub OnFISCPRDChanged()
    End Sub
    Partial Private Sub OnPERIODChanging(value As Short)
    End Sub
    Partial Private Sub OnPERIODChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnLDEBITChanging(value As Double)
    End Sub
    Partial Private Sub OnLDEBITChanged()
    End Sub
    Partial Private Sub OnLCREDITChanging(value As Double)
    End Sub
    Partial Private Sub OnLCREDITChanged()
    End Sub
    Partial Private Sub OnLTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnLTURNOVRChanged()
    End Sub
    Partial Private Sub OnTDEBITChanging(value As Double)
    End Sub
    Partial Private Sub OnTDEBITChanged()
    End Sub
    Partial Private Sub OnTCREDITChanging(value As Double)
    End Sub
    Partial Private Sub OnTCREDITChanged()
    End Sub
    Partial Private Sub OnTTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnTTURNOVRChanged()
    End Sub
    Partial Private Sub OnCNTVAL01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL01Changed()
    End Sub
    Partial Private Sub OnCNTVAL02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL02Changed()
    End Sub
    Partial Private Sub OnCNTVAL03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL03Changed()
    End Sub
    Partial Private Sub OnCNTVAL04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL04Changed()
    End Sub
    Partial Private Sub OnCNTVAL05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL05Changed()
    End Sub
    Partial Private Sub OnCNTVAL06Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL06Changed()
    End Sub
    Partial Private Sub OnCNTVAL07Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL07Changed()
    End Sub
    Partial Private Sub OnCNTVAL08Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL08Changed()
    End Sub
    Partial Private Sub OnCNTVAL09Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL09Changed()
    End Sub
    Partial Private Sub OnCNTVAL10Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL10Changed()
    End Sub
    Partial Private Sub OnCNTVAL11Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL11Changed()
    End Sub
    Partial Private Sub OnCNTVAL12Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL12Changed()
    End Sub
    Partial Private Sub OnCNTVAL13Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL13Changed()
    End Sub
    Partial Private Sub OnCNTVAL14Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL14Changed()
    End Sub
    Partial Private Sub OnCNTVAL15Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL15Changed()
    End Sub
    Partial Private Sub OnCNTVAL16Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL16Changed()
    End Sub
    Partial Private Sub OnCNTVAL17Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL17Changed()
    End Sub
    Partial Private Sub OnCNTVAL18Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL18Changed()
    End Sub
    Partial Private Sub OnCNTVAL19Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL19Changed()
    End Sub
    Partial Private Sub OnCNTVAL20Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCNTVAL20Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._TRDR1 = CType(Nothing, EntityRef(Of TRDR))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FISCPRD", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FISCPRD() As Short
			Get
				Return Me._FISCPRD
			End Get
			Set
				If ((Me._FISCPRD = value)  _
							= false) Then
					Me.OnFISCPRDChanging(value)
					Me.SendPropertyChanging
					Me._FISCPRD = value
					Me.SendPropertyChanged("FISCPRD")
					Me.OnFISCPRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property PERIOD() As Short
			Get
				Return Me._PERIOD
			End Get
			Set
				If ((Me._PERIOD = value)  _
							= false) Then
					Me.OnPERIODChanging(value)
					Me.SendPropertyChanging
					Me._PERIOD = value
					Me.SendPropertyChanged("PERIOD")
					Me.OnPERIODChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TRDR() As Integer
			Get
				Return Me._TRDR
			End Get
			Set
				If ((Me._TRDR = value)  _
							= false) Then
					If Me._TRDR1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDEBIT", DbType:="Float NOT NULL")>  _
		Public Property LDEBIT() As Double
			Get
				Return Me._LDEBIT
			End Get
			Set
				If ((Me._LDEBIT = value)  _
							= false) Then
					Me.OnLDEBITChanging(value)
					Me.SendPropertyChanging
					Me._LDEBIT = value
					Me.SendPropertyChanged("LDEBIT")
					Me.OnLDEBITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCREDIT", DbType:="Float NOT NULL")>  _
		Public Property LCREDIT() As Double
			Get
				Return Me._LCREDIT
			End Get
			Set
				If ((Me._LCREDIT = value)  _
							= false) Then
					Me.OnLCREDITChanging(value)
					Me.SendPropertyChanging
					Me._LCREDIT = value
					Me.SendPropertyChanged("LCREDIT")
					Me.OnLCREDITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property LTURNOVR() As Double
			Get
				Return Me._LTURNOVR
			End Get
			Set
				If ((Me._LTURNOVR = value)  _
							= false) Then
					Me.OnLTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._LTURNOVR = value
					Me.SendPropertyChanged("LTURNOVR")
					Me.OnLTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDEBIT", DbType:="Float NOT NULL")>  _
		Public Property TDEBIT() As Double
			Get
				Return Me._TDEBIT
			End Get
			Set
				If ((Me._TDEBIT = value)  _
							= false) Then
					Me.OnTDEBITChanging(value)
					Me.SendPropertyChanging
					Me._TDEBIT = value
					Me.SendPropertyChanged("TDEBIT")
					Me.OnTDEBITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TCREDIT", DbType:="Float NOT NULL")>  _
		Public Property TCREDIT() As Double
			Get
				Return Me._TCREDIT
			End Get
			Set
				If ((Me._TCREDIT = value)  _
							= false) Then
					Me.OnTCREDITChanging(value)
					Me.SendPropertyChanging
					Me._TCREDIT = value
					Me.SendPropertyChanged("TCREDIT")
					Me.OnTCREDITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property TTURNOVR() As Double
			Get
				Return Me._TTURNOVR
			End Get
			Set
				If ((Me._TTURNOVR = value)  _
							= false) Then
					Me.OnTTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._TTURNOVR = value
					Me.SendPropertyChanged("TTURNOVR")
					Me.OnTTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL01", DbType:="Float")>  _
		Public Property CNTVAL01() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL01
			End Get
			Set
				If (Me._CNTVAL01.Equals(value) = false) Then
					Me.OnCNTVAL01Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL01 = value
					Me.SendPropertyChanged("CNTVAL01")
					Me.OnCNTVAL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL02", DbType:="Float")>  _
		Public Property CNTVAL02() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL02
			End Get
			Set
				If (Me._CNTVAL02.Equals(value) = false) Then
					Me.OnCNTVAL02Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL02 = value
					Me.SendPropertyChanged("CNTVAL02")
					Me.OnCNTVAL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL03", DbType:="Float")>  _
		Public Property CNTVAL03() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL03
			End Get
			Set
				If (Me._CNTVAL03.Equals(value) = false) Then
					Me.OnCNTVAL03Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL03 = value
					Me.SendPropertyChanged("CNTVAL03")
					Me.OnCNTVAL03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL04", DbType:="Float")>  _
		Public Property CNTVAL04() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL04
			End Get
			Set
				If (Me._CNTVAL04.Equals(value) = false) Then
					Me.OnCNTVAL04Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL04 = value
					Me.SendPropertyChanged("CNTVAL04")
					Me.OnCNTVAL04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL05", DbType:="Float")>  _
		Public Property CNTVAL05() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL05
			End Get
			Set
				If (Me._CNTVAL05.Equals(value) = false) Then
					Me.OnCNTVAL05Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL05 = value
					Me.SendPropertyChanged("CNTVAL05")
					Me.OnCNTVAL05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL06", DbType:="Float")>  _
		Public Property CNTVAL06() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL06
			End Get
			Set
				If (Me._CNTVAL06.Equals(value) = false) Then
					Me.OnCNTVAL06Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL06 = value
					Me.SendPropertyChanged("CNTVAL06")
					Me.OnCNTVAL06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL07", DbType:="Float")>  _
		Public Property CNTVAL07() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL07
			End Get
			Set
				If (Me._CNTVAL07.Equals(value) = false) Then
					Me.OnCNTVAL07Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL07 = value
					Me.SendPropertyChanged("CNTVAL07")
					Me.OnCNTVAL07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL08", DbType:="Float")>  _
		Public Property CNTVAL08() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL08
			End Get
			Set
				If (Me._CNTVAL08.Equals(value) = false) Then
					Me.OnCNTVAL08Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL08 = value
					Me.SendPropertyChanged("CNTVAL08")
					Me.OnCNTVAL08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL09", DbType:="Float")>  _
		Public Property CNTVAL09() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL09
			End Get
			Set
				If (Me._CNTVAL09.Equals(value) = false) Then
					Me.OnCNTVAL09Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL09 = value
					Me.SendPropertyChanged("CNTVAL09")
					Me.OnCNTVAL09Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL10", DbType:="Float")>  _
		Public Property CNTVAL10() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL10
			End Get
			Set
				If (Me._CNTVAL10.Equals(value) = false) Then
					Me.OnCNTVAL10Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL10 = value
					Me.SendPropertyChanged("CNTVAL10")
					Me.OnCNTVAL10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL11", DbType:="Float")>  _
		Public Property CNTVAL11() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL11
			End Get
			Set
				If (Me._CNTVAL11.Equals(value) = false) Then
					Me.OnCNTVAL11Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL11 = value
					Me.SendPropertyChanged("CNTVAL11")
					Me.OnCNTVAL11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL12", DbType:="Float")>  _
		Public Property CNTVAL12() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL12
			End Get
			Set
				If (Me._CNTVAL12.Equals(value) = false) Then
					Me.OnCNTVAL12Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL12 = value
					Me.SendPropertyChanged("CNTVAL12")
					Me.OnCNTVAL12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL13", DbType:="Float")>  _
		Public Property CNTVAL13() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL13
			End Get
			Set
				If (Me._CNTVAL13.Equals(value) = false) Then
					Me.OnCNTVAL13Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL13 = value
					Me.SendPropertyChanged("CNTVAL13")
					Me.OnCNTVAL13Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL14", DbType:="Float")>  _
		Public Property CNTVAL14() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL14
			End Get
			Set
				If (Me._CNTVAL14.Equals(value) = false) Then
					Me.OnCNTVAL14Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL14 = value
					Me.SendPropertyChanged("CNTVAL14")
					Me.OnCNTVAL14Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL15", DbType:="Float")>  _
		Public Property CNTVAL15() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL15
			End Get
			Set
				If (Me._CNTVAL15.Equals(value) = false) Then
					Me.OnCNTVAL15Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL15 = value
					Me.SendPropertyChanged("CNTVAL15")
					Me.OnCNTVAL15Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL16", DbType:="Float")>  _
		Public Property CNTVAL16() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL16
			End Get
			Set
				If (Me._CNTVAL16.Equals(value) = false) Then
					Me.OnCNTVAL16Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL16 = value
					Me.SendPropertyChanged("CNTVAL16")
					Me.OnCNTVAL16Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL17", DbType:="Float")>  _
		Public Property CNTVAL17() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL17
			End Get
			Set
				If (Me._CNTVAL17.Equals(value) = false) Then
					Me.OnCNTVAL17Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL17 = value
					Me.SendPropertyChanged("CNTVAL17")
					Me.OnCNTVAL17Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL18", DbType:="Float")>  _
		Public Property CNTVAL18() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL18
			End Get
			Set
				If (Me._CNTVAL18.Equals(value) = false) Then
					Me.OnCNTVAL18Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL18 = value
					Me.SendPropertyChanged("CNTVAL18")
					Me.OnCNTVAL18Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL19", DbType:="Float")>  _
		Public Property CNTVAL19() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL19
			End Get
			Set
				If (Me._CNTVAL19.Equals(value) = false) Then
					Me.OnCNTVAL19Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL19 = value
					Me.SendPropertyChanged("CNTVAL19")
					Me.OnCNTVAL19Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTVAL20", DbType:="Float")>  _
		Public Property CNTVAL20() As System.Nullable(Of Double)
			Get
				Return Me._CNTVAL20
			End Get
			Set
				If (Me._CNTVAL20.Equals(value) = false) Then
					Me.OnCNTVAL20Changing(value)
					Me.SendPropertyChanging
					Me._CNTVAL20 = value
					Me.SendPropertyChanged("CNTVAL20")
					Me.OnCNTVAL20Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDBALSHEET", Storage:="_TRDR1", ThisKey:="TRDR", OtherKey:="TRDR", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property TRDR1() As TRDR
			Get
				Return Me._TRDR1.Entity
			End Get
			Set
				Dim previousValue As TRDR = Me._TRDR1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDR1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDR1.Entity = Nothing
						previousValue.TRDBALSHEETs.Remove(Me)
					End If
					Me._TRDR1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDBALSHEETs.Add(Me)
						Me._TRDR = value.TRDR
					Else
						Me._TRDR = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("TRDR1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVPriceListLines")>  _
	Partial Public Class ccCVPriceListLine
		
		Private _cccPriceListLines As Integer
		
		Private _cccPriceList As System.Nullable(Of Integer)
		
		Private _Fromdate As System.Nullable(Of Date)
		
		Private _Finaldate As System.Nullable(Of Date)
		
		Private _Whouse As System.Nullable(Of Integer)
		
		Private _whNAME As String
		
		Private _COUNTRY As System.Nullable(Of Short)
		
		Private _District1 As System.Nullable(Of Integer)
		
		Private _diNAME As String
		
		Private _Mtrl As System.Nullable(Of Integer)
		
		Private _mCODE As String
		
		Private _mNAME As String
		
		Private _Trdr As System.Nullable(Of Integer)
		
		Private _trCODE As String
		
		Private _trNAME As String
		
		Private _Trdrbranch As System.Nullable(Of Integer)
		
		Private _trbCODE As String
		
		Private _trbNAME As String
		
		Private _trbDISTRICT1 As System.Nullable(Of Short)
		
		Private _dibCODE As String
		
		Private _dibNAME As String
		
		Private _Shipment As System.Nullable(Of Integer)
		
		Private _shCODE As String
		
		Private _shNAME As String
		
		Private _Price As System.Nullable(Of Double)
		
		Private _Disc1prc As System.Nullable(Of Double)
		
		Private _Disc1val As System.Nullable(Of Double)
		
		Private _qty1 As System.Nullable(Of Double)
		
		Private _cccSumGroup As System.Nullable(Of Integer)
		
		Private _sgrName As String
		
		Private _trdbusiness As System.Nullable(Of Integer)
		
		Private _createdOn As System.Nullable(Of Date)
		
		Private _createdBy As System.Nullable(Of Integer)
		
		Private _modifiedOn As System.Nullable(Of Date)
		
		Private _modifiedBy As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccPriceListLines", DbType:="Int NOT NULL")>  _
		Public Property cccPriceListLines() As Integer
			Get
				Return Me._cccPriceListLines
			End Get
			Set
				If ((Me._cccPriceListLines = value)  _
							= false) Then
					Me._cccPriceListLines = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccPriceList", DbType:="Int")>  _
		Public Property cccPriceList() As System.Nullable(Of Integer)
			Get
				Return Me._cccPriceList
			End Get
			Set
				If (Me._cccPriceList.Equals(value) = false) Then
					Me._cccPriceList = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fromdate", DbType:="DateTime")>  _
		Public Property Fromdate() As System.Nullable(Of Date)
			Get
				Return Me._Fromdate
			End Get
			Set
				If (Me._Fromdate.Equals(value) = false) Then
					Me._Fromdate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Finaldate", DbType:="DateTime")>  _
		Public Property Finaldate() As System.Nullable(Of Date)
			Get
				Return Me._Finaldate
			End Get
			Set
				If (Me._Finaldate.Equals(value) = false) Then
					Me._Finaldate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Whouse", DbType:="Int")>  _
		Public Property Whouse() As System.Nullable(Of Integer)
			Get
				Return Me._Whouse
			End Get
			Set
				If (Me._Whouse.Equals(value) = false) Then
					Me._Whouse = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_whNAME", DbType:="VarChar(64)")>  _
		Public Property whNAME() As String
			Get
				Return Me._whNAME
			End Get
			Set
				If (String.Equals(Me._whNAME, value) = false) Then
					Me._whNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt")>  _
		Public Property COUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._COUNTRY
			End Get
			Set
				If (Me._COUNTRY.Equals(value) = false) Then
					Me._COUNTRY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_District1", DbType:="Int")>  _
		Public Property District1() As System.Nullable(Of Integer)
			Get
				Return Me._District1
			End Get
			Set
				If (Me._District1.Equals(value) = false) Then
					Me._District1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diNAME", DbType:="VarChar(50)")>  _
		Public Property diNAME() As String
			Get
				Return Me._diNAME
			End Get
			Set
				If (String.Equals(Me._diNAME, value) = false) Then
					Me._diNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mtrl", DbType:="Int")>  _
		Public Property Mtrl() As System.Nullable(Of Integer)
			Get
				Return Me._Mtrl
			End Get
			Set
				If (Me._Mtrl.Equals(value) = false) Then
					Me._Mtrl = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mCODE", DbType:="VarChar(25)")>  _
		Public Property mCODE() As String
			Get
				Return Me._mCODE
			End Get
			Set
				If (String.Equals(Me._mCODE, value) = false) Then
					Me._mCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mNAME", DbType:="VarChar(128)")>  _
		Public Property mNAME() As String
			Get
				Return Me._mNAME
			End Get
			Set
				If (String.Equals(Me._mNAME, value) = false) Then
					Me._mNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trdr", DbType:="Int")>  _
		Public Property Trdr() As System.Nullable(Of Integer)
			Get
				Return Me._Trdr
			End Get
			Set
				If (Me._Trdr.Equals(value) = false) Then
					Me._Trdr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trCODE", DbType:="VarChar(25)")>  _
		Public Property trCODE() As String
			Get
				Return Me._trCODE
			End Get
			Set
				If (String.Equals(Me._trCODE, value) = false) Then
					Me._trCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trNAME", DbType:="VarChar(128)")>  _
		Public Property trNAME() As String
			Get
				Return Me._trNAME
			End Get
			Set
				If (String.Equals(Me._trNAME, value) = false) Then
					Me._trNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trdrbranch", DbType:="Int")>  _
		Public Property Trdrbranch() As System.Nullable(Of Integer)
			Get
				Return Me._Trdrbranch
			End Get
			Set
				If (Me._Trdrbranch.Equals(value) = false) Then
					Me._Trdrbranch = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trbCODE", DbType:="VarChar(25)")>  _
		Public Property trbCODE() As String
			Get
				Return Me._trbCODE
			End Get
			Set
				If (String.Equals(Me._trbCODE, value) = false) Then
					Me._trbCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trbNAME", DbType:="VarChar(64)")>  _
		Public Property trbNAME() As String
			Get
				Return Me._trbNAME
			End Get
			Set
				If (String.Equals(Me._trbNAME, value) = false) Then
					Me._trbNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trbDISTRICT1", DbType:="SmallInt")>  _
		Public Property trbDISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._trbDISTRICT1
			End Get
			Set
				If (Me._trbDISTRICT1.Equals(value) = false) Then
					Me._trbDISTRICT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dibCODE", DbType:="VarChar(10)")>  _
		Public Property dibCODE() As String
			Get
				Return Me._dibCODE
			End Get
			Set
				If (String.Equals(Me._dibCODE, value) = false) Then
					Me._dibCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dibNAME", DbType:="VarChar(50)")>  _
		Public Property dibNAME() As String
			Get
				Return Me._dibNAME
			End Get
			Set
				If (String.Equals(Me._dibNAME, value) = false) Then
					Me._dibNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Shipment", DbType:="Int")>  _
		Public Property Shipment() As System.Nullable(Of Integer)
			Get
				Return Me._Shipment
			End Get
			Set
				If (Me._Shipment.Equals(value) = false) Then
					Me._Shipment = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shCODE", DbType:="VarChar(10)")>  _
		Public Property shCODE() As String
			Get
				Return Me._shCODE
			End Get
			Set
				If (String.Equals(Me._shCODE, value) = false) Then
					Me._shCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shNAME", DbType:="VarChar(50)")>  _
		Public Property shNAME() As String
			Get
				Return Me._shNAME
			End Get
			Set
				If (String.Equals(Me._shNAME, value) = false) Then
					Me._shNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Float")>  _
		Public Property Price() As System.Nullable(Of Double)
			Get
				Return Me._Price
			End Get
			Set
				If (Me._Price.Equals(value) = false) Then
					Me._Price = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disc1prc", DbType:="Float")>  _
		Public Property Disc1prc() As System.Nullable(Of Double)
			Get
				Return Me._Disc1prc
			End Get
			Set
				If (Me._Disc1prc.Equals(value) = false) Then
					Me._Disc1prc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disc1val", DbType:="Float")>  _
		Public Property Disc1val() As System.Nullable(Of Double)
			Get
				Return Me._Disc1val
			End Get
			Set
				If (Me._Disc1val.Equals(value) = false) Then
					Me._Disc1val = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty1", DbType:="Float")>  _
		Public Property qty1() As System.Nullable(Of Double)
			Get
				Return Me._qty1
			End Get
			Set
				If (Me._qty1.Equals(value) = false) Then
					Me._qty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccSumGroup", DbType:="Int")>  _
		Public Property cccSumGroup() As System.Nullable(Of Integer)
			Get
				Return Me._cccSumGroup
			End Get
			Set
				If (Me._cccSumGroup.Equals(value) = false) Then
					Me._cccSumGroup = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sgrName", DbType:="VarChar(64)")>  _
		Public Property sgrName() As String
			Get
				Return Me._sgrName
			End Get
			Set
				If (String.Equals(Me._sgrName, value) = false) Then
					Me._sgrName = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdbusiness", DbType:="Int")>  _
		Public Property trdbusiness() As System.Nullable(Of Integer)
			Get
				Return Me._trdbusiness
			End Get
			Set
				If (Me._trdbusiness.Equals(value) = false) Then
					Me._trdbusiness = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_createdOn", DbType:="DateTime")>  _
		Public Property createdOn() As System.Nullable(Of Date)
			Get
				Return Me._createdOn
			End Get
			Set
				If (Me._createdOn.Equals(value) = false) Then
					Me._createdOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_createdBy", DbType:="Int")>  _
		Public Property createdBy() As System.Nullable(Of Integer)
			Get
				Return Me._createdBy
			End Get
			Set
				If (Me._createdBy.Equals(value) = false) Then
					Me._createdBy = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifiedOn", DbType:="DateTime")>  _
		Public Property modifiedOn() As System.Nullable(Of Date)
			Get
				Return Me._modifiedOn
			End Get
			Set
				If (Me._modifiedOn.Equals(value) = false) Then
					Me._modifiedOn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifiedBy", DbType:="Int")>  _
		Public Property modifiedBy() As System.Nullable(Of Integer)
			Get
				Return Me._modifiedBy
			End Get
			Set
				If (Me._modifiedBy.Equals(value) = false) Then
					Me._modifiedBy = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TEMPLATES")>  _
	Partial Public Class TEMPLATE
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SOSOURCE As Integer
		
		Private _TEMPLATES As Short
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
		Private _AUTOPAPER As Short
		
		Private _SIGNHOOK As System.Nullable(Of Short)
		
		Private _FORMTYPE As Short
		
		Private _TAXDEVICE As System.Nullable(Of Short)
		
		Private _EMAILFORMAT As Short
		
		Private _EMAILAUTOPRN As Short
		
		Private _EMAILAUTOXDOC As Short
		
		Private _EMAILTO As String
		
		Private _EMAILCC As String
		
		Private _EMAILBCC As String
		
		Private _EMAILSUB As String
		
		Private _EMAILBODY As String
		
		Private _SOFILENAME As String
		
		Private _SOPATHFILE As String
		
		Private _CPMPASSWORD As String
		
		Private _PRSNPASSWORD As String
		
		Private _EMAILACCOUNTS As String
		
		Private _SODATA As System.Data.Linq.Binary
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnTEMPLATESChanging(value As Short)
    End Sub
    Partial Private Sub OnTEMPLATESChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnAUTOPAPERChanging(value As Short)
    End Sub
    Partial Private Sub OnAUTOPAPERChanged()
    End Sub
    Partial Private Sub OnSIGNHOOKChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSIGNHOOKChanged()
    End Sub
    Partial Private Sub OnFORMTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnFORMTYPEChanged()
    End Sub
    Partial Private Sub OnTAXDEVICEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTAXDEVICEChanged()
    End Sub
    Partial Private Sub OnEMAILFORMATChanging(value As Short)
    End Sub
    Partial Private Sub OnEMAILFORMATChanged()
    End Sub
    Partial Private Sub OnEMAILAUTOPRNChanging(value As Short)
    End Sub
    Partial Private Sub OnEMAILAUTOPRNChanged()
    End Sub
    Partial Private Sub OnEMAILAUTOXDOCChanging(value As Short)
    End Sub
    Partial Private Sub OnEMAILAUTOXDOCChanged()
    End Sub
    Partial Private Sub OnEMAILTOChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILTOChanged()
    End Sub
    Partial Private Sub OnEMAILCCChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILCCChanged()
    End Sub
    Partial Private Sub OnEMAILBCCChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILBCCChanged()
    End Sub
    Partial Private Sub OnEMAILSUBChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILSUBChanged()
    End Sub
    Partial Private Sub OnEMAILBODYChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILBODYChanged()
    End Sub
    Partial Private Sub OnSOFILENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSOFILENAMEChanged()
    End Sub
    Partial Private Sub OnSOPATHFILEChanging(value As String)
    End Sub
    Partial Private Sub OnSOPATHFILEChanged()
    End Sub
    Partial Private Sub OnCPMPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnCPMPASSWORDChanged()
    End Sub
    Partial Private Sub OnPRSNPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnPRSNPASSWORDChanged()
    End Sub
    Partial Private Sub OnEMAILACCOUNTSChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILACCOUNTSChanged()
    End Sub
    Partial Private Sub OnSODATAChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSODATAChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATES", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TEMPLATES() As Short
			Get
				Return Me._TEMPLATES
			End Get
			Set
				If ((Me._TEMPLATES = value)  _
							= false) Then
					Me.OnTEMPLATESChanging(value)
					Me.SendPropertyChanging
					Me._TEMPLATES = value
					Me.SendPropertyChanged("TEMPLATES")
					Me.OnTEMPLATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64)")>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTOPAPER", DbType:="SmallInt NOT NULL")>  _
		Public Property AUTOPAPER() As Short
			Get
				Return Me._AUTOPAPER
			End Get
			Set
				If ((Me._AUTOPAPER = value)  _
							= false) Then
					Me.OnAUTOPAPERChanging(value)
					Me.SendPropertyChanging
					Me._AUTOPAPER = value
					Me.SendPropertyChanged("AUTOPAPER")
					Me.OnAUTOPAPERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGNHOOK", DbType:="SmallInt")>  _
		Public Property SIGNHOOK() As System.Nullable(Of Short)
			Get
				Return Me._SIGNHOOK
			End Get
			Set
				If (Me._SIGNHOOK.Equals(value) = false) Then
					Me.OnSIGNHOOKChanging(value)
					Me.SendPropertyChanging
					Me._SIGNHOOK = value
					Me.SendPropertyChanged("SIGNHOOK")
					Me.OnSIGNHOOKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property FORMTYPE() As Short
			Get
				Return Me._FORMTYPE
			End Get
			Set
				If ((Me._FORMTYPE = value)  _
							= false) Then
					Me.OnFORMTYPEChanging(value)
					Me.SendPropertyChanging
					Me._FORMTYPE = value
					Me.SendPropertyChanged("FORMTYPE")
					Me.OnFORMTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAXDEVICE", DbType:="SmallInt")>  _
		Public Property TAXDEVICE() As System.Nullable(Of Short)
			Get
				Return Me._TAXDEVICE
			End Get
			Set
				If (Me._TAXDEVICE.Equals(value) = false) Then
					Me.OnTAXDEVICEChanging(value)
					Me.SendPropertyChanging
					Me._TAXDEVICE = value
					Me.SendPropertyChanged("TAXDEVICE")
					Me.OnTAXDEVICEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILFORMAT", DbType:="SmallInt NOT NULL")>  _
		Public Property EMAILFORMAT() As Short
			Get
				Return Me._EMAILFORMAT
			End Get
			Set
				If ((Me._EMAILFORMAT = value)  _
							= false) Then
					Me.OnEMAILFORMATChanging(value)
					Me.SendPropertyChanging
					Me._EMAILFORMAT = value
					Me.SendPropertyChanged("EMAILFORMAT")
					Me.OnEMAILFORMATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILAUTOPRN", DbType:="SmallInt NOT NULL")>  _
		Public Property EMAILAUTOPRN() As Short
			Get
				Return Me._EMAILAUTOPRN
			End Get
			Set
				If ((Me._EMAILAUTOPRN = value)  _
							= false) Then
					Me.OnEMAILAUTOPRNChanging(value)
					Me.SendPropertyChanging
					Me._EMAILAUTOPRN = value
					Me.SendPropertyChanged("EMAILAUTOPRN")
					Me.OnEMAILAUTOPRNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILAUTOXDOC", DbType:="SmallInt NOT NULL")>  _
		Public Property EMAILAUTOXDOC() As Short
			Get
				Return Me._EMAILAUTOXDOC
			End Get
			Set
				If ((Me._EMAILAUTOXDOC = value)  _
							= false) Then
					Me.OnEMAILAUTOXDOCChanging(value)
					Me.SendPropertyChanging
					Me._EMAILAUTOXDOC = value
					Me.SendPropertyChanged("EMAILAUTOXDOC")
					Me.OnEMAILAUTOXDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILTO", DbType:="VarChar(255)")>  _
		Public Property EMAILTO() As String
			Get
				Return Me._EMAILTO
			End Get
			Set
				If (String.Equals(Me._EMAILTO, value) = false) Then
					Me.OnEMAILTOChanging(value)
					Me.SendPropertyChanging
					Me._EMAILTO = value
					Me.SendPropertyChanged("EMAILTO")
					Me.OnEMAILTOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILCC", DbType:="VarChar(255)")>  _
		Public Property EMAILCC() As String
			Get
				Return Me._EMAILCC
			End Get
			Set
				If (String.Equals(Me._EMAILCC, value) = false) Then
					Me.OnEMAILCCChanging(value)
					Me.SendPropertyChanging
					Me._EMAILCC = value
					Me.SendPropertyChanged("EMAILCC")
					Me.OnEMAILCCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILBCC", DbType:="VarChar(255)")>  _
		Public Property EMAILBCC() As String
			Get
				Return Me._EMAILBCC
			End Get
			Set
				If (String.Equals(Me._EMAILBCC, value) = false) Then
					Me.OnEMAILBCCChanging(value)
					Me.SendPropertyChanging
					Me._EMAILBCC = value
					Me.SendPropertyChanged("EMAILBCC")
					Me.OnEMAILBCCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILSUB", DbType:="VarChar(255)")>  _
		Public Property EMAILSUB() As String
			Get
				Return Me._EMAILSUB
			End Get
			Set
				If (String.Equals(Me._EMAILSUB, value) = false) Then
					Me.OnEMAILSUBChanging(value)
					Me.SendPropertyChanging
					Me._EMAILSUB = value
					Me.SendPropertyChanged("EMAILSUB")
					Me.OnEMAILSUBChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILBODY", DbType:="VarChar(255)")>  _
		Public Property EMAILBODY() As String
			Get
				Return Me._EMAILBODY
			End Get
			Set
				If (String.Equals(Me._EMAILBODY, value) = false) Then
					Me.OnEMAILBODYChanging(value)
					Me.SendPropertyChanging
					Me._EMAILBODY = value
					Me.SendPropertyChanged("EMAILBODY")
					Me.OnEMAILBODYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOFILENAME", DbType:="VarChar(255)")>  _
		Public Property SOFILENAME() As String
			Get
				Return Me._SOFILENAME
			End Get
			Set
				If (String.Equals(Me._SOFILENAME, value) = false) Then
					Me.OnSOFILENAMEChanging(value)
					Me.SendPropertyChanging
					Me._SOFILENAME = value
					Me.SendPropertyChanged("SOFILENAME")
					Me.OnSOFILENAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPATHFILE", DbType:="VarChar(255)")>  _
		Public Property SOPATHFILE() As String
			Get
				Return Me._SOPATHFILE
			End Get
			Set
				If (String.Equals(Me._SOPATHFILE, value) = false) Then
					Me.OnSOPATHFILEChanging(value)
					Me.SendPropertyChanging
					Me._SOPATHFILE = value
					Me.SendPropertyChanged("SOPATHFILE")
					Me.OnSOPATHFILEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPMPASSWORD", DbType:="VarChar(255)")>  _
		Public Property CPMPASSWORD() As String
			Get
				Return Me._CPMPASSWORD
			End Get
			Set
				If (String.Equals(Me._CPMPASSWORD, value) = false) Then
					Me.OnCPMPASSWORDChanging(value)
					Me.SendPropertyChanging
					Me._CPMPASSWORD = value
					Me.SendPropertyChanged("CPMPASSWORD")
					Me.OnCPMPASSWORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSNPASSWORD", DbType:="VarChar(255)")>  _
		Public Property PRSNPASSWORD() As String
			Get
				Return Me._PRSNPASSWORD
			End Get
			Set
				If (String.Equals(Me._PRSNPASSWORD, value) = false) Then
					Me.OnPRSNPASSWORDChanging(value)
					Me.SendPropertyChanging
					Me._PRSNPASSWORD = value
					Me.SendPropertyChanged("PRSNPASSWORD")
					Me.OnPRSNPASSWORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILACCOUNTS", DbType:="VarChar(64)")>  _
		Public Property EMAILACCOUNTS() As String
			Get
				Return Me._EMAILACCOUNTS
			End Get
			Set
				If (String.Equals(Me._EMAILACCOUNTS, value) = false) Then
					Me.OnEMAILACCOUNTSChanging(value)
					Me.SendPropertyChanging
					Me._EMAILACCOUNTS = value
					Me.SendPropertyChanged("EMAILACCOUNTS")
					Me.OnEMAILACCOUNTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODATA", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property SODATA() As System.Data.Linq.Binary
			Get
				Return Me._SODATA
			End Get
			Set
				If (Object.Equals(Me._SODATA, value) = false) Then
					Me.OnSODATAChanging(value)
					Me.SendPropertyChanging
					Me._SODATA = value
					Me.SendPropertyChanged("SODATA")
					Me.OnSODATAChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VMTRSTAT")>  _
	Partial Public Class VMTRSTAT
		
		Private _Company As Short
		
		Private _Fiscprd As Short
		
		Private _Period As Short
		
		Private _TrnDate As Date
		
		Private _Findoc As Integer
		
		Private _SoSource As Integer
		
		Private _SoReDir As Integer
		
		Private _Fprms As Short
		
		Private _TFprms As Short
		
		Private _Series As Short
		
		Private _SeriesNum As Integer
		
		Private _FinCode As String
		
		Private _Branch As Short
		
		Private _TSodType As Short
		
		Private _Trdr As System.Nullable(Of Integer)
		
		Private _Tdistrict As System.Nullable(Of Short)
		
		Private _TrdBranch As System.Nullable(Of Integer)
		
		Private _Tbdistrict As System.Nullable(Of Short)
		
		Private _VatSts As System.Nullable(Of Short)
		
		Private _SoCurrency As Short
		
		Private _TrdrRate As Double
		
		Private _LRate As Double
		
		Private _FindocS As System.Nullable(Of Integer)
		
		Private _MtrLinesS As System.Nullable(Of Integer)
		
		Private _Origin As Short
		
		Private _FinDocPay As System.Nullable(Of Integer)
		
		Private _IsCancel As Short
		
		Private _IsPrint As Short
		
		Private _GlUpd As Short
		
		Private _AcnEdit As System.Nullable(Of Integer)
		
		Private _ApprvDate As System.Nullable(Of Date)
		
		Private _ApprvUser As System.Nullable(Of Short)
		
		Private _Apprv As Short
		
		Private _FinStates As System.Nullable(Of Short)
		
		Private _ShipKind As System.Nullable(Of Short)
		
		Private _Shipment As System.Nullable(Of Short)
		
		Private _BusUnits As System.Nullable(Of Short)
		
		Private _Payment As System.Nullable(Of Short)
		
		Private _CrControl As System.Nullable(Of Short)
		
		Private _Priority As System.Nullable(Of Short)
		
		Private _Inst As System.Nullable(Of Integer)
		
		Private _Prjc As System.Nullable(Of Integer)
		
		Private _Cntr As System.Nullable(Of Integer)
		
		Private _SalesMan As System.Nullable(Of Integer)
		
		Private _Collector As System.Nullable(Of Integer)
		
		Private _Rsrc As System.Nullable(Of Integer)
		
		Private _SoCash As System.Nullable(Of Short)
		
		Private _Folder As System.Nullable(Of Short)
		
		Private _Depart As System.Nullable(Of Short)
		
		Private _ProcDef As System.Nullable(Of Short)
		
		Private _TrdrS As System.Nullable(Of Integer)
		
		Private _TrdBranchS As System.Nullable(Of Integer)
		
		Private _ltype1 As Short
		
		Private _ltype2 As Short
		
		Private _ltype3 As Short
		
		Private _ltype4 As Short
		
		Private _SoTime As System.Nullable(Of Date)
		
		Private _InsDate As System.Nullable(Of Date)
		
		Private _InsUser As System.Nullable(Of Short)
		
		Private _Routing As System.Nullable(Of Short)
		
		Private _MSodType As Short
		
		Private _Mtprns As Short
		
		Private _Mtrl As Integer
		
		Private _MtrTrn As Integer
		
		Private _LineNum As Integer
		
		Private _Whouse As Short
		
		Private _WhouseBin As System.Nullable(Of Short)
		
		Private _MtrLot As System.Nullable(Of Integer)
		
		Private _AssDepr As System.Nullable(Of Integer)
		
		Private _MtrSeason As System.Nullable(Of Short)
		
		Private _MSalesMan As System.Nullable(Of Integer)
		
		Private _MBusUnits As System.Nullable(Of Short)
		
		Private _CostCntr As System.Nullable(Of Integer)
		
		Private _MPrjc As System.Nullable(Of Integer)
		
		Private _MInst As System.Nullable(Of Integer)
		
		Private _MRsrc As System.Nullable(Of Integer)
		
		Private _MCntr As System.Nullable(Of Integer)
		
		Private _MtrType As Short
		
		Private _Spcs As System.Nullable(Of Integer)
		
		Private _Qty As System.Nullable(Of Double)
		
		Private _Qty1 As Double
		
		Private _Qty2 As Double
		
		Private _ImpQtyT As Double
		
		Private _ExpQtyT As Double
		
		Private _PurQtyT As Double
		
		Private _SalQtyT As Double
		
		Private _ImpQty1 As Double
		
		Private _ExpQty1 As Double
		
		Private _PurQty1 As Double
		
		Private _BilPurQty1 As Double
		
		Private _SalQty1 As Double
		
		Private _BilSalQty1 As Double
		
		Private _ProQty1 As Double
		
		Private _ConQty1 As Double
		
		Private _SelfQty1 As Double
		
		Private _ImpQty2 As Double
		
		Private _ExpQty2 As Double
		
		Private _PurQty2 As Double
		
		Private _SalQty2 As Double
		
		Private _ProQty2 As Double
		
		Private _ConQty2 As Double
		
		Private _SelfQty2 As Double
		
		Private _Price As Double
		
		Private _DiscPrc As Double
		
		Private _Vat As Short
		
		Private _ImpVal As Double
		
		Private _ExpVal As Double
		
		Private _PurVal As Double
		
		Private _BilPurVal As Double
		
		Private _SalVal As Double
		
		Private _BilSalVal As Double
		
		Private _ProVal As Double
		
		Private _ConVal As Double
		
		Private _LaborVal As Double
		
		Private _OverVal As Double
		
		Private _SelfVal As Double
		
		Private _ImpDiscVal As Double
		
		Private _ExpDiscVal As Double
		
		Private _PurDiscVal As Double
		
		Private _SalDiscVal As Double
		
		Private _ImpExpVal As Double
		
		Private _ExpExpVal As Double
		
		Private _PurExpVal As Double
		
		Private _SalExpVal As Double
		
		Private _ImpEfkVal As Double
		
		Private _ExpEfkVal As Double
		
		Private _PurEfkVal As Double
		
		Private _SalEfkVal As Double
		
		Private _ImpVatAmnt As Double
		
		Private _ExpVatAmnt As Double
		
		Private _PurVatAmnt As Double
		
		Private _SalVatAmnt As Double
		
		Private _standcost As Double
		
		Private _purmtk As Double
		
		Private _purmmtk As Double
		
		Private _purtmt As Double
		
		Private _purlprice As Double
		
		Private _purfifo As Double
		
		Private _purlifo As Double
		
		Private _purprice1 As Double
		
		Private _iasprice As Double
		
		Private _sallprice As Double
		
		Private _salmtk As Double
		
		Private _salpurmmtk As Double
		
		Private _SCstandcost As Double
		
		Private _SCpurmtk As Double
		
		Private _SCpurmmtk As Double
		
		Private _SCpurtmt As Double
		
		Private _SCpurlprice As Double
		
		Private _SCpurfifo As Double
		
		Private _SCpurlifo As Double
		
		Private _SCpurprice1 As Double
		
		Private _SCiasrprice As Double
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="SmallInt NOT NULL")>  _
		Public Property Company() As Short
			Get
				Return Me._Company
			End Get
			Set
				If ((Me._Company = value)  _
							= false) Then
					Me._Company = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fiscprd", DbType:="SmallInt NOT NULL")>  _
		Public Property Fiscprd() As Short
			Get
				Return Me._Fiscprd
			End Get
			Set
				If ((Me._Fiscprd = value)  _
							= false) Then
					Me._Fiscprd = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="SmallInt NOT NULL")>  _
		Public Property Period() As Short
			Get
				Return Me._Period
			End Get
			Set
				If ((Me._Period = value)  _
							= false) Then
					Me._Period = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrnDate", DbType:="DateTime NOT NULL")>  _
		Public Property TrnDate() As Date
			Get
				Return Me._TrnDate
			End Get
			Set
				If ((Me._TrnDate = value)  _
							= false) Then
					Me._TrnDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Findoc", DbType:="Int NOT NULL")>  _
		Public Property Findoc() As Integer
			Get
				Return Me._Findoc
			End Get
			Set
				If ((Me._Findoc = value)  _
							= false) Then
					Me._Findoc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SoSource", DbType:="Int NOT NULL")>  _
		Public Property SoSource() As Integer
			Get
				Return Me._SoSource
			End Get
			Set
				If ((Me._SoSource = value)  _
							= false) Then
					Me._SoSource = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SoReDir", DbType:="Int NOT NULL")>  _
		Public Property SoReDir() As Integer
			Get
				Return Me._SoReDir
			End Get
			Set
				If ((Me._SoReDir = value)  _
							= false) Then
					Me._SoReDir = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fprms", DbType:="SmallInt NOT NULL")>  _
		Public Property Fprms() As Short
			Get
				Return Me._Fprms
			End Get
			Set
				If ((Me._Fprms = value)  _
							= false) Then
					Me._Fprms = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFprms", DbType:="SmallInt NOT NULL")>  _
		Public Property TFprms() As Short
			Get
				Return Me._TFprms
			End Get
			Set
				If ((Me._TFprms = value)  _
							= false) Then
					Me._TFprms = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Series", DbType:="SmallInt NOT NULL")>  _
		Public Property Series() As Short
			Get
				Return Me._Series
			End Get
			Set
				If ((Me._Series = value)  _
							= false) Then
					Me._Series = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeriesNum", DbType:="Int NOT NULL")>  _
		Public Property SeriesNum() As Integer
			Get
				Return Me._SeriesNum
			End Get
			Set
				If ((Me._SeriesNum = value)  _
							= false) Then
					Me._SeriesNum = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinCode", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property FinCode() As String
			Get
				Return Me._FinCode
			End Get
			Set
				If (String.Equals(Me._FinCode, value) = false) Then
					Me._FinCode = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Branch", DbType:="SmallInt NOT NULL")>  _
		Public Property Branch() As Short
			Get
				Return Me._Branch
			End Get
			Set
				If ((Me._Branch = value)  _
							= false) Then
					Me._Branch = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TSodType", DbType:="SmallInt NOT NULL")>  _
		Public Property TSodType() As Short
			Get
				Return Me._TSodType
			End Get
			Set
				If ((Me._TSodType = value)  _
							= false) Then
					Me._TSodType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trdr", DbType:="Int")>  _
		Public Property Trdr() As System.Nullable(Of Integer)
			Get
				Return Me._Trdr
			End Get
			Set
				If (Me._Trdr.Equals(value) = false) Then
					Me._Trdr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tdistrict", DbType:="SmallInt")>  _
		Public Property Tdistrict() As System.Nullable(Of Short)
			Get
				Return Me._Tdistrict
			End Get
			Set
				If (Me._Tdistrict.Equals(value) = false) Then
					Me._Tdistrict = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrdBranch", DbType:="Int")>  _
		Public Property TrdBranch() As System.Nullable(Of Integer)
			Get
				Return Me._TrdBranch
			End Get
			Set
				If (Me._TrdBranch.Equals(value) = false) Then
					Me._TrdBranch = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tbdistrict", DbType:="SmallInt")>  _
		Public Property Tbdistrict() As System.Nullable(Of Short)
			Get
				Return Me._Tbdistrict
			End Get
			Set
				If (Me._Tbdistrict.Equals(value) = false) Then
					Me._Tbdistrict = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VatSts", DbType:="SmallInt")>  _
		Public Property VatSts() As System.Nullable(Of Short)
			Get
				Return Me._VatSts
			End Get
			Set
				If (Me._VatSts.Equals(value) = false) Then
					Me._VatSts = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SoCurrency", DbType:="SmallInt NOT NULL")>  _
		Public Property SoCurrency() As Short
			Get
				Return Me._SoCurrency
			End Get
			Set
				If ((Me._SoCurrency = value)  _
							= false) Then
					Me._SoCurrency = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrdrRate", DbType:="Float NOT NULL")>  _
		Public Property TrdrRate() As Double
			Get
				Return Me._TrdrRate
			End Get
			Set
				If ((Me._TrdrRate = value)  _
							= false) Then
					Me._TrdrRate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LRate", DbType:="Float NOT NULL")>  _
		Public Property LRate() As Double
			Get
				Return Me._LRate
			End Get
			Set
				If ((Me._LRate = value)  _
							= false) Then
					Me._LRate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FindocS", DbType:="Int")>  _
		Public Property FindocS() As System.Nullable(Of Integer)
			Get
				Return Me._FindocS
			End Get
			Set
				If (Me._FindocS.Equals(value) = false) Then
					Me._FindocS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MtrLinesS", DbType:="Int")>  _
		Public Property MtrLinesS() As System.Nullable(Of Integer)
			Get
				Return Me._MtrLinesS
			End Get
			Set
				If (Me._MtrLinesS.Equals(value) = false) Then
					Me._MtrLinesS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Origin", DbType:="SmallInt NOT NULL")>  _
		Public Property Origin() As Short
			Get
				Return Me._Origin
			End Get
			Set
				If ((Me._Origin = value)  _
							= false) Then
					Me._Origin = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinDocPay", DbType:="Int")>  _
		Public Property FinDocPay() As System.Nullable(Of Integer)
			Get
				Return Me._FinDocPay
			End Get
			Set
				If (Me._FinDocPay.Equals(value) = false) Then
					Me._FinDocPay = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsCancel", DbType:="SmallInt NOT NULL")>  _
		Public Property IsCancel() As Short
			Get
				Return Me._IsCancel
			End Get
			Set
				If ((Me._IsCancel = value)  _
							= false) Then
					Me._IsCancel = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsPrint", DbType:="SmallInt NOT NULL")>  _
		Public Property IsPrint() As Short
			Get
				Return Me._IsPrint
			End Get
			Set
				If ((Me._IsPrint = value)  _
							= false) Then
					Me._IsPrint = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlUpd", DbType:="SmallInt NOT NULL")>  _
		Public Property GlUpd() As Short
			Get
				Return Me._GlUpd
			End Get
			Set
				If ((Me._GlUpd = value)  _
							= false) Then
					Me._GlUpd = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcnEdit", DbType:="Int")>  _
		Public Property AcnEdit() As System.Nullable(Of Integer)
			Get
				Return Me._AcnEdit
			End Get
			Set
				If (Me._AcnEdit.Equals(value) = false) Then
					Me._AcnEdit = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprvDate", DbType:="DateTime")>  _
		Public Property ApprvDate() As System.Nullable(Of Date)
			Get
				Return Me._ApprvDate
			End Get
			Set
				If (Me._ApprvDate.Equals(value) = false) Then
					Me._ApprvDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprvUser", DbType:="SmallInt")>  _
		Public Property ApprvUser() As System.Nullable(Of Short)
			Get
				Return Me._ApprvUser
			End Get
			Set
				If (Me._ApprvUser.Equals(value) = false) Then
					Me._ApprvUser = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apprv", DbType:="SmallInt NOT NULL")>  _
		Public Property Apprv() As Short
			Get
				Return Me._Apprv
			End Get
			Set
				If ((Me._Apprv = value)  _
							= false) Then
					Me._Apprv = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinStates", DbType:="SmallInt")>  _
		Public Property FinStates() As System.Nullable(Of Short)
			Get
				Return Me._FinStates
			End Get
			Set
				If (Me._FinStates.Equals(value) = false) Then
					Me._FinStates = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipKind", DbType:="SmallInt")>  _
		Public Property ShipKind() As System.Nullable(Of Short)
			Get
				Return Me._ShipKind
			End Get
			Set
				If (Me._ShipKind.Equals(value) = false) Then
					Me._ShipKind = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Shipment", DbType:="SmallInt")>  _
		Public Property Shipment() As System.Nullable(Of Short)
			Get
				Return Me._Shipment
			End Get
			Set
				If (Me._Shipment.Equals(value) = false) Then
					Me._Shipment = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BusUnits", DbType:="SmallInt")>  _
		Public Property BusUnits() As System.Nullable(Of Short)
			Get
				Return Me._BusUnits
			End Get
			Set
				If (Me._BusUnits.Equals(value) = false) Then
					Me._BusUnits = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payment", DbType:="SmallInt")>  _
		Public Property Payment() As System.Nullable(Of Short)
			Get
				Return Me._Payment
			End Get
			Set
				If (Me._Payment.Equals(value) = false) Then
					Me._Payment = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CrControl", DbType:="SmallInt")>  _
		Public Property CrControl() As System.Nullable(Of Short)
			Get
				Return Me._CrControl
			End Get
			Set
				If (Me._CrControl.Equals(value) = false) Then
					Me._CrControl = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="SmallInt")>  _
		Public Property Priority() As System.Nullable(Of Short)
			Get
				Return Me._Priority
			End Get
			Set
				If (Me._Priority.Equals(value) = false) Then
					Me._Priority = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inst", DbType:="Int")>  _
		Public Property Inst() As System.Nullable(Of Integer)
			Get
				Return Me._Inst
			End Get
			Set
				If (Me._Inst.Equals(value) = false) Then
					Me._Inst = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prjc", DbType:="Int")>  _
		Public Property Prjc() As System.Nullable(Of Integer)
			Get
				Return Me._Prjc
			End Get
			Set
				If (Me._Prjc.Equals(value) = false) Then
					Me._Prjc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cntr", DbType:="Int")>  _
		Public Property Cntr() As System.Nullable(Of Integer)
			Get
				Return Me._Cntr
			End Get
			Set
				If (Me._Cntr.Equals(value) = false) Then
					Me._Cntr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalesMan", DbType:="Int")>  _
		Public Property SalesMan() As System.Nullable(Of Integer)
			Get
				Return Me._SalesMan
			End Get
			Set
				If (Me._SalesMan.Equals(value) = false) Then
					Me._SalesMan = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Collector", DbType:="Int")>  _
		Public Property Collector() As System.Nullable(Of Integer)
			Get
				Return Me._Collector
			End Get
			Set
				If (Me._Collector.Equals(value) = false) Then
					Me._Collector = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rsrc", DbType:="Int")>  _
		Public Property Rsrc() As System.Nullable(Of Integer)
			Get
				Return Me._Rsrc
			End Get
			Set
				If (Me._Rsrc.Equals(value) = false) Then
					Me._Rsrc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SoCash", DbType:="SmallInt")>  _
		Public Property SoCash() As System.Nullable(Of Short)
			Get
				Return Me._SoCash
			End Get
			Set
				If (Me._SoCash.Equals(value) = false) Then
					Me._SoCash = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Folder", DbType:="SmallInt")>  _
		Public Property Folder() As System.Nullable(Of Short)
			Get
				Return Me._Folder
			End Get
			Set
				If (Me._Folder.Equals(value) = false) Then
					Me._Folder = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Depart", DbType:="SmallInt")>  _
		Public Property Depart() As System.Nullable(Of Short)
			Get
				Return Me._Depart
			End Get
			Set
				If (Me._Depart.Equals(value) = false) Then
					Me._Depart = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcDef", DbType:="SmallInt")>  _
		Public Property ProcDef() As System.Nullable(Of Short)
			Get
				Return Me._ProcDef
			End Get
			Set
				If (Me._ProcDef.Equals(value) = false) Then
					Me._ProcDef = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrdrS", DbType:="Int")>  _
		Public Property TrdrS() As System.Nullable(Of Integer)
			Get
				Return Me._TrdrS
			End Get
			Set
				If (Me._TrdrS.Equals(value) = false) Then
					Me._TrdrS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TrdBranchS", DbType:="Int")>  _
		Public Property TrdBranchS() As System.Nullable(Of Integer)
			Get
				Return Me._TrdBranchS
			End Get
			Set
				If (Me._TrdBranchS.Equals(value) = false) Then
					Me._TrdBranchS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ltype1", DbType:="SmallInt NOT NULL")>  _
		Public Property ltype1() As Short
			Get
				Return Me._ltype1
			End Get
			Set
				If ((Me._ltype1 = value)  _
							= false) Then
					Me._ltype1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ltype2", DbType:="SmallInt NOT NULL")>  _
		Public Property ltype2() As Short
			Get
				Return Me._ltype2
			End Get
			Set
				If ((Me._ltype2 = value)  _
							= false) Then
					Me._ltype2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ltype3", DbType:="SmallInt NOT NULL")>  _
		Public Property ltype3() As Short
			Get
				Return Me._ltype3
			End Get
			Set
				If ((Me._ltype3 = value)  _
							= false) Then
					Me._ltype3 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ltype4", DbType:="SmallInt NOT NULL")>  _
		Public Property ltype4() As Short
			Get
				Return Me._ltype4
			End Get
			Set
				If ((Me._ltype4 = value)  _
							= false) Then
					Me._ltype4 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SoTime", DbType:="DateTime")>  _
		Public Property SoTime() As System.Nullable(Of Date)
			Get
				Return Me._SoTime
			End Get
			Set
				If (Me._SoTime.Equals(value) = false) Then
					Me._SoTime = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsDate", DbType:="DateTime")>  _
		Public Property InsDate() As System.Nullable(Of Date)
			Get
				Return Me._InsDate
			End Get
			Set
				If (Me._InsDate.Equals(value) = false) Then
					Me._InsDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsUser", DbType:="SmallInt")>  _
		Public Property InsUser() As System.Nullable(Of Short)
			Get
				Return Me._InsUser
			End Get
			Set
				If (Me._InsUser.Equals(value) = false) Then
					Me._InsUser = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Routing", DbType:="SmallInt")>  _
		Public Property Routing() As System.Nullable(Of Short)
			Get
				Return Me._Routing
			End Get
			Set
				If (Me._Routing.Equals(value) = false) Then
					Me._Routing = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSodType", DbType:="SmallInt NOT NULL")>  _
		Public Property MSodType() As Short
			Get
				Return Me._MSodType
			End Get
			Set
				If ((Me._MSodType = value)  _
							= false) Then
					Me._MSodType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mtprns", DbType:="SmallInt NOT NULL")>  _
		Public Property Mtprns() As Short
			Get
				Return Me._Mtprns
			End Get
			Set
				If ((Me._Mtprns = value)  _
							= false) Then
					Me._Mtprns = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mtrl", DbType:="Int NOT NULL")>  _
		Public Property Mtrl() As Integer
			Get
				Return Me._Mtrl
			End Get
			Set
				If ((Me._Mtrl = value)  _
							= false) Then
					Me._Mtrl = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MtrTrn", DbType:="Int NOT NULL")>  _
		Public Property MtrTrn() As Integer
			Get
				Return Me._MtrTrn
			End Get
			Set
				If ((Me._MtrTrn = value)  _
							= false) Then
					Me._MtrTrn = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineNum", DbType:="Int NOT NULL")>  _
		Public Property LineNum() As Integer
			Get
				Return Me._LineNum
			End Get
			Set
				If ((Me._LineNum = value)  _
							= false) Then
					Me._LineNum = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Whouse", DbType:="SmallInt NOT NULL")>  _
		Public Property Whouse() As Short
			Get
				Return Me._Whouse
			End Get
			Set
				If ((Me._Whouse = value)  _
							= false) Then
					Me._Whouse = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WhouseBin", DbType:="SmallInt")>  _
		Public Property WhouseBin() As System.Nullable(Of Short)
			Get
				Return Me._WhouseBin
			End Get
			Set
				If (Me._WhouseBin.Equals(value) = false) Then
					Me._WhouseBin = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MtrLot", DbType:="Int")>  _
		Public Property MtrLot() As System.Nullable(Of Integer)
			Get
				Return Me._MtrLot
			End Get
			Set
				If (Me._MtrLot.Equals(value) = false) Then
					Me._MtrLot = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AssDepr", DbType:="Int")>  _
		Public Property AssDepr() As System.Nullable(Of Integer)
			Get
				Return Me._AssDepr
			End Get
			Set
				If (Me._AssDepr.Equals(value) = false) Then
					Me._AssDepr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MtrSeason", DbType:="SmallInt")>  _
		Public Property MtrSeason() As System.Nullable(Of Short)
			Get
				Return Me._MtrSeason
			End Get
			Set
				If (Me._MtrSeason.Equals(value) = false) Then
					Me._MtrSeason = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSalesMan", DbType:="Int")>  _
		Public Property MSalesMan() As System.Nullable(Of Integer)
			Get
				Return Me._MSalesMan
			End Get
			Set
				If (Me._MSalesMan.Equals(value) = false) Then
					Me._MSalesMan = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MBusUnits", DbType:="SmallInt")>  _
		Public Property MBusUnits() As System.Nullable(Of Short)
			Get
				Return Me._MBusUnits
			End Get
			Set
				If (Me._MBusUnits.Equals(value) = false) Then
					Me._MBusUnits = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCntr", DbType:="Int")>  _
		Public Property CostCntr() As System.Nullable(Of Integer)
			Get
				Return Me._CostCntr
			End Get
			Set
				If (Me._CostCntr.Equals(value) = false) Then
					Me._CostCntr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MPrjc", DbType:="Int")>  _
		Public Property MPrjc() As System.Nullable(Of Integer)
			Get
				Return Me._MPrjc
			End Get
			Set
				If (Me._MPrjc.Equals(value) = false) Then
					Me._MPrjc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MInst", DbType:="Int")>  _
		Public Property MInst() As System.Nullable(Of Integer)
			Get
				Return Me._MInst
			End Get
			Set
				If (Me._MInst.Equals(value) = false) Then
					Me._MInst = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRsrc", DbType:="Int")>  _
		Public Property MRsrc() As System.Nullable(Of Integer)
			Get
				Return Me._MRsrc
			End Get
			Set
				If (Me._MRsrc.Equals(value) = false) Then
					Me._MRsrc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCntr", DbType:="Int")>  _
		Public Property MCntr() As System.Nullable(Of Integer)
			Get
				Return Me._MCntr
			End Get
			Set
				If (Me._MCntr.Equals(value) = false) Then
					Me._MCntr = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MtrType", DbType:="SmallInt NOT NULL")>  _
		Public Property MtrType() As Short
			Get
				Return Me._MtrType
			End Get
			Set
				If ((Me._MtrType = value)  _
							= false) Then
					Me._MtrType = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spcs", DbType:="Int")>  _
		Public Property Spcs() As System.Nullable(Of Integer)
			Get
				Return Me._Spcs
			End Get
			Set
				If (Me._Spcs.Equals(value) = false) Then
					Me._Spcs = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qty", DbType:="Float")>  _
		Public Property Qty() As System.Nullable(Of Double)
			Get
				Return Me._Qty
			End Get
			Set
				If (Me._Qty.Equals(value) = false) Then
					Me._Qty = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qty1", DbType:="Float NOT NULL")>  _
		Public Property Qty1() As Double
			Get
				Return Me._Qty1
			End Get
			Set
				If ((Me._Qty1 = value)  _
							= false) Then
					Me._Qty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qty2", DbType:="Float NOT NULL")>  _
		Public Property Qty2() As Double
			Get
				Return Me._Qty2
			End Get
			Set
				If ((Me._Qty2 = value)  _
							= false) Then
					Me._Qty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpQtyT", DbType:="Float NOT NULL")>  _
		Public Property ImpQtyT() As Double
			Get
				Return Me._ImpQtyT
			End Get
			Set
				If ((Me._ImpQtyT = value)  _
							= false) Then
					Me._ImpQtyT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpQtyT", DbType:="Float NOT NULL")>  _
		Public Property ExpQtyT() As Double
			Get
				Return Me._ExpQtyT
			End Get
			Set
				If ((Me._ExpQtyT = value)  _
							= false) Then
					Me._ExpQtyT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurQtyT", DbType:="Float NOT NULL")>  _
		Public Property PurQtyT() As Double
			Get
				Return Me._PurQtyT
			End Get
			Set
				If ((Me._PurQtyT = value)  _
							= false) Then
					Me._PurQtyT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalQtyT", DbType:="Float NOT NULL")>  _
		Public Property SalQtyT() As Double
			Get
				Return Me._SalQtyT
			End Get
			Set
				If ((Me._SalQtyT = value)  _
							= false) Then
					Me._SalQtyT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpQty1", DbType:="Float NOT NULL")>  _
		Public Property ImpQty1() As Double
			Get
				Return Me._ImpQty1
			End Get
			Set
				If ((Me._ImpQty1 = value)  _
							= false) Then
					Me._ImpQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpQty1", DbType:="Float NOT NULL")>  _
		Public Property ExpQty1() As Double
			Get
				Return Me._ExpQty1
			End Get
			Set
				If ((Me._ExpQty1 = value)  _
							= false) Then
					Me._ExpQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurQty1", DbType:="Float NOT NULL")>  _
		Public Property PurQty1() As Double
			Get
				Return Me._PurQty1
			End Get
			Set
				If ((Me._PurQty1 = value)  _
							= false) Then
					Me._PurQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BilPurQty1", DbType:="Float NOT NULL")>  _
		Public Property BilPurQty1() As Double
			Get
				Return Me._BilPurQty1
			End Get
			Set
				If ((Me._BilPurQty1 = value)  _
							= false) Then
					Me._BilPurQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalQty1", DbType:="Float NOT NULL")>  _
		Public Property SalQty1() As Double
			Get
				Return Me._SalQty1
			End Get
			Set
				If ((Me._SalQty1 = value)  _
							= false) Then
					Me._SalQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BilSalQty1", DbType:="Float NOT NULL")>  _
		Public Property BilSalQty1() As Double
			Get
				Return Me._BilSalQty1
			End Get
			Set
				If ((Me._BilSalQty1 = value)  _
							= false) Then
					Me._BilSalQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProQty1", DbType:="Float NOT NULL")>  _
		Public Property ProQty1() As Double
			Get
				Return Me._ProQty1
			End Get
			Set
				If ((Me._ProQty1 = value)  _
							= false) Then
					Me._ProQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConQty1", DbType:="Float NOT NULL")>  _
		Public Property ConQty1() As Double
			Get
				Return Me._ConQty1
			End Get
			Set
				If ((Me._ConQty1 = value)  _
							= false) Then
					Me._ConQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SelfQty1", DbType:="Float NOT NULL")>  _
		Public Property SelfQty1() As Double
			Get
				Return Me._SelfQty1
			End Get
			Set
				If ((Me._SelfQty1 = value)  _
							= false) Then
					Me._SelfQty1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpQty2", DbType:="Float NOT NULL")>  _
		Public Property ImpQty2() As Double
			Get
				Return Me._ImpQty2
			End Get
			Set
				If ((Me._ImpQty2 = value)  _
							= false) Then
					Me._ImpQty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpQty2", DbType:="Float NOT NULL")>  _
		Public Property ExpQty2() As Double
			Get
				Return Me._ExpQty2
			End Get
			Set
				If ((Me._ExpQty2 = value)  _
							= false) Then
					Me._ExpQty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurQty2", DbType:="Float NOT NULL")>  _
		Public Property PurQty2() As Double
			Get
				Return Me._PurQty2
			End Get
			Set
				If ((Me._PurQty2 = value)  _
							= false) Then
					Me._PurQty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalQty2", DbType:="Float NOT NULL")>  _
		Public Property SalQty2() As Double
			Get
				Return Me._SalQty2
			End Get
			Set
				If ((Me._SalQty2 = value)  _
							= false) Then
					Me._SalQty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProQty2", DbType:="Float NOT NULL")>  _
		Public Property ProQty2() As Double
			Get
				Return Me._ProQty2
			End Get
			Set
				If ((Me._ProQty2 = value)  _
							= false) Then
					Me._ProQty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConQty2", DbType:="Float NOT NULL")>  _
		Public Property ConQty2() As Double
			Get
				Return Me._ConQty2
			End Get
			Set
				If ((Me._ConQty2 = value)  _
							= false) Then
					Me._ConQty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SelfQty2", DbType:="Float NOT NULL")>  _
		Public Property SelfQty2() As Double
			Get
				Return Me._SelfQty2
			End Get
			Set
				If ((Me._SelfQty2 = value)  _
							= false) Then
					Me._SelfQty2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Float NOT NULL")>  _
		Public Property Price() As Double
			Get
				Return Me._Price
			End Get
			Set
				If ((Me._Price = value)  _
							= false) Then
					Me._Price = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscPrc", DbType:="Float NOT NULL")>  _
		Public Property DiscPrc() As Double
			Get
				Return Me._DiscPrc
			End Get
			Set
				If ((Me._DiscPrc = value)  _
							= false) Then
					Me._DiscPrc = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vat", DbType:="SmallInt NOT NULL")>  _
		Public Property Vat() As Short
			Get
				Return Me._Vat
			End Get
			Set
				If ((Me._Vat = value)  _
							= false) Then
					Me._Vat = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpVal", DbType:="Float NOT NULL")>  _
		Public Property ImpVal() As Double
			Get
				Return Me._ImpVal
			End Get
			Set
				If ((Me._ImpVal = value)  _
							= false) Then
					Me._ImpVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpVal", DbType:="Float NOT NULL")>  _
		Public Property ExpVal() As Double
			Get
				Return Me._ExpVal
			End Get
			Set
				If ((Me._ExpVal = value)  _
							= false) Then
					Me._ExpVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurVal", DbType:="Float NOT NULL")>  _
		Public Property PurVal() As Double
			Get
				Return Me._PurVal
			End Get
			Set
				If ((Me._PurVal = value)  _
							= false) Then
					Me._PurVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BilPurVal", DbType:="Float NOT NULL")>  _
		Public Property BilPurVal() As Double
			Get
				Return Me._BilPurVal
			End Get
			Set
				If ((Me._BilPurVal = value)  _
							= false) Then
					Me._BilPurVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalVal", DbType:="Float NOT NULL")>  _
		Public Property SalVal() As Double
			Get
				Return Me._SalVal
			End Get
			Set
				If ((Me._SalVal = value)  _
							= false) Then
					Me._SalVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BilSalVal", DbType:="Float NOT NULL")>  _
		Public Property BilSalVal() As Double
			Get
				Return Me._BilSalVal
			End Get
			Set
				If ((Me._BilSalVal = value)  _
							= false) Then
					Me._BilSalVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProVal", DbType:="Float NOT NULL")>  _
		Public Property ProVal() As Double
			Get
				Return Me._ProVal
			End Get
			Set
				If ((Me._ProVal = value)  _
							= false) Then
					Me._ProVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConVal", DbType:="Float NOT NULL")>  _
		Public Property ConVal() As Double
			Get
				Return Me._ConVal
			End Get
			Set
				If ((Me._ConVal = value)  _
							= false) Then
					Me._ConVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LaborVal", DbType:="Float NOT NULL")>  _
		Public Property LaborVal() As Double
			Get
				Return Me._LaborVal
			End Get
			Set
				If ((Me._LaborVal = value)  _
							= false) Then
					Me._LaborVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OverVal", DbType:="Float NOT NULL")>  _
		Public Property OverVal() As Double
			Get
				Return Me._OverVal
			End Get
			Set
				If ((Me._OverVal = value)  _
							= false) Then
					Me._OverVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SelfVal", DbType:="Float NOT NULL")>  _
		Public Property SelfVal() As Double
			Get
				Return Me._SelfVal
			End Get
			Set
				If ((Me._SelfVal = value)  _
							= false) Then
					Me._SelfVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpDiscVal", DbType:="Float NOT NULL")>  _
		Public Property ImpDiscVal() As Double
			Get
				Return Me._ImpDiscVal
			End Get
			Set
				If ((Me._ImpDiscVal = value)  _
							= false) Then
					Me._ImpDiscVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpDiscVal", DbType:="Float NOT NULL")>  _
		Public Property ExpDiscVal() As Double
			Get
				Return Me._ExpDiscVal
			End Get
			Set
				If ((Me._ExpDiscVal = value)  _
							= false) Then
					Me._ExpDiscVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurDiscVal", DbType:="Float NOT NULL")>  _
		Public Property PurDiscVal() As Double
			Get
				Return Me._PurDiscVal
			End Get
			Set
				If ((Me._PurDiscVal = value)  _
							= false) Then
					Me._PurDiscVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalDiscVal", DbType:="Float NOT NULL")>  _
		Public Property SalDiscVal() As Double
			Get
				Return Me._SalDiscVal
			End Get
			Set
				If ((Me._SalDiscVal = value)  _
							= false) Then
					Me._SalDiscVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpExpVal", DbType:="Float NOT NULL")>  _
		Public Property ImpExpVal() As Double
			Get
				Return Me._ImpExpVal
			End Get
			Set
				If ((Me._ImpExpVal = value)  _
							= false) Then
					Me._ImpExpVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpExpVal", DbType:="Float NOT NULL")>  _
		Public Property ExpExpVal() As Double
			Get
				Return Me._ExpExpVal
			End Get
			Set
				If ((Me._ExpExpVal = value)  _
							= false) Then
					Me._ExpExpVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurExpVal", DbType:="Float NOT NULL")>  _
		Public Property PurExpVal() As Double
			Get
				Return Me._PurExpVal
			End Get
			Set
				If ((Me._PurExpVal = value)  _
							= false) Then
					Me._PurExpVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalExpVal", DbType:="Float NOT NULL")>  _
		Public Property SalExpVal() As Double
			Get
				Return Me._SalExpVal
			End Get
			Set
				If ((Me._SalExpVal = value)  _
							= false) Then
					Me._SalExpVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpEfkVal", DbType:="Float NOT NULL")>  _
		Public Property ImpEfkVal() As Double
			Get
				Return Me._ImpEfkVal
			End Get
			Set
				If ((Me._ImpEfkVal = value)  _
							= false) Then
					Me._ImpEfkVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpEfkVal", DbType:="Float NOT NULL")>  _
		Public Property ExpEfkVal() As Double
			Get
				Return Me._ExpEfkVal
			End Get
			Set
				If ((Me._ExpEfkVal = value)  _
							= false) Then
					Me._ExpEfkVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurEfkVal", DbType:="Float NOT NULL")>  _
		Public Property PurEfkVal() As Double
			Get
				Return Me._PurEfkVal
			End Get
			Set
				If ((Me._PurEfkVal = value)  _
							= false) Then
					Me._PurEfkVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalEfkVal", DbType:="Float NOT NULL")>  _
		Public Property SalEfkVal() As Double
			Get
				Return Me._SalEfkVal
			End Get
			Set
				If ((Me._SalEfkVal = value)  _
							= false) Then
					Me._SalEfkVal = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpVatAmnt", DbType:="Float NOT NULL")>  _
		Public Property ImpVatAmnt() As Double
			Get
				Return Me._ImpVatAmnt
			End Get
			Set
				If ((Me._ImpVatAmnt = value)  _
							= false) Then
					Me._ImpVatAmnt = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpVatAmnt", DbType:="Float NOT NULL")>  _
		Public Property ExpVatAmnt() As Double
			Get
				Return Me._ExpVatAmnt
			End Get
			Set
				If ((Me._ExpVatAmnt = value)  _
							= false) Then
					Me._ExpVatAmnt = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurVatAmnt", DbType:="Float NOT NULL")>  _
		Public Property PurVatAmnt() As Double
			Get
				Return Me._PurVatAmnt
			End Get
			Set
				If ((Me._PurVatAmnt = value)  _
							= false) Then
					Me._PurVatAmnt = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalVatAmnt", DbType:="Float NOT NULL")>  _
		Public Property SalVatAmnt() As Double
			Get
				Return Me._SalVatAmnt
			End Get
			Set
				If ((Me._SalVatAmnt = value)  _
							= false) Then
					Me._SalVatAmnt = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_standcost", DbType:="Float NOT NULL")>  _
		Public Property standcost() As Double
			Get
				Return Me._standcost
			End Get
			Set
				If ((Me._standcost = value)  _
							= false) Then
					Me._standcost = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purmtk", DbType:="Float NOT NULL")>  _
		Public Property purmtk() As Double
			Get
				Return Me._purmtk
			End Get
			Set
				If ((Me._purmtk = value)  _
							= false) Then
					Me._purmtk = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purmmtk", DbType:="Float NOT NULL")>  _
		Public Property purmmtk() As Double
			Get
				Return Me._purmmtk
			End Get
			Set
				If ((Me._purmmtk = value)  _
							= false) Then
					Me._purmmtk = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purtmt", DbType:="Float NOT NULL")>  _
		Public Property purtmt() As Double
			Get
				Return Me._purtmt
			End Get
			Set
				If ((Me._purtmt = value)  _
							= false) Then
					Me._purtmt = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purlprice", DbType:="Float NOT NULL")>  _
		Public Property purlprice() As Double
			Get
				Return Me._purlprice
			End Get
			Set
				If ((Me._purlprice = value)  _
							= false) Then
					Me._purlprice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purfifo", DbType:="Float NOT NULL")>  _
		Public Property purfifo() As Double
			Get
				Return Me._purfifo
			End Get
			Set
				If ((Me._purfifo = value)  _
							= false) Then
					Me._purfifo = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purlifo", DbType:="Float NOT NULL")>  _
		Public Property purlifo() As Double
			Get
				Return Me._purlifo
			End Get
			Set
				If ((Me._purlifo = value)  _
							= false) Then
					Me._purlifo = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purprice1", DbType:="Float NOT NULL")>  _
		Public Property purprice1() As Double
			Get
				Return Me._purprice1
			End Get
			Set
				If ((Me._purprice1 = value)  _
							= false) Then
					Me._purprice1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iasprice", DbType:="Float NOT NULL")>  _
		Public Property iasprice() As Double
			Get
				Return Me._iasprice
			End Get
			Set
				If ((Me._iasprice = value)  _
							= false) Then
					Me._iasprice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sallprice", DbType:="Float NOT NULL")>  _
		Public Property sallprice() As Double
			Get
				Return Me._sallprice
			End Get
			Set
				If ((Me._sallprice = value)  _
							= false) Then
					Me._sallprice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salmtk", DbType:="Float NOT NULL")>  _
		Public Property salmtk() As Double
			Get
				Return Me._salmtk
			End Get
			Set
				If ((Me._salmtk = value)  _
							= false) Then
					Me._salmtk = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salpurmmtk", DbType:="Float NOT NULL")>  _
		Public Property salpurmmtk() As Double
			Get
				Return Me._salpurmmtk
			End Get
			Set
				If ((Me._salpurmmtk = value)  _
							= false) Then
					Me._salpurmmtk = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCstandcost", DbType:="Float NOT NULL")>  _
		Public Property SCstandcost() As Double
			Get
				Return Me._SCstandcost
			End Get
			Set
				If ((Me._SCstandcost = value)  _
							= false) Then
					Me._SCstandcost = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCpurmtk", DbType:="Float NOT NULL")>  _
		Public Property SCpurmtk() As Double
			Get
				Return Me._SCpurmtk
			End Get
			Set
				If ((Me._SCpurmtk = value)  _
							= false) Then
					Me._SCpurmtk = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCpurmmtk", DbType:="Float NOT NULL")>  _
		Public Property SCpurmmtk() As Double
			Get
				Return Me._SCpurmmtk
			End Get
			Set
				If ((Me._SCpurmmtk = value)  _
							= false) Then
					Me._SCpurmmtk = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCpurtmt", DbType:="Float NOT NULL")>  _
		Public Property SCpurtmt() As Double
			Get
				Return Me._SCpurtmt
			End Get
			Set
				If ((Me._SCpurtmt = value)  _
							= false) Then
					Me._SCpurtmt = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCpurlprice", DbType:="Float NOT NULL")>  _
		Public Property SCpurlprice() As Double
			Get
				Return Me._SCpurlprice
			End Get
			Set
				If ((Me._SCpurlprice = value)  _
							= false) Then
					Me._SCpurlprice = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCpurfifo", DbType:="Float NOT NULL")>  _
		Public Property SCpurfifo() As Double
			Get
				Return Me._SCpurfifo
			End Get
			Set
				If ((Me._SCpurfifo = value)  _
							= false) Then
					Me._SCpurfifo = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCpurlifo", DbType:="Float NOT NULL")>  _
		Public Property SCpurlifo() As Double
			Get
				Return Me._SCpurlifo
			End Get
			Set
				If ((Me._SCpurlifo = value)  _
							= false) Then
					Me._SCpurlifo = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCpurprice1", DbType:="Float NOT NULL")>  _
		Public Property SCpurprice1() As Double
			Get
				Return Me._SCpurprice1
			End Get
			Set
				If ((Me._SCpurprice1 = value)  _
							= false) Then
					Me._SCpurprice1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCiasrprice", DbType:="Float NOT NULL")>  _
		Public Property SCiasrprice() As Double
			Get
				Return Me._SCiasrprice
			End Get
			Set
				If ((Me._SCiasrprice = value)  _
							= false) Then
					Me._SCiasrprice = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VAT")>  _
	Partial Public Class VAT
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _VAT As Short
		
		Private _NAME As String
		
		Private _PERCNT As Double
		
		Private _VATS1 As System.Nullable(Of Short)
		
		Private _VATS2 As System.Nullable(Of Short)
		
		Private _VATS3 As System.Nullable(Of Short)
		
		Private _ROVATTYPE As System.Nullable(Of Short)
		
		Private _ISACTIVE As Short
		
		Private _ACNMSKS As String
		
		Private _ACNMSKX As String
		
		Private _DEPART As System.Nullable(Of Short)
		
		Private _VATs As EntitySet(Of VAT)
		
		Private _VATs4 As EntitySet(Of VAT)
		
		Private _MTRLs As EntitySet(Of MTRL)
		
		Private _VAT1 As EntityRef(Of VAT)
		
		Private _VAT2 As EntityRef(Of VAT)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVATChanging(value As Short)
    End Sub
    Partial Private Sub OnVATChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnPERCNTChanging(value As Double)
    End Sub
    Partial Private Sub OnPERCNTChanged()
    End Sub
    Partial Private Sub OnVATS1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATS1Changed()
    End Sub
    Partial Private Sub OnVATS2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATS2Changed()
    End Sub
    Partial Private Sub OnVATS3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATS3Changed()
    End Sub
    Partial Private Sub OnROVATTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnROVATTYPEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnACNMSKSChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKSChanged()
    End Sub
    Partial Private Sub OnACNMSKXChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKXChanged()
    End Sub
    Partial Private Sub OnDEPARTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDEPARTChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._VATs = New EntitySet(Of VAT)(AddressOf Me.attach_VATs, AddressOf Me.detach_VATs)
			Me._VATs4 = New EntitySet(Of VAT)(AddressOf Me.attach_VATs4, AddressOf Me.detach_VATs4)
			Me._MTRLs = New EntitySet(Of MTRL)(AddressOf Me.attach_MTRLs, AddressOf Me.detach_MTRLs)
			Me._VAT1 = CType(Nothing, EntityRef(Of VAT))
			Me._VAT2 = CType(Nothing, EntityRef(Of VAT))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property VAT() As Short
			Get
				Return Me._VAT
			End Get
			Set
				If ((Me._VAT = value)  _
							= false) Then
					Me.OnVATChanging(value)
					Me.SendPropertyChanging
					Me._VAT = value
					Me.SendPropertyChanged("VAT")
					Me.OnVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERCNT", DbType:="Float NOT NULL")>  _
		Public Property PERCNT() As Double
			Get
				Return Me._PERCNT
			End Get
			Set
				If ((Me._PERCNT = value)  _
							= false) Then
					Me.OnPERCNTChanging(value)
					Me.SendPropertyChanging
					Me._PERCNT = value
					Me.SendPropertyChanged("PERCNT")
					Me.OnPERCNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATS1", DbType:="SmallInt")>  _
		Public Property VATS1() As System.Nullable(Of Short)
			Get
				Return Me._VATS1
			End Get
			Set
				If (Me._VATS1.Equals(value) = false) Then
					If Me._VAT1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnVATS1Changing(value)
					Me.SendPropertyChanging
					Me._VATS1 = value
					Me.SendPropertyChanged("VATS1")
					Me.OnVATS1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATS2", DbType:="SmallInt")>  _
		Public Property VATS2() As System.Nullable(Of Short)
			Get
				Return Me._VATS2
			End Get
			Set
				If (Me._VATS2.Equals(value) = false) Then
					If Me._VAT2.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnVATS2Changing(value)
					Me.SendPropertyChanging
					Me._VATS2 = value
					Me.SendPropertyChanged("VATS2")
					Me.OnVATS2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATS3", DbType:="SmallInt")>  _
		Public Property VATS3() As System.Nullable(Of Short)
			Get
				Return Me._VATS3
			End Get
			Set
				If (Me._VATS3.Equals(value) = false) Then
					Me.OnVATS3Changing(value)
					Me.SendPropertyChanging
					Me._VATS3 = value
					Me.SendPropertyChanged("VATS3")
					Me.OnVATS3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROVATTYPE", DbType:="SmallInt")>  _
		Public Property ROVATTYPE() As System.Nullable(Of Short)
			Get
				Return Me._ROVATTYPE
			End Get
			Set
				If (Me._ROVATTYPE.Equals(value) = false) Then
					Me.OnROVATTYPEChanging(value)
					Me.SendPropertyChanging
					Me._ROVATTYPE = value
					Me.SendPropertyChanged("ROVATTYPE")
					Me.OnROVATTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKS", DbType:="VarChar(25)")>  _
		Public Property ACNMSKS() As String
			Get
				Return Me._ACNMSKS
			End Get
			Set
				If (String.Equals(Me._ACNMSKS, value) = false) Then
					Me.OnACNMSKSChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKS = value
					Me.SendPropertyChanged("ACNMSKS")
					Me.OnACNMSKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKX", DbType:="VarChar(25)")>  _
		Public Property ACNMSKX() As String
			Get
				Return Me._ACNMSKX
			End Get
			Set
				If (String.Equals(Me._ACNMSKX, value) = false) Then
					Me.OnACNMSKXChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKX = value
					Me.SendPropertyChanged("ACNMSKX")
					Me.OnACNMSKXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPART", DbType:="SmallInt")>  _
		Public Property DEPART() As System.Nullable(Of Short)
			Get
				Return Me._DEPART
			End Get
			Set
				If (Me._DEPART.Equals(value) = false) Then
					Me.OnDEPARTChanging(value)
					Me.SendPropertyChanging
					Me._DEPART = value
					Me.SendPropertyChanged("DEPART")
					Me.OnDEPARTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VAT_VAT", Storage:="_VATs", ThisKey:="VAT", OtherKey:="VATS1")>  _
		Public Property VATs() As EntitySet(Of VAT)
			Get
				Return Me._VATs
			End Get
			Set
				Me._VATs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VAT_VAT1", Storage:="_VATs4", ThisKey:="VAT", OtherKey:="VATS2")>  _
		Public Property VATs4() As EntitySet(Of VAT)
			Get
				Return Me._VATs4
			End Get
			Set
				Me._VATs4.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VAT_MTRL", Storage:="_MTRLs", ThisKey:="VAT", OtherKey:="VAT")>  _
		Public Property MTRLs() As EntitySet(Of MTRL)
			Get
				Return Me._MTRLs
			End Get
			Set
				Me._MTRLs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VAT_VAT", Storage:="_VAT1", ThisKey:="VATS1", OtherKey:="VAT", IsForeignKey:=true)>  _
		Public Property VAT1() As VAT
			Get
				Return Me._VAT1.Entity
			End Get
			Set
				Dim previousValue As VAT = Me._VAT1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._VAT1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._VAT1.Entity = Nothing
						previousValue.VATs.Remove(Me)
					End If
					Me._VAT1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.VATs.Add(Me)
						Me._VATS1 = value.VAT
					Else
						Me._VATS1 = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("VAT1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VAT_VAT1", Storage:="_VAT2", ThisKey:="VATS2", OtherKey:="VAT", IsForeignKey:=true)>  _
		Public Property VAT2() As VAT
			Get
				Return Me._VAT2.Entity
			End Get
			Set
				Dim previousValue As VAT = Me._VAT2.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._VAT2.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._VAT2.Entity = Nothing
						previousValue.VATs4.Remove(Me)
					End If
					Me._VAT2.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.VATs4.Add(Me)
						Me._VATS2 = value.VAT
					Else
						Me._VATS2 = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("VAT2")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_VATs(ByVal entity As VAT)
			Me.SendPropertyChanging
			entity.VAT1 = Me
		End Sub
		
		Private Sub detach_VATs(ByVal entity As VAT)
			Me.SendPropertyChanging
			entity.VAT1 = Nothing
		End Sub
		
		Private Sub attach_VATs4(ByVal entity As VAT)
			Me.SendPropertyChanging
			entity.VAT2 = Me
		End Sub
		
		Private Sub detach_VATs4(ByVal entity As VAT)
			Me.SendPropertyChanging
			entity.VAT2 = Nothing
		End Sub
		
		Private Sub attach_MTRLs(ByVal entity As MTRL)
			Me.SendPropertyChanging
			entity.VAT1 = Me
		End Sub
		
		Private Sub detach_MTRLs(ByVal entity As MTRL)
			Me.SendPropertyChanging
			entity.VAT1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRDFLINES")>  _
	Partial Public Class TRDFLINE
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _FINDOC As Integer
		
		Private _TRDFLINES As Integer
		
		Private _TRDFGROUP As Integer
		
		Private _LINENUM As Integer
		
		Private _SODTYPE As Short
		
		Private _SOSOURCE As Integer
		
		Private _SOREDIR As Integer
		
		Private _SOPAYTYPE As Short
		
		Private _TPRMS As System.Nullable(Of Short)
		
		Private _CHEQUE As System.Nullable(Of Integer)
		
		Private _VOUCHER As System.Nullable(Of Integer)
		
		Private _TRDRPOSSESSOR As System.Nullable(Of Integer)
		
		Private _HOLDERNAME As String
		
		Private _HOLDERADDR As String
		
		Private _SODTYPE1 As System.Nullable(Of Short)
		
		Private _TPRMS1 As System.Nullable(Of Short)
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _TRDBRANCH As System.Nullable(Of Integer)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _COLLECTOR As System.Nullable(Of Integer)
		
		Private _PRJC As System.Nullable(Of Integer)
		
		Private _PRJLINES As System.Nullable(Of Integer)
		
		Private _PRJCSTAGE As System.Nullable(Of Short)
		
		Private _MTRPRJCBLD As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _SOCURRENCY As Short
		
		Private _LRATE As Double
		
		Private _TRDRRATE As Double
		
		Private _LINEVAL As Double
		
		Private _TLINEVAL As Double
		
		Private _LLINEVAL As Double
		
		Private _COMMENTS As String
		
		Private _CREDITCARDS As System.Nullable(Of Short)
		
		Private _CRDCARDNUM As String
		
		Private _INSTALMENTS As System.Nullable(Of Short)
		
		Private _CRDMACHINE As System.Nullable(Of Short)
		
		Private _PACKNUM As String
		
		Private _FOLDER As System.Nullable(Of Short)
		
		Private _PAYDATE As System.Nullable(Of Date)
		
		Private _FINDOCS As System.Nullable(Of Integer)
		
		Private _TRDFLINESS As System.Nullable(Of Integer)
		
		Private _BNKRECEIPTNO As System.Nullable(Of Integer)
		
		Private _NUM01 As System.Nullable(Of Double)
		
		Private _NUM02 As System.Nullable(Of Double)
		
		Private _NUM03 As System.Nullable(Of Double)
		
		Private _NUM04 As System.Nullable(Of Double)
		
		Private _BOOL01 As System.Nullable(Of Short)
		
		Private _BOOL02 As System.Nullable(Of Short)
		
		Private _DATE01 As System.Nullable(Of Date)
		
		Private _DATE02 As System.Nullable(Of Date)
		
		Private _UFTBL01 As System.Nullable(Of Short)
		
		Private _UFTBL02 As System.Nullable(Of Short)
		
		Private _ACNDOCCATEGORY As System.Nullable(Of Integer)
		
		Private _INST As System.Nullable(Of Integer)
		
		Private _CNTR As System.Nullable(Of Integer)
		
		Private _ACNMSK As String
		
		Private _CHEQUEs As EntitySet(Of CHEQUE)
		
		Private _CHEQUE1 As EntityRef(Of CHEQUE)
		
		Private _TRDR1 As EntityRef(Of TRDR)
		
		Private _FINDOC1 As EntityRef(Of FINDOC)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnFINDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINDOCChanged()
    End Sub
    Partial Private Sub OnTRDFLINESChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDFLINESChanged()
    End Sub
    Partial Private Sub OnTRDFGROUPChanging(value As Integer)
    End Sub
    Partial Private Sub OnTRDFGROUPChanged()
    End Sub
    Partial Private Sub OnLINENUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnLINENUMChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnSOREDIRChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOREDIRChanged()
    End Sub
    Partial Private Sub OnSOPAYTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSOPAYTYPEChanged()
    End Sub
    Partial Private Sub OnTPRMSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTPRMSChanged()
    End Sub
    Partial Private Sub OnCHEQUEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHEQUEChanged()
    End Sub
    Partial Private Sub OnVOUCHERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVOUCHERChanged()
    End Sub
    Partial Private Sub OnTRDRPOSSESSORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRPOSSESSORChanged()
    End Sub
    Partial Private Sub OnHOLDERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHOLDERNAMEChanged()
    End Sub
    Partial Private Sub OnHOLDERADDRChanging(value As String)
    End Sub
    Partial Private Sub OnHOLDERADDRChanged()
    End Sub
    Partial Private Sub OnSODTYPE1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSODTYPE1Changed()
    End Sub
    Partial Private Sub OnTPRMS1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTPRMS1Changed()
    End Sub
    Partial Private Sub OnTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnSALESMANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALESMANChanged()
    End Sub
    Partial Private Sub OnCOLLECTORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOLLECTORChanged()
    End Sub
    Partial Private Sub OnPRJCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJCChanged()
    End Sub
    Partial Private Sub OnPRJLINESChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJLINESChanged()
    End Sub
    Partial Private Sub OnPRJCSTAGEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRJCSTAGEChanged()
    End Sub
    Partial Private Sub OnMTRPRJCBLDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRPRJCBLDChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCURRENCYChanged()
    End Sub
    Partial Private Sub OnLRATEChanging(value As Double)
    End Sub
    Partial Private Sub OnLRATEChanged()
    End Sub
    Partial Private Sub OnTRDRRATEChanging(value As Double)
    End Sub
    Partial Private Sub OnTRDRRATEChanged()
    End Sub
    Partial Private Sub OnLINEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnLINEVALChanged()
    End Sub
    Partial Private Sub OnTLINEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnTLINEVALChanged()
    End Sub
    Partial Private Sub OnLLINEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnLLINEVALChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnCREDITCARDSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCREDITCARDSChanged()
    End Sub
    Partial Private Sub OnCRDCARDNUMChanging(value As String)
    End Sub
    Partial Private Sub OnCRDCARDNUMChanged()
    End Sub
    Partial Private Sub OnINSTALMENTSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSTALMENTSChanged()
    End Sub
    Partial Private Sub OnCRDMACHINEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRDMACHINEChanged()
    End Sub
    Partial Private Sub OnPACKNUMChanging(value As String)
    End Sub
    Partial Private Sub OnPACKNUMChanged()
    End Sub
    Partial Private Sub OnFOLDERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFOLDERChanged()
    End Sub
    Partial Private Sub OnPAYDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPAYDATEChanged()
    End Sub
    Partial Private Sub OnFINDOCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCSChanged()
    End Sub
    Partial Private Sub OnTRDFLINESSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDFLINESSChanged()
    End Sub
    Partial Private Sub OnBNKRECEIPTNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBNKRECEIPTNOChanged()
    End Sub
    Partial Private Sub OnNUM01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM01Changed()
    End Sub
    Partial Private Sub OnNUM02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM02Changed()
    End Sub
    Partial Private Sub OnNUM03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM03Changed()
    End Sub
    Partial Private Sub OnNUM04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM04Changed()
    End Sub
    Partial Private Sub OnBOOL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBOOL01Changed()
    End Sub
    Partial Private Sub OnBOOL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBOOL02Changed()
    End Sub
    Partial Private Sub OnDATE01Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE01Changed()
    End Sub
    Partial Private Sub OnDATE02Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE02Changed()
    End Sub
    Partial Private Sub OnUFTBL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUFTBL01Changed()
    End Sub
    Partial Private Sub OnUFTBL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUFTBL02Changed()
    End Sub
    Partial Private Sub OnACNDOCCATEGORYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACNDOCCATEGORYChanged()
    End Sub
    Partial Private Sub OnINSTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINSTChanged()
    End Sub
    Partial Private Sub OnCNTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCNTRChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._CHEQUEs = New EntitySet(Of CHEQUE)(AddressOf Me.attach_CHEQUEs, AddressOf Me.detach_CHEQUEs)
			Me._CHEQUE1 = CType(Nothing, EntityRef(Of CHEQUE))
			Me._TRDR1 = CType(Nothing, EntityRef(Of TRDR))
			Me._FINDOC1 = CType(Nothing, EntityRef(Of FINDOC))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					If Me._FINDOC1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOC = value
					Me.SendPropertyChanged("FINDOC")
					Me.OnFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDFLINES", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TRDFLINES() As Integer
			Get
				Return Me._TRDFLINES
			End Get
			Set
				If ((Me._TRDFLINES = value)  _
							= false) Then
					Me.OnTRDFLINESChanging(value)
					Me.SendPropertyChanging
					Me._TRDFLINES = value
					Me.SendPropertyChanged("TRDFLINES")
					Me.OnTRDFLINESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDFGROUP", DbType:="Int NOT NULL")>  _
		Public Property TRDFGROUP() As Integer
			Get
				Return Me._TRDFGROUP
			End Get
			Set
				If ((Me._TRDFGROUP = value)  _
							= false) Then
					Me.OnTRDFGROUPChanging(value)
					Me.SendPropertyChanging
					Me._TRDFGROUP = value
					Me.SendPropertyChanged("TRDFGROUP")
					Me.OnTRDFGROUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINENUM", DbType:="Int NOT NULL")>  _
		Public Property LINENUM() As Integer
			Get
				Return Me._LINENUM
			End Get
			Set
				If ((Me._LINENUM = value)  _
							= false) Then
					Me.OnLINENUMChanging(value)
					Me.SendPropertyChanging
					Me._LINENUM = value
					Me.SendPropertyChanged("LINENUM")
					Me.OnLINENUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL")>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOREDIR", DbType:="Int NOT NULL")>  _
		Public Property SOREDIR() As Integer
			Get
				Return Me._SOREDIR
			End Get
			Set
				If ((Me._SOREDIR = value)  _
							= false) Then
					Me.OnSOREDIRChanging(value)
					Me.SendPropertyChanging
					Me._SOREDIR = value
					Me.SendPropertyChanged("SOREDIR")
					Me.OnSOREDIRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPAYTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SOPAYTYPE() As Short
			Get
				Return Me._SOPAYTYPE
			End Get
			Set
				If ((Me._SOPAYTYPE = value)  _
							= false) Then
					Me.OnSOPAYTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SOPAYTYPE = value
					Me.SendPropertyChanged("SOPAYTYPE")
					Me.OnSOPAYTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPRMS", DbType:="SmallInt")>  _
		Public Property TPRMS() As System.Nullable(Of Short)
			Get
				Return Me._TPRMS
			End Get
			Set
				If (Me._TPRMS.Equals(value) = false) Then
					Me.OnTPRMSChanging(value)
					Me.SendPropertyChanging
					Me._TPRMS = value
					Me.SendPropertyChanged("TPRMS")
					Me.OnTPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUE", DbType:="Int")>  _
		Public Property CHEQUE() As System.Nullable(Of Integer)
			Get
				Return Me._CHEQUE
			End Get
			Set
				If (Me._CHEQUE.Equals(value) = false) Then
					If Me._CHEQUE1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCHEQUEChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUE = value
					Me.SendPropertyChanged("CHEQUE")
					Me.OnCHEQUEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOUCHER", DbType:="Int")>  _
		Public Property VOUCHER() As System.Nullable(Of Integer)
			Get
				Return Me._VOUCHER
			End Get
			Set
				If (Me._VOUCHER.Equals(value) = false) Then
					Me.OnVOUCHERChanging(value)
					Me.SendPropertyChanging
					Me._VOUCHER = value
					Me.SendPropertyChanged("VOUCHER")
					Me.OnVOUCHERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRPOSSESSOR", DbType:="Int")>  _
		Public Property TRDRPOSSESSOR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRPOSSESSOR
			End Get
			Set
				If (Me._TRDRPOSSESSOR.Equals(value) = false) Then
					Me.OnTRDRPOSSESSORChanging(value)
					Me.SendPropertyChanging
					Me._TRDRPOSSESSOR = value
					Me.SendPropertyChanged("TRDRPOSSESSOR")
					Me.OnTRDRPOSSESSORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLDERNAME", DbType:="VarChar(64)")>  _
		Public Property HOLDERNAME() As String
			Get
				Return Me._HOLDERNAME
			End Get
			Set
				If (String.Equals(Me._HOLDERNAME, value) = false) Then
					Me.OnHOLDERNAMEChanging(value)
					Me.SendPropertyChanging
					Me._HOLDERNAME = value
					Me.SendPropertyChanged("HOLDERNAME")
					Me.OnHOLDERNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLDERADDR", DbType:="VarChar(30)")>  _
		Public Property HOLDERADDR() As String
			Get
				Return Me._HOLDERADDR
			End Get
			Set
				If (String.Equals(Me._HOLDERADDR, value) = false) Then
					Me.OnHOLDERADDRChanging(value)
					Me.SendPropertyChanging
					Me._HOLDERADDR = value
					Me.SendPropertyChanged("HOLDERADDR")
					Me.OnHOLDERADDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE1", DbType:="SmallInt")>  _
		Public Property SODTYPE1() As System.Nullable(Of Short)
			Get
				Return Me._SODTYPE1
			End Get
			Set
				If (Me._SODTYPE1.Equals(value) = false) Then
					Me.OnSODTYPE1Changing(value)
					Me.SendPropertyChanging
					Me._SODTYPE1 = value
					Me.SendPropertyChanged("SODTYPE1")
					Me.OnSODTYPE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPRMS1", DbType:="SmallInt")>  _
		Public Property TPRMS1() As System.Nullable(Of Short)
			Get
				Return Me._TPRMS1
			End Get
			Set
				If (Me._TPRMS1.Equals(value) = false) Then
					Me.OnTPRMS1Changing(value)
					Me.SendPropertyChanging
					Me._TPRMS1 = value
					Me.SendPropertyChanged("TPRMS1")
					Me.OnTPRMS1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					If Me._TRDR1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int")>  _
		Public Property TRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If (Me._TRDBRANCH.Equals(value) = false) Then
					Me.OnTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCH = value
					Me.SendPropertyChanged("TRDBRANCH")
					Me.OnTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					Me.OnSALESMANChanging(value)
					Me.SendPropertyChanging
					Me._SALESMAN = value
					Me.SendPropertyChanged("SALESMAN")
					Me.OnSALESMANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLLECTOR", DbType:="Int")>  _
		Public Property COLLECTOR() As System.Nullable(Of Integer)
			Get
				Return Me._COLLECTOR
			End Get
			Set
				If (Me._COLLECTOR.Equals(value) = false) Then
					Me.OnCOLLECTORChanging(value)
					Me.SendPropertyChanging
					Me._COLLECTOR = value
					Me.SendPropertyChanged("COLLECTOR")
					Me.OnCOLLECTORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJC", DbType:="Int")>  _
		Public Property PRJC() As System.Nullable(Of Integer)
			Get
				Return Me._PRJC
			End Get
			Set
				If (Me._PRJC.Equals(value) = false) Then
					Me.OnPRJCChanging(value)
					Me.SendPropertyChanging
					Me._PRJC = value
					Me.SendPropertyChanged("PRJC")
					Me.OnPRJCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJLINES", DbType:="Int")>  _
		Public Property PRJLINES() As System.Nullable(Of Integer)
			Get
				Return Me._PRJLINES
			End Get
			Set
				If (Me._PRJLINES.Equals(value) = false) Then
					Me.OnPRJLINESChanging(value)
					Me.SendPropertyChanging
					Me._PRJLINES = value
					Me.SendPropertyChanged("PRJLINES")
					Me.OnPRJLINESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJCSTAGE", DbType:="SmallInt")>  _
		Public Property PRJCSTAGE() As System.Nullable(Of Short)
			Get
				Return Me._PRJCSTAGE
			End Get
			Set
				If (Me._PRJCSTAGE.Equals(value) = false) Then
					Me.OnPRJCSTAGEChanging(value)
					Me.SendPropertyChanging
					Me._PRJCSTAGE = value
					Me.SendPropertyChanged("PRJCSTAGE")
					Me.OnPRJCSTAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRPRJCBLD", DbType:="SmallInt")>  _
		Public Property MTRPRJCBLD() As System.Nullable(Of Short)
			Get
				Return Me._MTRPRJCBLD
			End Get
			Set
				If (Me._MTRPRJCBLD.Equals(value) = false) Then
					Me.OnMTRPRJCBLDChanging(value)
					Me.SendPropertyChanging
					Me._MTRPRJCBLD = value
					Me.SendPropertyChanged("MTRPRJCBLD")
					Me.OnMTRPRJCBLDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me.OnSOCURRENCYChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCY = value
					Me.SendPropertyChanged("SOCURRENCY")
					Me.OnSOCURRENCYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LRATE", DbType:="Float NOT NULL")>  _
		Public Property LRATE() As Double
			Get
				Return Me._LRATE
			End Get
			Set
				If ((Me._LRATE = value)  _
							= false) Then
					Me.OnLRATEChanging(value)
					Me.SendPropertyChanging
					Me._LRATE = value
					Me.SendPropertyChanged("LRATE")
					Me.OnLRATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRRATE", DbType:="Float NOT NULL")>  _
		Public Property TRDRRATE() As Double
			Get
				Return Me._TRDRRATE
			End Get
			Set
				If ((Me._TRDRRATE = value)  _
							= false) Then
					Me.OnTRDRRATEChanging(value)
					Me.SendPropertyChanging
					Me._TRDRRATE = value
					Me.SendPropertyChanged("TRDRRATE")
					Me.OnTRDRRATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINEVAL", DbType:="Float NOT NULL")>  _
		Public Property LINEVAL() As Double
			Get
				Return Me._LINEVAL
			End Get
			Set
				If ((Me._LINEVAL = value)  _
							= false) Then
					Me.OnLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._LINEVAL = value
					Me.SendPropertyChanged("LINEVAL")
					Me.OnLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TLINEVAL", DbType:="Float NOT NULL")>  _
		Public Property TLINEVAL() As Double
			Get
				Return Me._TLINEVAL
			End Get
			Set
				If ((Me._TLINEVAL = value)  _
							= false) Then
					Me.OnTLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._TLINEVAL = value
					Me.SendPropertyChanged("TLINEVAL")
					Me.OnTLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LLINEVAL", DbType:="Float NOT NULL")>  _
		Public Property LLINEVAL() As Double
			Get
				Return Me._LLINEVAL
			End Get
			Set
				If ((Me._LLINEVAL = value)  _
							= false) Then
					Me.OnLLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._LLINEVAL = value
					Me.SendPropertyChanged("LLINEVAL")
					Me.OnLLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREDITCARDS", DbType:="SmallInt")>  _
		Public Property CREDITCARDS() As System.Nullable(Of Short)
			Get
				Return Me._CREDITCARDS
			End Get
			Set
				If (Me._CREDITCARDS.Equals(value) = false) Then
					Me.OnCREDITCARDSChanging(value)
					Me.SendPropertyChanging
					Me._CREDITCARDS = value
					Me.SendPropertyChanged("CREDITCARDS")
					Me.OnCREDITCARDSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDCARDNUM", DbType:="VarChar(50)")>  _
		Public Property CRDCARDNUM() As String
			Get
				Return Me._CRDCARDNUM
			End Get
			Set
				If (String.Equals(Me._CRDCARDNUM, value) = false) Then
					Me.OnCRDCARDNUMChanging(value)
					Me.SendPropertyChanging
					Me._CRDCARDNUM = value
					Me.SendPropertyChanged("CRDCARDNUM")
					Me.OnCRDCARDNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTALMENTS", DbType:="SmallInt")>  _
		Public Property INSTALMENTS() As System.Nullable(Of Short)
			Get
				Return Me._INSTALMENTS
			End Get
			Set
				If (Me._INSTALMENTS.Equals(value) = false) Then
					Me.OnINSTALMENTSChanging(value)
					Me.SendPropertyChanging
					Me._INSTALMENTS = value
					Me.SendPropertyChanged("INSTALMENTS")
					Me.OnINSTALMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDMACHINE", DbType:="SmallInt")>  _
		Public Property CRDMACHINE() As System.Nullable(Of Short)
			Get
				Return Me._CRDMACHINE
			End Get
			Set
				If (Me._CRDMACHINE.Equals(value) = false) Then
					Me.OnCRDMACHINEChanging(value)
					Me.SendPropertyChanging
					Me._CRDMACHINE = value
					Me.SendPropertyChanged("CRDMACHINE")
					Me.OnCRDMACHINEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKNUM", DbType:="VarChar(30)")>  _
		Public Property PACKNUM() As String
			Get
				Return Me._PACKNUM
			End Get
			Set
				If (String.Equals(Me._PACKNUM, value) = false) Then
					Me.OnPACKNUMChanging(value)
					Me.SendPropertyChanging
					Me._PACKNUM = value
					Me.SendPropertyChanged("PACKNUM")
					Me.OnPACKNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOLDER", DbType:="SmallInt")>  _
		Public Property FOLDER() As System.Nullable(Of Short)
			Get
				Return Me._FOLDER
			End Get
			Set
				If (Me._FOLDER.Equals(value) = false) Then
					Me.OnFOLDERChanging(value)
					Me.SendPropertyChanging
					Me._FOLDER = value
					Me.SendPropertyChanged("FOLDER")
					Me.OnFOLDERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYDATE", DbType:="DateTime")>  _
		Public Property PAYDATE() As System.Nullable(Of Date)
			Get
				Return Me._PAYDATE
			End Get
			Set
				If (Me._PAYDATE.Equals(value) = false) Then
					Me.OnPAYDATEChanging(value)
					Me.SendPropertyChanging
					Me._PAYDATE = value
					Me.SendPropertyChanged("PAYDATE")
					Me.OnPAYDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCS", DbType:="Int")>  _
		Public Property FINDOCS() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCS
			End Get
			Set
				If (Me._FINDOCS.Equals(value) = false) Then
					Me.OnFINDOCSChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCS = value
					Me.SendPropertyChanged("FINDOCS")
					Me.OnFINDOCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDFLINESS", DbType:="Int")>  _
		Public Property TRDFLINESS() As System.Nullable(Of Integer)
			Get
				Return Me._TRDFLINESS
			End Get
			Set
				If (Me._TRDFLINESS.Equals(value) = false) Then
					Me.OnTRDFLINESSChanging(value)
					Me.SendPropertyChanging
					Me._TRDFLINESS = value
					Me.SendPropertyChanged("TRDFLINESS")
					Me.OnTRDFLINESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BNKRECEIPTNO", DbType:="Int")>  _
		Public Property BNKRECEIPTNO() As System.Nullable(Of Integer)
			Get
				Return Me._BNKRECEIPTNO
			End Get
			Set
				If (Me._BNKRECEIPTNO.Equals(value) = false) Then
					Me.OnBNKRECEIPTNOChanging(value)
					Me.SendPropertyChanging
					Me._BNKRECEIPTNO = value
					Me.SendPropertyChanged("BNKRECEIPTNO")
					Me.OnBNKRECEIPTNOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM01", DbType:="Float")>  _
		Public Property NUM01() As System.Nullable(Of Double)
			Get
				Return Me._NUM01
			End Get
			Set
				If (Me._NUM01.Equals(value) = false) Then
					Me.OnNUM01Changing(value)
					Me.SendPropertyChanging
					Me._NUM01 = value
					Me.SendPropertyChanged("NUM01")
					Me.OnNUM01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM02", DbType:="Float")>  _
		Public Property NUM02() As System.Nullable(Of Double)
			Get
				Return Me._NUM02
			End Get
			Set
				If (Me._NUM02.Equals(value) = false) Then
					Me.OnNUM02Changing(value)
					Me.SendPropertyChanging
					Me._NUM02 = value
					Me.SendPropertyChanged("NUM02")
					Me.OnNUM02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM03", DbType:="Float")>  _
		Public Property NUM03() As System.Nullable(Of Double)
			Get
				Return Me._NUM03
			End Get
			Set
				If (Me._NUM03.Equals(value) = false) Then
					Me.OnNUM03Changing(value)
					Me.SendPropertyChanging
					Me._NUM03 = value
					Me.SendPropertyChanged("NUM03")
					Me.OnNUM03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM04", DbType:="Float")>  _
		Public Property NUM04() As System.Nullable(Of Double)
			Get
				Return Me._NUM04
			End Get
			Set
				If (Me._NUM04.Equals(value) = false) Then
					Me.OnNUM04Changing(value)
					Me.SendPropertyChanging
					Me._NUM04 = value
					Me.SendPropertyChanged("NUM04")
					Me.OnNUM04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL01", DbType:="SmallInt")>  _
		Public Property BOOL01() As System.Nullable(Of Short)
			Get
				Return Me._BOOL01
			End Get
			Set
				If (Me._BOOL01.Equals(value) = false) Then
					Me.OnBOOL01Changing(value)
					Me.SendPropertyChanging
					Me._BOOL01 = value
					Me.SendPropertyChanged("BOOL01")
					Me.OnBOOL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL02", DbType:="SmallInt")>  _
		Public Property BOOL02() As System.Nullable(Of Short)
			Get
				Return Me._BOOL02
			End Get
			Set
				If (Me._BOOL02.Equals(value) = false) Then
					Me.OnBOOL02Changing(value)
					Me.SendPropertyChanging
					Me._BOOL02 = value
					Me.SendPropertyChanged("BOOL02")
					Me.OnBOOL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE01", DbType:="DateTime")>  _
		Public Property DATE01() As System.Nullable(Of Date)
			Get
				Return Me._DATE01
			End Get
			Set
				If (Me._DATE01.Equals(value) = false) Then
					Me.OnDATE01Changing(value)
					Me.SendPropertyChanging
					Me._DATE01 = value
					Me.SendPropertyChanged("DATE01")
					Me.OnDATE01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE02", DbType:="DateTime")>  _
		Public Property DATE02() As System.Nullable(Of Date)
			Get
				Return Me._DATE02
			End Get
			Set
				If (Me._DATE02.Equals(value) = false) Then
					Me.OnDATE02Changing(value)
					Me.SendPropertyChanging
					Me._DATE02 = value
					Me.SendPropertyChanged("DATE02")
					Me.OnDATE02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UFTBL01", DbType:="SmallInt")>  _
		Public Property UFTBL01() As System.Nullable(Of Short)
			Get
				Return Me._UFTBL01
			End Get
			Set
				If (Me._UFTBL01.Equals(value) = false) Then
					Me.OnUFTBL01Changing(value)
					Me.SendPropertyChanging
					Me._UFTBL01 = value
					Me.SendPropertyChanged("UFTBL01")
					Me.OnUFTBL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UFTBL02", DbType:="SmallInt")>  _
		Public Property UFTBL02() As System.Nullable(Of Short)
			Get
				Return Me._UFTBL02
			End Get
			Set
				If (Me._UFTBL02.Equals(value) = false) Then
					Me.OnUFTBL02Changing(value)
					Me.SendPropertyChanging
					Me._UFTBL02 = value
					Me.SendPropertyChanged("UFTBL02")
					Me.OnUFTBL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNDOCCATEGORY", DbType:="Int")>  _
		Public Property ACNDOCCATEGORY() As System.Nullable(Of Integer)
			Get
				Return Me._ACNDOCCATEGORY
			End Get
			Set
				If (Me._ACNDOCCATEGORY.Equals(value) = false) Then
					Me.OnACNDOCCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._ACNDOCCATEGORY = value
					Me.SendPropertyChanged("ACNDOCCATEGORY")
					Me.OnACNDOCCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INST", DbType:="Int")>  _
		Public Property INST() As System.Nullable(Of Integer)
			Get
				Return Me._INST
			End Get
			Set
				If (Me._INST.Equals(value) = false) Then
					Me.OnINSTChanging(value)
					Me.SendPropertyChanging
					Me._INST = value
					Me.SendPropertyChanged("INST")
					Me.OnINSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTR", DbType:="Int")>  _
		Public Property CNTR() As System.Nullable(Of Integer)
			Get
				Return Me._CNTR
			End Get
			Set
				If (Me._CNTR.Equals(value) = false) Then
					Me.OnCNTRChanging(value)
					Me.SendPropertyChanging
					Me._CNTR = value
					Me.SendPropertyChanged("CNTR")
					Me.OnCNTRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDFLINE_CHEQUE", Storage:="_CHEQUEs", ThisKey:="FINDOC,TRDFLINES", OtherKey:="FINDOCC,TRDFLINESC")>  _
		Public Property CHEQUEs() As EntitySet(Of CHEQUE)
			Get
				Return Me._CHEQUEs
			End Get
			Set
				Me._CHEQUEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CHEQUE_TRDFLINE", Storage:="_CHEQUE1", ThisKey:="CHEQUE", OtherKey:="CHEQUE", IsForeignKey:=true)>  _
		Public Property CHEQUE1() As CHEQUE
			Get
				Return Me._CHEQUE1.Entity
			End Get
			Set
				Dim previousValue As CHEQUE = Me._CHEQUE1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._CHEQUE1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._CHEQUE1.Entity = Nothing
						previousValue.TRDFLINEs.Remove(Me)
					End If
					Me._CHEQUE1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDFLINEs.Add(Me)
						Me._CHEQUE = value.CHEQUE
					Else
						Me._CHEQUE = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("CHEQUE1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_TRDFLINE", Storage:="_TRDR1", ThisKey:="TRDR", OtherKey:="TRDR", IsForeignKey:=true)>  _
		Public Property TRDR1() As TRDR
			Get
				Return Me._TRDR1.Entity
			End Get
			Set
				Dim previousValue As TRDR = Me._TRDR1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDR1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDR1.Entity = Nothing
						previousValue.TRDFLINEs.Remove(Me)
					End If
					Me._TRDR1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDFLINEs.Add(Me)
						Me._TRDR = value.TRDR
					Else
						Me._TRDR = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("TRDR1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_TRDFLINE", Storage:="_FINDOC1", ThisKey:="FINDOC", OtherKey:="FINDOC", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property FINDOC1() As FINDOC
			Get
				Return Me._FINDOC1.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC1.Entity = Nothing
						previousValue.TRDFLINEs.Remove(Me)
					End If
					Me._FINDOC1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TRDFLINEs.Add(Me)
						Me._FINDOC = value.FINDOC
					Else
						Me._FINDOC = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("FINDOC1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_CHEQUEs(ByVal entity As CHEQUE)
			Me.SendPropertyChanging
			entity.TRDFLINE = Me
		End Sub
		
		Private Sub detach_CHEQUEs(ByVal entity As CHEQUE)
			Me.SendPropertyChanging
			entity.TRDFLINE = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHQTPRMS")>  _
	Partial Public Class CHQTPRM
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SODTYPE As Short
		
		Private _TPRMS As Short
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
		Private _CHEQUEUPD As Short
		
		Private _CHEQUESTATES As Short
		
		Private _SODTYPEPOSSESSOR As Short
		
		Private _PREVCHQSTATES As String
		
		Private _PREVTRDSTATES As String
		
		Private _CHEQUETYPE As String
		
		Private _ISBLOCKED As Short
		
		Private _ACNMSK As String
		
		Private _ACNMSK1 As String
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnTPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnTPRMSChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnCHEQUEUPDChanging(value As Short)
    End Sub
    Partial Private Sub OnCHEQUEUPDChanged()
    End Sub
    Partial Private Sub OnCHEQUESTATESChanging(value As Short)
    End Sub
    Partial Private Sub OnCHEQUESTATESChanged()
    End Sub
    Partial Private Sub OnSODTYPEPOSSESSORChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEPOSSESSORChanged()
    End Sub
    Partial Private Sub OnPREVCHQSTATESChanging(value As String)
    End Sub
    Partial Private Sub OnPREVCHQSTATESChanged()
    End Sub
    Partial Private Sub OnPREVTRDSTATESChanging(value As String)
    End Sub
    Partial Private Sub OnPREVTRDSTATESChanged()
    End Sub
    Partial Private Sub OnCHEQUETYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCHEQUETYPEChanged()
    End Sub
    Partial Private Sub OnISBLOCKEDChanging(value As Short)
    End Sub
    Partial Private Sub OnISBLOCKEDChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnACNMSK1Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK1Changed()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPRMS", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TPRMS() As Short
			Get
				Return Me._TPRMS
			End Get
			Set
				If ((Me._TPRMS = value)  _
							= false) Then
					Me.OnTPRMSChanging(value)
					Me.SendPropertyChanging
					Me._TPRMS = value
					Me.SendPropertyChanged("TPRMS")
					Me.OnTPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEUPD", DbType:="SmallInt NOT NULL")>  _
		Public Property CHEQUEUPD() As Short
			Get
				Return Me._CHEQUEUPD
			End Get
			Set
				If ((Me._CHEQUEUPD = value)  _
							= false) Then
					Me.OnCHEQUEUPDChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUEUPD = value
					Me.SendPropertyChanged("CHEQUEUPD")
					Me.OnCHEQUEUPDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUESTATES", DbType:="SmallInt NOT NULL")>  _
		Public Property CHEQUESTATES() As Short
			Get
				Return Me._CHEQUESTATES
			End Get
			Set
				If ((Me._CHEQUESTATES = value)  _
							= false) Then
					Me.OnCHEQUESTATESChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUESTATES = value
					Me.SendPropertyChanged("CHEQUESTATES")
					Me.OnCHEQUESTATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPEPOSSESSOR", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPEPOSSESSOR() As Short
			Get
				Return Me._SODTYPEPOSSESSOR
			End Get
			Set
				If ((Me._SODTYPEPOSSESSOR = value)  _
							= false) Then
					Me.OnSODTYPEPOSSESSORChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPEPOSSESSOR = value
					Me.SendPropertyChanged("SODTYPEPOSSESSOR")
					Me.OnSODTYPEPOSSESSORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREVCHQSTATES", DbType:="VarChar(255)")>  _
		Public Property PREVCHQSTATES() As String
			Get
				Return Me._PREVCHQSTATES
			End Get
			Set
				If (String.Equals(Me._PREVCHQSTATES, value) = false) Then
					Me.OnPREVCHQSTATESChanging(value)
					Me.SendPropertyChanging
					Me._PREVCHQSTATES = value
					Me.SendPropertyChanged("PREVCHQSTATES")
					Me.OnPREVCHQSTATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREVTRDSTATES", DbType:="VarChar(50)")>  _
		Public Property PREVTRDSTATES() As String
			Get
				Return Me._PREVTRDSTATES
			End Get
			Set
				If (String.Equals(Me._PREVTRDSTATES, value) = false) Then
					Me.OnPREVTRDSTATESChanging(value)
					Me.SendPropertyChanging
					Me._PREVTRDSTATES = value
					Me.SendPropertyChanged("PREVTRDSTATES")
					Me.OnPREVTRDSTATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUETYPE", DbType:="VarChar(20)")>  _
		Public Property CHEQUETYPE() As String
			Get
				Return Me._CHEQUETYPE
			End Get
			Set
				If (String.Equals(Me._CHEQUETYPE, value) = false) Then
					Me.OnCHEQUETYPEChanging(value)
					Me.SendPropertyChanging
					Me._CHEQUETYPE = value
					Me.SendPropertyChanged("CHEQUETYPE")
					Me.OnCHEQUETYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISBLOCKED", DbType:="SmallInt NOT NULL")>  _
		Public Property ISBLOCKED() As Short
			Get
				Return Me._ISBLOCKED
			End Get
			Set
				If ((Me._ISBLOCKED = value)  _
							= false) Then
					Me.OnISBLOCKEDChanging(value)
					Me.SendPropertyChanging
					Me._ISBLOCKED = value
					Me.SendPropertyChanged("ISBLOCKED")
					Me.OnISBLOCKEDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK1", DbType:="VarChar(25)")>  _
		Public Property ACNMSK1() As String
			Get
				Return Me._ACNMSK1
			End Get
			Set
				If (String.Equals(Me._ACNMSK1, value) = false) Then
					Me.OnACNMSK1Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK1 = value
					Me.SendPropertyChanged("ACNMSK1")
					Me.OnACNMSK1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FINDOC")>  _
	Partial Public Class FINDOC
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _FINDOC As Integer
		
		Private _LOCKID As Integer
		
		Private _SOSOURCE As Integer
		
		Private _SOREDIR As Integer
		
		Private _TRNDATE As Date
		
		Private _FISCPRD As Short
		
		Private _PERIOD As Short
		
		Private _SERIES As Short
		
		Private _SERIESNUM As Integer
		
		Private _FPRMS As Short
		
		Private _TFPRMS As Short
		
		Private _FINCODE As String
		
		Private _BRANCH As Short
		
		Private _SODTYPE As Short
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _TRDBRANCH As System.Nullable(Of Integer)
		
		Private _VATSTS As System.Nullable(Of Short)
		
		Private _VATPROVISIONS As System.Nullable(Of Short)
		
		Private _GASCUSTYPE As System.Nullable(Of Short)
		
		Private _SOCURRENCY As Short
		
		Private _TRDRRATE As Double
		
		Private _LRATE As Double
		
		Private _SOCURRENCYREF As System.Nullable(Of Short)
		
		Private _FINDOCS As System.Nullable(Of Integer)
		
		Private _MTRLINESS As System.Nullable(Of Integer)
		
		Private _FINDOCSRV As System.Nullable(Of Integer)
		
		Private _FINDOCPAY As System.Nullable(Of Integer)
		
		Private _FINDOCSX As System.Nullable(Of Integer)
		
		Private _FINDOCG As System.Nullable(Of Integer)
		
		Private _ORIGIN As Short
		
		Private _GLUPD As Short
		
		Private _SXUPD As Short
		
		Private _ACNEDIT As System.Nullable(Of Integer)
		
		Private _PRDCOST As Short
		
		Private _PROCDEF As System.Nullable(Of Short)
		
		Private _COMMENTS As String
		
		Private _COMMENTS1 As String
		
		Private _ISCANCEL As Short
		
		Private _ISPRINT As Short
		
		Private _ISREADONLY As Short
		
		Private _APPRVDATE As System.Nullable(Of Date)
		
		Private _APPRVUSER As System.Nullable(Of Short)
		
		Private _APPRV As Short
		
		Private _CONVMODE As System.Nullable(Of Short)
		
		Private _FULLYTRANSF As Short
		
		Private _FINSTATES As System.Nullable(Of Short)
		
		Private _SHIPKIND As System.Nullable(Of Short)
		
		Private _SHIPMENT As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _PAYMENT As System.Nullable(Of Short)
		
		Private _PRCPOLICY As System.Nullable(Of Short)
		
		Private _CRCONTROL As System.Nullable(Of Short)
		
		Private _PRIORITY As System.Nullable(Of Short)
		
		Private _INST As System.Nullable(Of Integer)
		
		Private _PRJC As System.Nullable(Of Integer)
		
		Private _PRJCSTAGE As System.Nullable(Of Short)
		
		Private _PRJLINES As System.Nullable(Of Integer)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _COLLECTOR As System.Nullable(Of Integer)
		
		Private _RSRC As System.Nullable(Of Integer)
		
		Private _CNTR As System.Nullable(Of Integer)
		
		Private _SOCASH As System.Nullable(Of Short)
		
		Private _SOCASHCLS As System.Nullable(Of Integer)
		
		Private _FOLDER As System.Nullable(Of Short)
		
		Private _DEPART As System.Nullable(Of Short)
		
		Private _ACNMSK As String
		
		Private _TRDRS As System.Nullable(Of Integer)
		
		Private _TRDBRANCHS As System.Nullable(Of Integer)
		
		Private _LTYPE1 As Short
		
		Private _LTYPE2 As Short
		
		Private _LTYPE3 As Short
		
		Private _LTYPE4 As Short
		
		Private _SOTIME As System.Nullable(Of Date)
		
		Private _TURNOVR As Double
		
		Private _TTURNOVR As Double
		
		Private _LTURNOVR As Double
		
		Private _VATAMNT As Double
		
		Private _TVATAMNT As Double
		
		Private _LVATAMNT As Double
		
		Private _EXPN As Double
		
		Private _TEXPN As Double
		
		Private _LEXPN As Double
		
		Private _DISC1PRC As Double
		
		Private _DISC1VAL As Double
		
		Private _TDISC1VAL As Double
		
		Private _LDISC1VAL As Double
		
		Private _DISC2PRC As Double
		
		Private _DISC2VAL As Double
		
		Private _TDISC2VAL As Double
		
		Private _LDISC2VAL As Double
		
		Private _NETAMNT As Double
		
		Private _TNETAMNT As Double
		
		Private _LNETAMNT As Double
		
		Private _SUMAMNT As Double
		
		Private _SUMTAMNT As Double
		
		Private _SUMLAMNT As Double
		
		Private _FXDIFFVAL As Double
		
		Private _KEPYOMD As Short
		
		Private _KEPYOHANDMD As System.Nullable(Of Short)
		
		Private _KEPYOQT As Short
		
		Private _LKEPYOVAL As Double
		
		Private _GSISMD As System.Nullable(Of Short)
		
		Private _GSISQTY As System.Nullable(Of Short)
		
		Private _GSISNET As System.Nullable(Of Double)
		
		Private _GSISVAT As System.Nullable(Of Double)
		
		Private _GSISPACKAGES As System.Nullable(Of Short)
		
		Private _GSISFLG As System.Nullable(Of Short)
		
		Private _CHANGEVAL As Double
		
		Private _PRCRULEDATA As String
		
		Private _NOINTRASTAT As System.Nullable(Of Short)
		
		Private _INTDATE As System.Nullable(Of Date)
		
		Private _INTRATE As System.Nullable(Of Double)
		
		Private _INTVAL As System.Nullable(Of Double)
		
		Private _INTEXPN As System.Nullable(Of Double)
		
		Private _INTVAT As System.Nullable(Of Double)
		
		Private _INTFDOCTYPE As String
		
		Private _INTSHIPMENT As String
		
		Private _ISTRIG As Short
		
		Private _BGINTSTATPROC As String
		
		Private _BGINTDELIVERY As String
		
		Private _BGINTDISTRICT As System.Nullable(Of Short)
		
		Private _BGSUBJECT As String
		
		Private _BGOTHRVAT As System.Nullable(Of Short)
		
		Private _BGPARTVAT As System.Nullable(Of Short)
		
		Private _BGDOCDATE As System.Nullable(Of Date)
		
		Private _BGDOCDATE1 As System.Nullable(Of Date)
		
		Private _INSDATEN As System.Nullable(Of Date)
		
		Private _EXDIFFPPERIOD As System.Nullable(Of Short)
		
		Private _CASHDEVICE As System.Nullable(Of Short)
		
		Private _CARDPOINTS As System.Nullable(Of Double)
		
		Private _NEGCARDPOINTS As System.Nullable(Of Double)
		
		Private _BONUSCARD As System.Nullable(Of Integer)
		
		Private _REMARKS As String
		
		Private _VARCHAR01 As String
		
		Private _VARCHAR02 As String
		
		Private _WASTETYPE As String
		
		Private _SOPAYCODE As System.Nullable(Of Short)
		
		Private _COSTCNTR As System.Nullable(Of Integer)
		
		Private _INPAYVAT As System.Nullable(Of Short)
		
		Private _EPAYCODE As String
		
		Private _EINVOICESIGN As String
		
		Private _INT01 As System.Nullable(Of Integer)
		
		Private _INT02 As System.Nullable(Of Integer)
		
		Private _NUM01 As System.Nullable(Of Double)
		
		Private _NUM02 As System.Nullable(Of Double)
		
		Private _NUM03 As System.Nullable(Of Double)
		
		Private _NUM04 As System.Nullable(Of Double)
		
		Private _BOOL01 As System.Nullable(Of Short)
		
		Private _BOOL02 As System.Nullable(Of Short)
		
		Private _DATE01 As System.Nullable(Of Date)
		
		Private _DATE02 As System.Nullable(Of Date)
		
		Private _UFTBL01 As System.Nullable(Of Short)
		
		Private _UFTBL02 As System.Nullable(Of Short)
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _ccCTruckArrived As System.Nullable(Of Short)
		
		Private _ccCTruckEntered As System.Nullable(Of Short)
		
		Private _ACNDOCCATEGORY As System.Nullable(Of Integer)
		
		Private _ccCOpenItem As String
		
		Private _MTRDOC As EntityRef(Of MTRDOC)
		
		Private _FINPAYTERMs As EntitySet(Of FINPAYTERM)
		
		Private _TRDTRNs As EntitySet(Of TRDTRN)
		
		Private _SPCOSTANALs As EntitySet(Of SPCOSTANAL)
		
		Private _TRDFLINEs As EntitySet(Of TRDFLINE)
		
		Private _FINDOCs1 As EntitySet(Of FINDOC)
		
		Private _FINDOCs2 As EntitySet(Of FINDOC)
		
		Private _MTRLINEs As EntitySet(Of MTRLINE)
		
		Private _PRSN As EntityRef(Of PRSN)
		
		Private _FINDOC1 As EntityRef(Of FINDOC)
		
		Private _FINDOC2 As EntityRef(Of FINDOC)
		
		Private _FPRM As EntityRef(Of FPRM)
		
		Private _PRSN1 As EntityRef(Of PRSN)
		
		Private _SERIES1 As EntityRef(Of SERIES)
		
		Private _TRDR1 As EntityRef(Of TRDR)
		
		Private _BRANCH1 As EntityRef(Of BRANCH)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnFINDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINDOCChanged()
    End Sub
    Partial Private Sub OnLOCKIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnLOCKIDChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnSOREDIRChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOREDIRChanged()
    End Sub
    Partial Private Sub OnTRNDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnTRNDATEChanged()
    End Sub
    Partial Private Sub OnFISCPRDChanging(value As Short)
    End Sub
    Partial Private Sub OnFISCPRDChanged()
    End Sub
    Partial Private Sub OnPERIODChanging(value As Short)
    End Sub
    Partial Private Sub OnPERIODChanged()
    End Sub
    Partial Private Sub OnSERIESChanging(value As Short)
    End Sub
    Partial Private Sub OnSERIESChanged()
    End Sub
    Partial Private Sub OnSERIESNUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnSERIESNUMChanged()
    End Sub
    Partial Private Sub OnFPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnFPRMSChanged()
    End Sub
    Partial Private Sub OnTFPRMSChanging(value As Short)
    End Sub
    Partial Private Sub OnTFPRMSChanged()
    End Sub
    Partial Private Sub OnFINCODEChanging(value As String)
    End Sub
    Partial Private Sub OnFINCODEChanged()
    End Sub
    Partial Private Sub OnBRANCHChanging(value As Short)
    End Sub
    Partial Private Sub OnBRANCHChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDBRANCHChanged()
    End Sub
    Partial Private Sub OnVATSTSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATSTSChanged()
    End Sub
    Partial Private Sub OnVATPROVISIONSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATPROVISIONSChanged()
    End Sub
    Partial Private Sub OnGASCUSTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGASCUSTYPEChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYChanging(value As Short)
    End Sub
    Partial Private Sub OnSOCURRENCYChanged()
    End Sub
    Partial Private Sub OnTRDRRATEChanging(value As Double)
    End Sub
    Partial Private Sub OnTRDRRATEChanged()
    End Sub
    Partial Private Sub OnLRATEChanging(value As Double)
    End Sub
    Partial Private Sub OnLRATEChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYREFChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCURRENCYREFChanged()
    End Sub
    Partial Private Sub OnFINDOCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCSChanged()
    End Sub
    Partial Private Sub OnMTRLINESSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRLINESSChanged()
    End Sub
    Partial Private Sub OnFINDOCSRVChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCSRVChanged()
    End Sub
    Partial Private Sub OnFINDOCPAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCPAYChanged()
    End Sub
    Partial Private Sub OnFINDOCSXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCSXChanged()
    End Sub
    Partial Private Sub OnFINDOCGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCGChanged()
    End Sub
    Partial Private Sub OnORIGINChanging(value As Short)
    End Sub
    Partial Private Sub OnORIGINChanged()
    End Sub
    Partial Private Sub OnGLUPDChanging(value As Short)
    End Sub
    Partial Private Sub OnGLUPDChanged()
    End Sub
    Partial Private Sub OnSXUPDChanging(value As Short)
    End Sub
    Partial Private Sub OnSXUPDChanged()
    End Sub
    Partial Private Sub OnACNEDITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACNEDITChanged()
    End Sub
    Partial Private Sub OnPRDCOSTChanging(value As Short)
    End Sub
    Partial Private Sub OnPRDCOSTChanged()
    End Sub
    Partial Private Sub OnPROCDEFChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPROCDEFChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnCOMMENTS1Changing(value As String)
    End Sub
    Partial Private Sub OnCOMMENTS1Changed()
    End Sub
    Partial Private Sub OnISCANCELChanging(value As Short)
    End Sub
    Partial Private Sub OnISCANCELChanged()
    End Sub
    Partial Private Sub OnISPRINTChanging(value As Short)
    End Sub
    Partial Private Sub OnISPRINTChanged()
    End Sub
    Partial Private Sub OnISREADONLYChanging(value As Short)
    End Sub
    Partial Private Sub OnISREADONLYChanged()
    End Sub
    Partial Private Sub OnAPPRVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPRVDATEChanged()
    End Sub
    Partial Private Sub OnAPPRVUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnAPPRVUSERChanged()
    End Sub
    Partial Private Sub OnAPPRVChanging(value As Short)
    End Sub
    Partial Private Sub OnAPPRVChanged()
    End Sub
    Partial Private Sub OnCONVMODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCONVMODEChanged()
    End Sub
    Partial Private Sub OnFULLYTRANSFChanging(value As Short)
    End Sub
    Partial Private Sub OnFULLYTRANSFChanged()
    End Sub
    Partial Private Sub OnFINSTATESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFINSTATESChanged()
    End Sub
    Partial Private Sub OnSHIPKINDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSHIPKINDChanged()
    End Sub
    Partial Private Sub OnSHIPMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSHIPMENTChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnPAYMENTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPAYMENTChanged()
    End Sub
    Partial Private Sub OnPRCPOLICYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRCPOLICYChanged()
    End Sub
    Partial Private Sub OnCRCONTROLChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCRCONTROLChanged()
    End Sub
    Partial Private Sub OnPRIORITYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRIORITYChanged()
    End Sub
    Partial Private Sub OnINSTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINSTChanged()
    End Sub
    Partial Private Sub OnPRJCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJCChanged()
    End Sub
    Partial Private Sub OnPRJCSTAGEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRJCSTAGEChanged()
    End Sub
    Partial Private Sub OnPRJLINESChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJLINESChanged()
    End Sub
    Partial Private Sub OnSALESMANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALESMANChanged()
    End Sub
    Partial Private Sub OnCOLLECTORChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOLLECTORChanged()
    End Sub
    Partial Private Sub OnRSRCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRSRCChanged()
    End Sub
    Partial Private Sub OnCNTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCNTRChanged()
    End Sub
    Partial Private Sub OnSOCASHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCASHChanged()
    End Sub
    Partial Private Sub OnSOCASHCLSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSOCASHCLSChanged()
    End Sub
    Partial Private Sub OnFOLDERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFOLDERChanged()
    End Sub
    Partial Private Sub OnDEPARTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDEPARTChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnTRDRSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRSChanged()
    End Sub
    Partial Private Sub OnTRDBRANCHSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDBRANCHSChanged()
    End Sub
    Partial Private Sub OnLTYPE1Changing(value As Short)
    End Sub
    Partial Private Sub OnLTYPE1Changed()
    End Sub
    Partial Private Sub OnLTYPE2Changing(value As Short)
    End Sub
    Partial Private Sub OnLTYPE2Changed()
    End Sub
    Partial Private Sub OnLTYPE3Changing(value As Short)
    End Sub
    Partial Private Sub OnLTYPE3Changed()
    End Sub
    Partial Private Sub OnLTYPE4Changing(value As Short)
    End Sub
    Partial Private Sub OnLTYPE4Changed()
    End Sub
    Partial Private Sub OnSOTIMEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSOTIMEChanged()
    End Sub
    Partial Private Sub OnTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnTURNOVRChanged()
    End Sub
    Partial Private Sub OnTTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnTTURNOVRChanged()
    End Sub
    Partial Private Sub OnLTURNOVRChanging(value As Double)
    End Sub
    Partial Private Sub OnLTURNOVRChanged()
    End Sub
    Partial Private Sub OnVATAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnVATAMNTChanged()
    End Sub
    Partial Private Sub OnTVATAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnTVATAMNTChanged()
    End Sub
    Partial Private Sub OnLVATAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnLVATAMNTChanged()
    End Sub
    Partial Private Sub OnEXPNChanging(value As Double)
    End Sub
    Partial Private Sub OnEXPNChanged()
    End Sub
    Partial Private Sub OnTEXPNChanging(value As Double)
    End Sub
    Partial Private Sub OnTEXPNChanged()
    End Sub
    Partial Private Sub OnLEXPNChanging(value As Double)
    End Sub
    Partial Private Sub OnLEXPNChanged()
    End Sub
    Partial Private Sub OnDISC1PRCChanging(value As Double)
    End Sub
    Partial Private Sub OnDISC1PRCChanged()
    End Sub
    Partial Private Sub OnDISC1VALChanging(value As Double)
    End Sub
    Partial Private Sub OnDISC1VALChanged()
    End Sub
    Partial Private Sub OnTDISC1VALChanging(value As Double)
    End Sub
    Partial Private Sub OnTDISC1VALChanged()
    End Sub
    Partial Private Sub OnLDISC1VALChanging(value As Double)
    End Sub
    Partial Private Sub OnLDISC1VALChanged()
    End Sub
    Partial Private Sub OnDISC2PRCChanging(value As Double)
    End Sub
    Partial Private Sub OnDISC2PRCChanged()
    End Sub
    Partial Private Sub OnDISC2VALChanging(value As Double)
    End Sub
    Partial Private Sub OnDISC2VALChanged()
    End Sub
    Partial Private Sub OnTDISC2VALChanging(value As Double)
    End Sub
    Partial Private Sub OnTDISC2VALChanged()
    End Sub
    Partial Private Sub OnLDISC2VALChanging(value As Double)
    End Sub
    Partial Private Sub OnLDISC2VALChanged()
    End Sub
    Partial Private Sub OnNETAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnNETAMNTChanged()
    End Sub
    Partial Private Sub OnTNETAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnTNETAMNTChanged()
    End Sub
    Partial Private Sub OnLNETAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnLNETAMNTChanged()
    End Sub
    Partial Private Sub OnSUMAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnSUMAMNTChanged()
    End Sub
    Partial Private Sub OnSUMTAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnSUMTAMNTChanged()
    End Sub
    Partial Private Sub OnSUMLAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnSUMLAMNTChanged()
    End Sub
    Partial Private Sub OnFXDIFFVALChanging(value As Double)
    End Sub
    Partial Private Sub OnFXDIFFVALChanged()
    End Sub
    Partial Private Sub OnKEPYOMDChanging(value As Short)
    End Sub
    Partial Private Sub OnKEPYOMDChanged()
    End Sub
    Partial Private Sub OnKEPYOHANDMDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnKEPYOHANDMDChanged()
    End Sub
    Partial Private Sub OnKEPYOQTChanging(value As Short)
    End Sub
    Partial Private Sub OnKEPYOQTChanged()
    End Sub
    Partial Private Sub OnLKEPYOVALChanging(value As Double)
    End Sub
    Partial Private Sub OnLKEPYOVALChanged()
    End Sub
    Partial Private Sub OnGSISMDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGSISMDChanged()
    End Sub
    Partial Private Sub OnGSISQTYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGSISQTYChanged()
    End Sub
    Partial Private Sub OnGSISNETChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGSISNETChanged()
    End Sub
    Partial Private Sub OnGSISVATChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGSISVATChanged()
    End Sub
    Partial Private Sub OnGSISPACKAGESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGSISPACKAGESChanged()
    End Sub
    Partial Private Sub OnGSISFLGChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGSISFLGChanged()
    End Sub
    Partial Private Sub OnCHANGEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnCHANGEVALChanged()
    End Sub
    Partial Private Sub OnPRCRULEDATAChanging(value As String)
    End Sub
    Partial Private Sub OnPRCRULEDATAChanged()
    End Sub
    Partial Private Sub OnNOINTRASTATChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnNOINTRASTATChanged()
    End Sub
    Partial Private Sub OnINTDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINTDATEChanged()
    End Sub
    Partial Private Sub OnINTRATEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnINTRATEChanged()
    End Sub
    Partial Private Sub OnINTVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnINTVALChanged()
    End Sub
    Partial Private Sub OnINTEXPNChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnINTEXPNChanged()
    End Sub
    Partial Private Sub OnINTVATChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnINTVATChanged()
    End Sub
    Partial Private Sub OnINTFDOCTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnINTFDOCTYPEChanged()
    End Sub
    Partial Private Sub OnINTSHIPMENTChanging(value As String)
    End Sub
    Partial Private Sub OnINTSHIPMENTChanged()
    End Sub
    Partial Private Sub OnISTRIGChanging(value As Short)
    End Sub
    Partial Private Sub OnISTRIGChanged()
    End Sub
    Partial Private Sub OnBGINTSTATPROCChanging(value As String)
    End Sub
    Partial Private Sub OnBGINTSTATPROCChanged()
    End Sub
    Partial Private Sub OnBGINTDELIVERYChanging(value As String)
    End Sub
    Partial Private Sub OnBGINTDELIVERYChanged()
    End Sub
    Partial Private Sub OnBGINTDISTRICTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBGINTDISTRICTChanged()
    End Sub
    Partial Private Sub OnBGSUBJECTChanging(value As String)
    End Sub
    Partial Private Sub OnBGSUBJECTChanged()
    End Sub
    Partial Private Sub OnBGOTHRVATChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBGOTHRVATChanged()
    End Sub
    Partial Private Sub OnBGPARTVATChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBGPARTVATChanged()
    End Sub
    Partial Private Sub OnBGDOCDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBGDOCDATEChanged()
    End Sub
    Partial Private Sub OnBGDOCDATE1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBGDOCDATE1Changed()
    End Sub
    Partial Private Sub OnINSDATENChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATENChanged()
    End Sub
    Partial Private Sub OnEXDIFFPPERIODChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXDIFFPPERIODChanged()
    End Sub
    Partial Private Sub OnCASHDEVICEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCASHDEVICEChanged()
    End Sub
    Partial Private Sub OnCARDPOINTSChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCARDPOINTSChanged()
    End Sub
    Partial Private Sub OnNEGCARDPOINTSChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNEGCARDPOINTSChanged()
    End Sub
    Partial Private Sub OnBONUSCARDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBONUSCARDChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnVARCHAR01Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR01Changed()
    End Sub
    Partial Private Sub OnVARCHAR02Changing(value As String)
    End Sub
    Partial Private Sub OnVARCHAR02Changed()
    End Sub
    Partial Private Sub OnWASTETYPEChanging(value As String)
    End Sub
    Partial Private Sub OnWASTETYPEChanged()
    End Sub
    Partial Private Sub OnSOPAYCODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOPAYCODEChanged()
    End Sub
    Partial Private Sub OnCOSTCNTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOSTCNTRChanged()
    End Sub
    Partial Private Sub OnINPAYVATChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINPAYVATChanged()
    End Sub
    Partial Private Sub OnEPAYCODEChanging(value As String)
    End Sub
    Partial Private Sub OnEPAYCODEChanged()
    End Sub
    Partial Private Sub OnEINVOICESIGNChanging(value As String)
    End Sub
    Partial Private Sub OnEINVOICESIGNChanged()
    End Sub
    Partial Private Sub OnINT01Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINT01Changed()
    End Sub
    Partial Private Sub OnINT02Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINT02Changed()
    End Sub
    Partial Private Sub OnNUM01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM01Changed()
    End Sub
    Partial Private Sub OnNUM02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM02Changed()
    End Sub
    Partial Private Sub OnNUM03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM03Changed()
    End Sub
    Partial Private Sub OnNUM04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM04Changed()
    End Sub
    Partial Private Sub OnBOOL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBOOL01Changed()
    End Sub
    Partial Private Sub OnBOOL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBOOL02Changed()
    End Sub
    Partial Private Sub OnDATE01Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE01Changed()
    End Sub
    Partial Private Sub OnDATE02Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE02Changed()
    End Sub
    Partial Private Sub OnUFTBL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUFTBL01Changed()
    End Sub
    Partial Private Sub OnUFTBL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUFTBL02Changed()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnccCTruckArrivedChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnccCTruckArrivedChanged()
    End Sub
    Partial Private Sub OnccCTruckEnteredChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnccCTruckEnteredChanged()
    End Sub
    Partial Private Sub OnACNDOCCATEGORYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACNDOCCATEGORYChanged()
    End Sub
    Partial Private Sub OnccCOpenItemChanging(value As String)
    End Sub
    Partial Private Sub OnccCOpenItemChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._MTRDOC = CType(Nothing, EntityRef(Of MTRDOC))
			Me._FINPAYTERMs = New EntitySet(Of FINPAYTERM)(AddressOf Me.attach_FINPAYTERMs, AddressOf Me.detach_FINPAYTERMs)
			Me._TRDTRNs = New EntitySet(Of TRDTRN)(AddressOf Me.attach_TRDTRNs, AddressOf Me.detach_TRDTRNs)
			Me._SPCOSTANALs = New EntitySet(Of SPCOSTANAL)(AddressOf Me.attach_SPCOSTANALs, AddressOf Me.detach_SPCOSTANALs)
			Me._TRDFLINEs = New EntitySet(Of TRDFLINE)(AddressOf Me.attach_TRDFLINEs, AddressOf Me.detach_TRDFLINEs)
			Me._FINDOCs1 = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs1, AddressOf Me.detach_FINDOCs1)
			Me._FINDOCs2 = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs2, AddressOf Me.detach_FINDOCs2)
			Me._MTRLINEs = New EntitySet(Of MTRLINE)(AddressOf Me.attach_MTRLINEs, AddressOf Me.detach_MTRLINEs)
			Me._PRSN = CType(Nothing, EntityRef(Of PRSN))
			Me._FINDOC1 = CType(Nothing, EntityRef(Of FINDOC))
			Me._FINDOC2 = CType(Nothing, EntityRef(Of FINDOC))
			Me._FPRM = CType(Nothing, EntityRef(Of FPRM))
			Me._PRSN1 = CType(Nothing, EntityRef(Of PRSN))
			Me._SERIES1 = CType(Nothing, EntityRef(Of SERIES))
			Me._TRDR1 = CType(Nothing, EntityRef(Of TRDR))
			Me._BRANCH1 = CType(Nothing, EntityRef(Of BRANCH))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					If ((Me._FPRM.HasLoadedOrAssignedValue OrElse Me._SERIES1.HasLoadedOrAssignedValue)  _
								OrElse Me._BRANCH1.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					Me.OnFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOC = value
					Me.SendPropertyChanged("FINDOC")
					Me.OnFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCKID", DbType:="Int NOT NULL")>  _
		Public Property LOCKID() As Integer
			Get
				Return Me._LOCKID
			End Get
			Set
				If ((Me._LOCKID = value)  _
							= false) Then
					Me.OnLOCKIDChanging(value)
					Me.SendPropertyChanging
					Me._LOCKID = value
					Me.SendPropertyChanged("LOCKID")
					Me.OnLOCKIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL")>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					If (Me._FPRM.HasLoadedOrAssignedValue OrElse Me._SERIES1.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOREDIR", DbType:="Int NOT NULL")>  _
		Public Property SOREDIR() As Integer
			Get
				Return Me._SOREDIR
			End Get
			Set
				If ((Me._SOREDIR = value)  _
							= false) Then
					Me.OnSOREDIRChanging(value)
					Me.SendPropertyChanging
					Me._SOREDIR = value
					Me.SendPropertyChanged("SOREDIR")
					Me.OnSOREDIRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime NOT NULL")>  _
		Public Property TRNDATE() As Date
			Get
				Return Me._TRNDATE
			End Get
			Set
				If ((Me._TRNDATE = value)  _
							= false) Then
					Me.OnTRNDATEChanging(value)
					Me.SendPropertyChanging
					Me._TRNDATE = value
					Me.SendPropertyChanged("TRNDATE")
					Me.OnTRNDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FISCPRD", DbType:="SmallInt NOT NULL")>  _
		Public Property FISCPRD() As Short
			Get
				Return Me._FISCPRD
			End Get
			Set
				If ((Me._FISCPRD = value)  _
							= false) Then
					Me.OnFISCPRDChanging(value)
					Me.SendPropertyChanging
					Me._FISCPRD = value
					Me.SendPropertyChanged("FISCPRD")
					Me.OnFISCPRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD", DbType:="SmallInt NOT NULL")>  _
		Public Property PERIOD() As Short
			Get
				Return Me._PERIOD
			End Get
			Set
				If ((Me._PERIOD = value)  _
							= false) Then
					Me.OnPERIODChanging(value)
					Me.SendPropertyChanging
					Me._PERIOD = value
					Me.SendPropertyChanged("PERIOD")
					Me.OnPERIODChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIES", DbType:="SmallInt NOT NULL")>  _
		Public Property SERIES() As Short
			Get
				Return Me._SERIES
			End Get
			Set
				If ((Me._SERIES = value)  _
							= false) Then
					If Me._SERIES1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSERIESChanging(value)
					Me.SendPropertyChanging
					Me._SERIES = value
					Me.SendPropertyChanged("SERIES")
					Me.OnSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIESNUM", DbType:="Int NOT NULL")>  _
		Public Property SERIESNUM() As Integer
			Get
				Return Me._SERIESNUM
			End Get
			Set
				If ((Me._SERIESNUM = value)  _
							= false) Then
					Me.OnSERIESNUMChanging(value)
					Me.SendPropertyChanging
					Me._SERIESNUM = value
					Me.SendPropertyChanged("SERIESNUM")
					Me.OnSERIESNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					If Me._FPRM.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._FPRMS = value
					Me.SendPropertyChanged("FPRMS")
					Me.OnFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property TFPRMS() As Short
			Get
				Return Me._TFPRMS
			End Get
			Set
				If ((Me._TFPRMS = value)  _
							= false) Then
					Me.OnTFPRMSChanging(value)
					Me.SendPropertyChanging
					Me._TFPRMS = value
					Me.SendPropertyChanged("TFPRMS")
					Me.OnTFPRMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODE", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property FINCODE() As String
			Get
				Return Me._FINCODE
			End Get
			Set
				If (String.Equals(Me._FINCODE, value) = false) Then
					Me.OnFINCODEChanging(value)
					Me.SendPropertyChanging
					Me._FINCODE = value
					Me.SendPropertyChanged("FINCODE")
					Me.OnFINCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt NOT NULL")>  _
		Public Property BRANCH() As Short
			Get
				Return Me._BRANCH
			End Get
			Set
				If ((Me._BRANCH = value)  _
							= false) Then
					If Me._BRANCH1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BRANCH = value
					Me.SendPropertyChanged("BRANCH")
					Me.OnBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					If Me._TRDR1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int")>  _
		Public Property TRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If (Me._TRDBRANCH.Equals(value) = false) Then
					Me.OnTRDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCH = value
					Me.SendPropertyChanged("TRDBRANCH")
					Me.OnTRDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATSTS", DbType:="SmallInt")>  _
		Public Property VATSTS() As System.Nullable(Of Short)
			Get
				Return Me._VATSTS
			End Get
			Set
				If (Me._VATSTS.Equals(value) = false) Then
					Me.OnVATSTSChanging(value)
					Me.SendPropertyChanging
					Me._VATSTS = value
					Me.SendPropertyChanged("VATSTS")
					Me.OnVATSTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPROVISIONS", DbType:="SmallInt")>  _
		Public Property VATPROVISIONS() As System.Nullable(Of Short)
			Get
				Return Me._VATPROVISIONS
			End Get
			Set
				If (Me._VATPROVISIONS.Equals(value) = false) Then
					Me.OnVATPROVISIONSChanging(value)
					Me.SendPropertyChanging
					Me._VATPROVISIONS = value
					Me.SendPropertyChanged("VATPROVISIONS")
					Me.OnVATPROVISIONSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GASCUSTYPE", DbType:="SmallInt")>  _
		Public Property GASCUSTYPE() As System.Nullable(Of Short)
			Get
				Return Me._GASCUSTYPE
			End Get
			Set
				If (Me._GASCUSTYPE.Equals(value) = false) Then
					Me.OnGASCUSTYPEChanging(value)
					Me.SendPropertyChanging
					Me._GASCUSTYPE = value
					Me.SendPropertyChanged("GASCUSTYPE")
					Me.OnGASCUSTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt NOT NULL")>  _
		Public Property SOCURRENCY() As Short
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If ((Me._SOCURRENCY = value)  _
							= false) Then
					Me.OnSOCURRENCYChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCY = value
					Me.SendPropertyChanged("SOCURRENCY")
					Me.OnSOCURRENCYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRRATE", DbType:="Float NOT NULL")>  _
		Public Property TRDRRATE() As Double
			Get
				Return Me._TRDRRATE
			End Get
			Set
				If ((Me._TRDRRATE = value)  _
							= false) Then
					Me.OnTRDRRATEChanging(value)
					Me.SendPropertyChanging
					Me._TRDRRATE = value
					Me.SendPropertyChanged("TRDRRATE")
					Me.OnTRDRRATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LRATE", DbType:="Float NOT NULL")>  _
		Public Property LRATE() As Double
			Get
				Return Me._LRATE
			End Get
			Set
				If ((Me._LRATE = value)  _
							= false) Then
					Me.OnLRATEChanging(value)
					Me.SendPropertyChanging
					Me._LRATE = value
					Me.SendPropertyChanged("LRATE")
					Me.OnLRATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCYREF", DbType:="SmallInt")>  _
		Public Property SOCURRENCYREF() As System.Nullable(Of Short)
			Get
				Return Me._SOCURRENCYREF
			End Get
			Set
				If (Me._SOCURRENCYREF.Equals(value) = false) Then
					Me.OnSOCURRENCYREFChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCYREF = value
					Me.SendPropertyChanged("SOCURRENCYREF")
					Me.OnSOCURRENCYREFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCS", DbType:="Int")>  _
		Public Property FINDOCS() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCS
			End Get
			Set
				If (Me._FINDOCS.Equals(value) = false) Then
					If Me._FINDOC2.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCSChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCS = value
					Me.SendPropertyChanged("FINDOCS")
					Me.OnFINDOCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINESS", DbType:="Int")>  _
		Public Property MTRLINESS() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLINESS
			End Get
			Set
				If (Me._MTRLINESS.Equals(value) = false) Then
					Me.OnMTRLINESSChanging(value)
					Me.SendPropertyChanging
					Me._MTRLINESS = value
					Me.SendPropertyChanged("MTRLINESS")
					Me.OnMTRLINESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCSRV", DbType:="Int")>  _
		Public Property FINDOCSRV() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCSRV
			End Get
			Set
				If (Me._FINDOCSRV.Equals(value) = false) Then
					Me.OnFINDOCSRVChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCSRV = value
					Me.SendPropertyChanged("FINDOCSRV")
					Me.OnFINDOCSRVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCPAY", DbType:="Int")>  _
		Public Property FINDOCPAY() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCPAY
			End Get
			Set
				If (Me._FINDOCPAY.Equals(value) = false) Then
					Me.OnFINDOCPAYChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCPAY = value
					Me.SendPropertyChanged("FINDOCPAY")
					Me.OnFINDOCPAYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCSX", DbType:="Int")>  _
		Public Property FINDOCSX() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCSX
			End Get
			Set
				If (Me._FINDOCSX.Equals(value) = false) Then
					Me.OnFINDOCSXChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCSX = value
					Me.SendPropertyChanged("FINDOCSX")
					Me.OnFINDOCSXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCG", DbType:="Int")>  _
		Public Property FINDOCG() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCG
			End Get
			Set
				If (Me._FINDOCG.Equals(value) = false) Then
					If Me._FINDOC1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCGChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCG = value
					Me.SendPropertyChanged("FINDOCG")
					Me.OnFINDOCGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORIGIN", DbType:="SmallInt NOT NULL")>  _
		Public Property ORIGIN() As Short
			Get
				Return Me._ORIGIN
			End Get
			Set
				If ((Me._ORIGIN = value)  _
							= false) Then
					Me.OnORIGINChanging(value)
					Me.SendPropertyChanging
					Me._ORIGIN = value
					Me.SendPropertyChanged("ORIGIN")
					Me.OnORIGINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLUPD", DbType:="SmallInt NOT NULL")>  _
		Public Property GLUPD() As Short
			Get
				Return Me._GLUPD
			End Get
			Set
				If ((Me._GLUPD = value)  _
							= false) Then
					Me.OnGLUPDChanging(value)
					Me.SendPropertyChanging
					Me._GLUPD = value
					Me.SendPropertyChanged("GLUPD")
					Me.OnGLUPDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SXUPD", DbType:="SmallInt NOT NULL")>  _
		Public Property SXUPD() As Short
			Get
				Return Me._SXUPD
			End Get
			Set
				If ((Me._SXUPD = value)  _
							= false) Then
					Me.OnSXUPDChanging(value)
					Me.SendPropertyChanging
					Me._SXUPD = value
					Me.SendPropertyChanged("SXUPD")
					Me.OnSXUPDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNEDIT", DbType:="Int")>  _
		Public Property ACNEDIT() As System.Nullable(Of Integer)
			Get
				Return Me._ACNEDIT
			End Get
			Set
				If (Me._ACNEDIT.Equals(value) = false) Then
					Me.OnACNEDITChanging(value)
					Me.SendPropertyChanging
					Me._ACNEDIT = value
					Me.SendPropertyChanged("ACNEDIT")
					Me.OnACNEDITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRDCOST", DbType:="SmallInt NOT NULL")>  _
		Public Property PRDCOST() As Short
			Get
				Return Me._PRDCOST
			End Get
			Set
				If ((Me._PRDCOST = value)  _
							= false) Then
					Me.OnPRDCOSTChanging(value)
					Me.SendPropertyChanging
					Me._PRDCOST = value
					Me.SendPropertyChanged("PRDCOST")
					Me.OnPRDCOSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCDEF", DbType:="SmallInt")>  _
		Public Property PROCDEF() As System.Nullable(Of Short)
			Get
				Return Me._PROCDEF
			End Get
			Set
				If (Me._PROCDEF.Equals(value) = false) Then
					Me.OnPROCDEFChanging(value)
					Me.SendPropertyChanging
					Me._PROCDEF = value
					Me.SendPropertyChanged("PROCDEF")
					Me.OnPROCDEFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS1", DbType:="VarChar(255)")>  _
		Public Property COMMENTS1() As String
			Get
				Return Me._COMMENTS1
			End Get
			Set
				If (String.Equals(Me._COMMENTS1, value) = false) Then
					Me.OnCOMMENTS1Changing(value)
					Me.SendPropertyChanging
					Me._COMMENTS1 = value
					Me.SendPropertyChanged("COMMENTS1")
					Me.OnCOMMENTS1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCANCEL", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCANCEL() As Short
			Get
				Return Me._ISCANCEL
			End Get
			Set
				If ((Me._ISCANCEL = value)  _
							= false) Then
					Me.OnISCANCELChanging(value)
					Me.SendPropertyChanging
					Me._ISCANCEL = value
					Me.SendPropertyChanged("ISCANCEL")
					Me.OnISCANCELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISPRINT", DbType:="SmallInt NOT NULL")>  _
		Public Property ISPRINT() As Short
			Get
				Return Me._ISPRINT
			End Get
			Set
				If ((Me._ISPRINT = value)  _
							= false) Then
					Me.OnISPRINTChanging(value)
					Me.SendPropertyChanging
					Me._ISPRINT = value
					Me.SendPropertyChanged("ISPRINT")
					Me.OnISPRINTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISREADONLY", DbType:="SmallInt NOT NULL")>  _
		Public Property ISREADONLY() As Short
			Get
				Return Me._ISREADONLY
			End Get
			Set
				If ((Me._ISREADONLY = value)  _
							= false) Then
					Me.OnISREADONLYChanging(value)
					Me.SendPropertyChanging
					Me._ISREADONLY = value
					Me.SendPropertyChanged("ISREADONLY")
					Me.OnISREADONLYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPRVDATE", DbType:="DateTime")>  _
		Public Property APPRVDATE() As System.Nullable(Of Date)
			Get
				Return Me._APPRVDATE
			End Get
			Set
				If (Me._APPRVDATE.Equals(value) = false) Then
					Me.OnAPPRVDATEChanging(value)
					Me.SendPropertyChanging
					Me._APPRVDATE = value
					Me.SendPropertyChanged("APPRVDATE")
					Me.OnAPPRVDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPRVUSER", DbType:="SmallInt")>  _
		Public Property APPRVUSER() As System.Nullable(Of Short)
			Get
				Return Me._APPRVUSER
			End Get
			Set
				If (Me._APPRVUSER.Equals(value) = false) Then
					Me.OnAPPRVUSERChanging(value)
					Me.SendPropertyChanging
					Me._APPRVUSER = value
					Me.SendPropertyChanged("APPRVUSER")
					Me.OnAPPRVUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPRV", DbType:="SmallInt NOT NULL")>  _
		Public Property APPRV() As Short
			Get
				Return Me._APPRV
			End Get
			Set
				If ((Me._APPRV = value)  _
							= false) Then
					Me.OnAPPRVChanging(value)
					Me.SendPropertyChanging
					Me._APPRV = value
					Me.SendPropertyChanged("APPRV")
					Me.OnAPPRVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONVMODE", DbType:="SmallInt")>  _
		Public Property CONVMODE() As System.Nullable(Of Short)
			Get
				Return Me._CONVMODE
			End Get
			Set
				If (Me._CONVMODE.Equals(value) = false) Then
					Me.OnCONVMODEChanging(value)
					Me.SendPropertyChanging
					Me._CONVMODE = value
					Me.SendPropertyChanged("CONVMODE")
					Me.OnCONVMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULLYTRANSF", DbType:="SmallInt NOT NULL")>  _
		Public Property FULLYTRANSF() As Short
			Get
				Return Me._FULLYTRANSF
			End Get
			Set
				If ((Me._FULLYTRANSF = value)  _
							= false) Then
					Me.OnFULLYTRANSFChanging(value)
					Me.SendPropertyChanging
					Me._FULLYTRANSF = value
					Me.SendPropertyChanged("FULLYTRANSF")
					Me.OnFULLYTRANSFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINSTATES", DbType:="SmallInt")>  _
		Public Property FINSTATES() As System.Nullable(Of Short)
			Get
				Return Me._FINSTATES
			End Get
			Set
				If (Me._FINSTATES.Equals(value) = false) Then
					Me.OnFINSTATESChanging(value)
					Me.SendPropertyChanging
					Me._FINSTATES = value
					Me.SendPropertyChanged("FINSTATES")
					Me.OnFINSTATESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPKIND", DbType:="SmallInt")>  _
		Public Property SHIPKIND() As System.Nullable(Of Short)
			Get
				Return Me._SHIPKIND
			End Get
			Set
				If (Me._SHIPKIND.Equals(value) = false) Then
					Me.OnSHIPKINDChanging(value)
					Me.SendPropertyChanging
					Me._SHIPKIND = value
					Me.SendPropertyChanged("SHIPKIND")
					Me.OnSHIPKINDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPMENT", DbType:="SmallInt")>  _
		Public Property SHIPMENT() As System.Nullable(Of Short)
			Get
				Return Me._SHIPMENT
			End Get
			Set
				If (Me._SHIPMENT.Equals(value) = false) Then
					Me.OnSHIPMENTChanging(value)
					Me.SendPropertyChanging
					Me._SHIPMENT = value
					Me.SendPropertyChanged("SHIPMENT")
					Me.OnSHIPMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT", DbType:="SmallInt")>  _
		Public Property PAYMENT() As System.Nullable(Of Short)
			Get
				Return Me._PAYMENT
			End Get
			Set
				If (Me._PAYMENT.Equals(value) = false) Then
					Me.OnPAYMENTChanging(value)
					Me.SendPropertyChanging
					Me._PAYMENT = value
					Me.SendPropertyChanged("PAYMENT")
					Me.OnPAYMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCPOLICY", DbType:="SmallInt")>  _
		Public Property PRCPOLICY() As System.Nullable(Of Short)
			Get
				Return Me._PRCPOLICY
			End Get
			Set
				If (Me._PRCPOLICY.Equals(value) = false) Then
					Me.OnPRCPOLICYChanging(value)
					Me.SendPropertyChanging
					Me._PRCPOLICY = value
					Me.SendPropertyChanged("PRCPOLICY")
					Me.OnPRCPOLICYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRCONTROL", DbType:="SmallInt")>  _
		Public Property CRCONTROL() As System.Nullable(Of Short)
			Get
				Return Me._CRCONTROL
			End Get
			Set
				If (Me._CRCONTROL.Equals(value) = false) Then
					Me.OnCRCONTROLChanging(value)
					Me.SendPropertyChanging
					Me._CRCONTROL = value
					Me.SendPropertyChanged("CRCONTROL")
					Me.OnCRCONTROLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIORITY", DbType:="SmallInt")>  _
		Public Property PRIORITY() As System.Nullable(Of Short)
			Get
				Return Me._PRIORITY
			End Get
			Set
				If (Me._PRIORITY.Equals(value) = false) Then
					Me.OnPRIORITYChanging(value)
					Me.SendPropertyChanging
					Me._PRIORITY = value
					Me.SendPropertyChanged("PRIORITY")
					Me.OnPRIORITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INST", DbType:="Int")>  _
		Public Property INST() As System.Nullable(Of Integer)
			Get
				Return Me._INST
			End Get
			Set
				If (Me._INST.Equals(value) = false) Then
					Me.OnINSTChanging(value)
					Me.SendPropertyChanging
					Me._INST = value
					Me.SendPropertyChanged("INST")
					Me.OnINSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJC", DbType:="Int")>  _
		Public Property PRJC() As System.Nullable(Of Integer)
			Get
				Return Me._PRJC
			End Get
			Set
				If (Me._PRJC.Equals(value) = false) Then
					Me.OnPRJCChanging(value)
					Me.SendPropertyChanging
					Me._PRJC = value
					Me.SendPropertyChanged("PRJC")
					Me.OnPRJCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJCSTAGE", DbType:="SmallInt")>  _
		Public Property PRJCSTAGE() As System.Nullable(Of Short)
			Get
				Return Me._PRJCSTAGE
			End Get
			Set
				If (Me._PRJCSTAGE.Equals(value) = false) Then
					Me.OnPRJCSTAGEChanging(value)
					Me.SendPropertyChanging
					Me._PRJCSTAGE = value
					Me.SendPropertyChanged("PRJCSTAGE")
					Me.OnPRJCSTAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJLINES", DbType:="Int")>  _
		Public Property PRJLINES() As System.Nullable(Of Integer)
			Get
				Return Me._PRJLINES
			End Get
			Set
				If (Me._PRJLINES.Equals(value) = false) Then
					Me.OnPRJLINESChanging(value)
					Me.SendPropertyChanging
					Me._PRJLINES = value
					Me.SendPropertyChanged("PRJLINES")
					Me.OnPRJLINESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					If Me._PRSN1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSALESMANChanging(value)
					Me.SendPropertyChanging
					Me._SALESMAN = value
					Me.SendPropertyChanged("SALESMAN")
					Me.OnSALESMANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLLECTOR", DbType:="Int")>  _
		Public Property COLLECTOR() As System.Nullable(Of Integer)
			Get
				Return Me._COLLECTOR
			End Get
			Set
				If (Me._COLLECTOR.Equals(value) = false) Then
					If Me._PRSN.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOLLECTORChanging(value)
					Me.SendPropertyChanging
					Me._COLLECTOR = value
					Me.SendPropertyChanged("COLLECTOR")
					Me.OnCOLLECTORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RSRC", DbType:="Int")>  _
		Public Property RSRC() As System.Nullable(Of Integer)
			Get
				Return Me._RSRC
			End Get
			Set
				If (Me._RSRC.Equals(value) = false) Then
					Me.OnRSRCChanging(value)
					Me.SendPropertyChanging
					Me._RSRC = value
					Me.SendPropertyChanged("RSRC")
					Me.OnRSRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTR", DbType:="Int")>  _
		Public Property CNTR() As System.Nullable(Of Integer)
			Get
				Return Me._CNTR
			End Get
			Set
				If (Me._CNTR.Equals(value) = false) Then
					Me.OnCNTRChanging(value)
					Me.SendPropertyChanging
					Me._CNTR = value
					Me.SendPropertyChanged("CNTR")
					Me.OnCNTRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCASH", DbType:="SmallInt")>  _
		Public Property SOCASH() As System.Nullable(Of Short)
			Get
				Return Me._SOCASH
			End Get
			Set
				If (Me._SOCASH.Equals(value) = false) Then
					Me.OnSOCASHChanging(value)
					Me.SendPropertyChanging
					Me._SOCASH = value
					Me.SendPropertyChanged("SOCASH")
					Me.OnSOCASHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCASHCLS", DbType:="Int")>  _
		Public Property SOCASHCLS() As System.Nullable(Of Integer)
			Get
				Return Me._SOCASHCLS
			End Get
			Set
				If (Me._SOCASHCLS.Equals(value) = false) Then
					Me.OnSOCASHCLSChanging(value)
					Me.SendPropertyChanging
					Me._SOCASHCLS = value
					Me.SendPropertyChanged("SOCASHCLS")
					Me.OnSOCASHCLSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOLDER", DbType:="SmallInt")>  _
		Public Property FOLDER() As System.Nullable(Of Short)
			Get
				Return Me._FOLDER
			End Get
			Set
				If (Me._FOLDER.Equals(value) = false) Then
					Me.OnFOLDERChanging(value)
					Me.SendPropertyChanging
					Me._FOLDER = value
					Me.SendPropertyChanged("FOLDER")
					Me.OnFOLDERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPART", DbType:="SmallInt")>  _
		Public Property DEPART() As System.Nullable(Of Short)
			Get
				Return Me._DEPART
			End Get
			Set
				If (Me._DEPART.Equals(value) = false) Then
					Me.OnDEPARTChanging(value)
					Me.SendPropertyChanging
					Me._DEPART = value
					Me.SendPropertyChanged("DEPART")
					Me.OnDEPARTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRS", DbType:="Int")>  _
		Public Property TRDRS() As System.Nullable(Of Integer)
			Get
				Return Me._TRDRS
			End Get
			Set
				If (Me._TRDRS.Equals(value) = false) Then
					Me.OnTRDRSChanging(value)
					Me.SendPropertyChanging
					Me._TRDRS = value
					Me.SendPropertyChanged("TRDRS")
					Me.OnTRDRSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHS", DbType:="Int")>  _
		Public Property TRDBRANCHS() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCHS
			End Get
			Set
				If (Me._TRDBRANCHS.Equals(value) = false) Then
					Me.OnTRDBRANCHSChanging(value)
					Me.SendPropertyChanging
					Me._TRDBRANCHS = value
					Me.SendPropertyChanged("TRDBRANCHS")
					Me.OnTRDBRANCHSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTYPE1", DbType:="SmallInt NOT NULL")>  _
		Public Property LTYPE1() As Short
			Get
				Return Me._LTYPE1
			End Get
			Set
				If ((Me._LTYPE1 = value)  _
							= false) Then
					Me.OnLTYPE1Changing(value)
					Me.SendPropertyChanging
					Me._LTYPE1 = value
					Me.SendPropertyChanged("LTYPE1")
					Me.OnLTYPE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTYPE2", DbType:="SmallInt NOT NULL")>  _
		Public Property LTYPE2() As Short
			Get
				Return Me._LTYPE2
			End Get
			Set
				If ((Me._LTYPE2 = value)  _
							= false) Then
					Me.OnLTYPE2Changing(value)
					Me.SendPropertyChanging
					Me._LTYPE2 = value
					Me.SendPropertyChanged("LTYPE2")
					Me.OnLTYPE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTYPE3", DbType:="SmallInt NOT NULL")>  _
		Public Property LTYPE3() As Short
			Get
				Return Me._LTYPE3
			End Get
			Set
				If ((Me._LTYPE3 = value)  _
							= false) Then
					Me.OnLTYPE3Changing(value)
					Me.SendPropertyChanging
					Me._LTYPE3 = value
					Me.SendPropertyChanged("LTYPE3")
					Me.OnLTYPE3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTYPE4", DbType:="SmallInt NOT NULL")>  _
		Public Property LTYPE4() As Short
			Get
				Return Me._LTYPE4
			End Get
			Set
				If ((Me._LTYPE4 = value)  _
							= false) Then
					Me.OnLTYPE4Changing(value)
					Me.SendPropertyChanging
					Me._LTYPE4 = value
					Me.SendPropertyChanged("LTYPE4")
					Me.OnLTYPE4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOTIME", DbType:="DateTime")>  _
		Public Property SOTIME() As System.Nullable(Of Date)
			Get
				Return Me._SOTIME
			End Get
			Set
				If (Me._SOTIME.Equals(value) = false) Then
					Me.OnSOTIMEChanging(value)
					Me.SendPropertyChanging
					Me._SOTIME = value
					Me.SendPropertyChanged("SOTIME")
					Me.OnSOTIMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TURNOVR", DbType:="Float NOT NULL")>  _
		Public Property TURNOVR() As Double
			Get
				Return Me._TURNOVR
			End Get
			Set
				If ((Me._TURNOVR = value)  _
							= false) Then
					Me.OnTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._TURNOVR = value
					Me.SendPropertyChanged("TURNOVR")
					Me.OnTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property TTURNOVR() As Double
			Get
				Return Me._TTURNOVR
			End Get
			Set
				If ((Me._TTURNOVR = value)  _
							= false) Then
					Me.OnTTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._TTURNOVR = value
					Me.SendPropertyChanged("TTURNOVR")
					Me.OnTTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTURNOVR", DbType:="Float NOT NULL")>  _
		Public Property LTURNOVR() As Double
			Get
				Return Me._LTURNOVR
			End Get
			Set
				If ((Me._LTURNOVR = value)  _
							= false) Then
					Me.OnLTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._LTURNOVR = value
					Me.SendPropertyChanged("LTURNOVR")
					Me.OnLTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATAMNT", DbType:="Float NOT NULL")>  _
		Public Property VATAMNT() As Double
			Get
				Return Me._VATAMNT
			End Get
			Set
				If ((Me._VATAMNT = value)  _
							= false) Then
					Me.OnVATAMNTChanging(value)
					Me.SendPropertyChanging
					Me._VATAMNT = value
					Me.SendPropertyChanged("VATAMNT")
					Me.OnVATAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TVATAMNT", DbType:="Float NOT NULL")>  _
		Public Property TVATAMNT() As Double
			Get
				Return Me._TVATAMNT
			End Get
			Set
				If ((Me._TVATAMNT = value)  _
							= false) Then
					Me.OnTVATAMNTChanging(value)
					Me.SendPropertyChanging
					Me._TVATAMNT = value
					Me.SendPropertyChanged("TVATAMNT")
					Me.OnTVATAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LVATAMNT", DbType:="Float NOT NULL")>  _
		Public Property LVATAMNT() As Double
			Get
				Return Me._LVATAMNT
			End Get
			Set
				If ((Me._LVATAMNT = value)  _
							= false) Then
					Me.OnLVATAMNTChanging(value)
					Me.SendPropertyChanging
					Me._LVATAMNT = value
					Me.SendPropertyChanged("LVATAMNT")
					Me.OnLVATAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPN", DbType:="Float NOT NULL")>  _
		Public Property EXPN() As Double
			Get
				Return Me._EXPN
			End Get
			Set
				If ((Me._EXPN = value)  _
							= false) Then
					Me.OnEXPNChanging(value)
					Me.SendPropertyChanging
					Me._EXPN = value
					Me.SendPropertyChanged("EXPN")
					Me.OnEXPNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEXPN", DbType:="Float NOT NULL")>  _
		Public Property TEXPN() As Double
			Get
				Return Me._TEXPN
			End Get
			Set
				If ((Me._TEXPN = value)  _
							= false) Then
					Me.OnTEXPNChanging(value)
					Me.SendPropertyChanging
					Me._TEXPN = value
					Me.SendPropertyChanged("TEXPN")
					Me.OnTEXPNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEXPN", DbType:="Float NOT NULL")>  _
		Public Property LEXPN() As Double
			Get
				Return Me._LEXPN
			End Get
			Set
				If ((Me._LEXPN = value)  _
							= false) Then
					Me.OnLEXPNChanging(value)
					Me.SendPropertyChanging
					Me._LEXPN = value
					Me.SendPropertyChanged("LEXPN")
					Me.OnLEXPNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC1PRC", DbType:="Float NOT NULL")>  _
		Public Property DISC1PRC() As Double
			Get
				Return Me._DISC1PRC
			End Get
			Set
				If ((Me._DISC1PRC = value)  _
							= false) Then
					Me.OnDISC1PRCChanging(value)
					Me.SendPropertyChanging
					Me._DISC1PRC = value
					Me.SendPropertyChanged("DISC1PRC")
					Me.OnDISC1PRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC1VAL", DbType:="Float NOT NULL")>  _
		Public Property DISC1VAL() As Double
			Get
				Return Me._DISC1VAL
			End Get
			Set
				If ((Me._DISC1VAL = value)  _
							= false) Then
					Me.OnDISC1VALChanging(value)
					Me.SendPropertyChanging
					Me._DISC1VAL = value
					Me.SendPropertyChanged("DISC1VAL")
					Me.OnDISC1VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDISC1VAL", DbType:="Float NOT NULL")>  _
		Public Property TDISC1VAL() As Double
			Get
				Return Me._TDISC1VAL
			End Get
			Set
				If ((Me._TDISC1VAL = value)  _
							= false) Then
					Me.OnTDISC1VALChanging(value)
					Me.SendPropertyChanging
					Me._TDISC1VAL = value
					Me.SendPropertyChanged("TDISC1VAL")
					Me.OnTDISC1VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDISC1VAL", DbType:="Float NOT NULL")>  _
		Public Property LDISC1VAL() As Double
			Get
				Return Me._LDISC1VAL
			End Get
			Set
				If ((Me._LDISC1VAL = value)  _
							= false) Then
					Me.OnLDISC1VALChanging(value)
					Me.SendPropertyChanging
					Me._LDISC1VAL = value
					Me.SendPropertyChanged("LDISC1VAL")
					Me.OnLDISC1VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC2PRC", DbType:="Float NOT NULL")>  _
		Public Property DISC2PRC() As Double
			Get
				Return Me._DISC2PRC
			End Get
			Set
				If ((Me._DISC2PRC = value)  _
							= false) Then
					Me.OnDISC2PRCChanging(value)
					Me.SendPropertyChanging
					Me._DISC2PRC = value
					Me.SendPropertyChanged("DISC2PRC")
					Me.OnDISC2PRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC2VAL", DbType:="Float NOT NULL")>  _
		Public Property DISC2VAL() As Double
			Get
				Return Me._DISC2VAL
			End Get
			Set
				If ((Me._DISC2VAL = value)  _
							= false) Then
					Me.OnDISC2VALChanging(value)
					Me.SendPropertyChanging
					Me._DISC2VAL = value
					Me.SendPropertyChanged("DISC2VAL")
					Me.OnDISC2VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDISC2VAL", DbType:="Float NOT NULL")>  _
		Public Property TDISC2VAL() As Double
			Get
				Return Me._TDISC2VAL
			End Get
			Set
				If ((Me._TDISC2VAL = value)  _
							= false) Then
					Me.OnTDISC2VALChanging(value)
					Me.SendPropertyChanging
					Me._TDISC2VAL = value
					Me.SendPropertyChanged("TDISC2VAL")
					Me.OnTDISC2VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDISC2VAL", DbType:="Float NOT NULL")>  _
		Public Property LDISC2VAL() As Double
			Get
				Return Me._LDISC2VAL
			End Get
			Set
				If ((Me._LDISC2VAL = value)  _
							= false) Then
					Me.OnLDISC2VALChanging(value)
					Me.SendPropertyChanging
					Me._LDISC2VAL = value
					Me.SendPropertyChanged("LDISC2VAL")
					Me.OnLDISC2VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETAMNT", DbType:="Float NOT NULL")>  _
		Public Property NETAMNT() As Double
			Get
				Return Me._NETAMNT
			End Get
			Set
				If ((Me._NETAMNT = value)  _
							= false) Then
					Me.OnNETAMNTChanging(value)
					Me.SendPropertyChanging
					Me._NETAMNT = value
					Me.SendPropertyChanged("NETAMNT")
					Me.OnNETAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TNETAMNT", DbType:="Float NOT NULL")>  _
		Public Property TNETAMNT() As Double
			Get
				Return Me._TNETAMNT
			End Get
			Set
				If ((Me._TNETAMNT = value)  _
							= false) Then
					Me.OnTNETAMNTChanging(value)
					Me.SendPropertyChanging
					Me._TNETAMNT = value
					Me.SendPropertyChanged("TNETAMNT")
					Me.OnTNETAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LNETAMNT", DbType:="Float NOT NULL")>  _
		Public Property LNETAMNT() As Double
			Get
				Return Me._LNETAMNT
			End Get
			Set
				If ((Me._LNETAMNT = value)  _
							= false) Then
					Me.OnLNETAMNTChanging(value)
					Me.SendPropertyChanging
					Me._LNETAMNT = value
					Me.SendPropertyChanged("LNETAMNT")
					Me.OnLNETAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUMAMNT", DbType:="Float NOT NULL")>  _
		Public Property SUMAMNT() As Double
			Get
				Return Me._SUMAMNT
			End Get
			Set
				If ((Me._SUMAMNT = value)  _
							= false) Then
					Me.OnSUMAMNTChanging(value)
					Me.SendPropertyChanging
					Me._SUMAMNT = value
					Me.SendPropertyChanged("SUMAMNT")
					Me.OnSUMAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUMTAMNT", DbType:="Float NOT NULL")>  _
		Public Property SUMTAMNT() As Double
			Get
				Return Me._SUMTAMNT
			End Get
			Set
				If ((Me._SUMTAMNT = value)  _
							= false) Then
					Me.OnSUMTAMNTChanging(value)
					Me.SendPropertyChanging
					Me._SUMTAMNT = value
					Me.SendPropertyChanged("SUMTAMNT")
					Me.OnSUMTAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUMLAMNT", DbType:="Float NOT NULL")>  _
		Public Property SUMLAMNT() As Double
			Get
				Return Me._SUMLAMNT
			End Get
			Set
				If ((Me._SUMLAMNT = value)  _
							= false) Then
					Me.OnSUMLAMNTChanging(value)
					Me.SendPropertyChanging
					Me._SUMLAMNT = value
					Me.SendPropertyChanged("SUMLAMNT")
					Me.OnSUMLAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FXDIFFVAL", DbType:="Float NOT NULL")>  _
		Public Property FXDIFFVAL() As Double
			Get
				Return Me._FXDIFFVAL
			End Get
			Set
				If ((Me._FXDIFFVAL = value)  _
							= false) Then
					Me.OnFXDIFFVALChanging(value)
					Me.SendPropertyChanging
					Me._FXDIFFVAL = value
					Me.SendPropertyChanged("FXDIFFVAL")
					Me.OnFXDIFFVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEPYOMD", DbType:="SmallInt NOT NULL")>  _
		Public Property KEPYOMD() As Short
			Get
				Return Me._KEPYOMD
			End Get
			Set
				If ((Me._KEPYOMD = value)  _
							= false) Then
					Me.OnKEPYOMDChanging(value)
					Me.SendPropertyChanging
					Me._KEPYOMD = value
					Me.SendPropertyChanged("KEPYOMD")
					Me.OnKEPYOMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEPYOHANDMD", DbType:="SmallInt")>  _
		Public Property KEPYOHANDMD() As System.Nullable(Of Short)
			Get
				Return Me._KEPYOHANDMD
			End Get
			Set
				If (Me._KEPYOHANDMD.Equals(value) = false) Then
					Me.OnKEPYOHANDMDChanging(value)
					Me.SendPropertyChanging
					Me._KEPYOHANDMD = value
					Me.SendPropertyChanged("KEPYOHANDMD")
					Me.OnKEPYOHANDMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEPYOQT", DbType:="SmallInt NOT NULL")>  _
		Public Property KEPYOQT() As Short
			Get
				Return Me._KEPYOQT
			End Get
			Set
				If ((Me._KEPYOQT = value)  _
							= false) Then
					Me.OnKEPYOQTChanging(value)
					Me.SendPropertyChanging
					Me._KEPYOQT = value
					Me.SendPropertyChanged("KEPYOQT")
					Me.OnKEPYOQTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LKEPYOVAL", DbType:="Float NOT NULL")>  _
		Public Property LKEPYOVAL() As Double
			Get
				Return Me._LKEPYOVAL
			End Get
			Set
				If ((Me._LKEPYOVAL = value)  _
							= false) Then
					Me.OnLKEPYOVALChanging(value)
					Me.SendPropertyChanging
					Me._LKEPYOVAL = value
					Me.SendPropertyChanged("LKEPYOVAL")
					Me.OnLKEPYOVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISMD", DbType:="SmallInt")>  _
		Public Property GSISMD() As System.Nullable(Of Short)
			Get
				Return Me._GSISMD
			End Get
			Set
				If (Me._GSISMD.Equals(value) = false) Then
					Me.OnGSISMDChanging(value)
					Me.SendPropertyChanging
					Me._GSISMD = value
					Me.SendPropertyChanged("GSISMD")
					Me.OnGSISMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISQTY", DbType:="SmallInt")>  _
		Public Property GSISQTY() As System.Nullable(Of Short)
			Get
				Return Me._GSISQTY
			End Get
			Set
				If (Me._GSISQTY.Equals(value) = false) Then
					Me.OnGSISQTYChanging(value)
					Me.SendPropertyChanging
					Me._GSISQTY = value
					Me.SendPropertyChanged("GSISQTY")
					Me.OnGSISQTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISNET", DbType:="Float")>  _
		Public Property GSISNET() As System.Nullable(Of Double)
			Get
				Return Me._GSISNET
			End Get
			Set
				If (Me._GSISNET.Equals(value) = false) Then
					Me.OnGSISNETChanging(value)
					Me.SendPropertyChanging
					Me._GSISNET = value
					Me.SendPropertyChanged("GSISNET")
					Me.OnGSISNETChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISVAT", DbType:="Float")>  _
		Public Property GSISVAT() As System.Nullable(Of Double)
			Get
				Return Me._GSISVAT
			End Get
			Set
				If (Me._GSISVAT.Equals(value) = false) Then
					Me.OnGSISVATChanging(value)
					Me.SendPropertyChanging
					Me._GSISVAT = value
					Me.SendPropertyChanged("GSISVAT")
					Me.OnGSISVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISPACKAGES", DbType:="SmallInt")>  _
		Public Property GSISPACKAGES() As System.Nullable(Of Short)
			Get
				Return Me._GSISPACKAGES
			End Get
			Set
				If (Me._GSISPACKAGES.Equals(value) = false) Then
					Me.OnGSISPACKAGESChanging(value)
					Me.SendPropertyChanging
					Me._GSISPACKAGES = value
					Me.SendPropertyChanged("GSISPACKAGES")
					Me.OnGSISPACKAGESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISFLG", DbType:="SmallInt")>  _
		Public Property GSISFLG() As System.Nullable(Of Short)
			Get
				Return Me._GSISFLG
			End Get
			Set
				If (Me._GSISFLG.Equals(value) = false) Then
					Me.OnGSISFLGChanging(value)
					Me.SendPropertyChanging
					Me._GSISFLG = value
					Me.SendPropertyChanged("GSISFLG")
					Me.OnGSISFLGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANGEVAL", DbType:="Float NOT NULL")>  _
		Public Property CHANGEVAL() As Double
			Get
				Return Me._CHANGEVAL
			End Get
			Set
				If ((Me._CHANGEVAL = value)  _
							= false) Then
					Me.OnCHANGEVALChanging(value)
					Me.SendPropertyChanging
					Me._CHANGEVAL = value
					Me.SendPropertyChanged("CHANGEVAL")
					Me.OnCHANGEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCRULEDATA", DbType:="VarChar(1024)")>  _
		Public Property PRCRULEDATA() As String
			Get
				Return Me._PRCRULEDATA
			End Get
			Set
				If (String.Equals(Me._PRCRULEDATA, value) = false) Then
					Me.OnPRCRULEDATAChanging(value)
					Me.SendPropertyChanging
					Me._PRCRULEDATA = value
					Me.SendPropertyChanged("PRCRULEDATA")
					Me.OnPRCRULEDATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOINTRASTAT", DbType:="SmallInt")>  _
		Public Property NOINTRASTAT() As System.Nullable(Of Short)
			Get
				Return Me._NOINTRASTAT
			End Get
			Set
				If (Me._NOINTRASTAT.Equals(value) = false) Then
					Me.OnNOINTRASTATChanging(value)
					Me.SendPropertyChanging
					Me._NOINTRASTAT = value
					Me.SendPropertyChanged("NOINTRASTAT")
					Me.OnNOINTRASTATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTDATE", DbType:="DateTime")>  _
		Public Property INTDATE() As System.Nullable(Of Date)
			Get
				Return Me._INTDATE
			End Get
			Set
				If (Me._INTDATE.Equals(value) = false) Then
					Me.OnINTDATEChanging(value)
					Me.SendPropertyChanging
					Me._INTDATE = value
					Me.SendPropertyChanged("INTDATE")
					Me.OnINTDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTRATE", DbType:="Float")>  _
		Public Property INTRATE() As System.Nullable(Of Double)
			Get
				Return Me._INTRATE
			End Get
			Set
				If (Me._INTRATE.Equals(value) = false) Then
					Me.OnINTRATEChanging(value)
					Me.SendPropertyChanging
					Me._INTRATE = value
					Me.SendPropertyChanged("INTRATE")
					Me.OnINTRATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTVAL", DbType:="Float")>  _
		Public Property INTVAL() As System.Nullable(Of Double)
			Get
				Return Me._INTVAL
			End Get
			Set
				If (Me._INTVAL.Equals(value) = false) Then
					Me.OnINTVALChanging(value)
					Me.SendPropertyChanging
					Me._INTVAL = value
					Me.SendPropertyChanged("INTVAL")
					Me.OnINTVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTEXPN", DbType:="Float")>  _
		Public Property INTEXPN() As System.Nullable(Of Double)
			Get
				Return Me._INTEXPN
			End Get
			Set
				If (Me._INTEXPN.Equals(value) = false) Then
					Me.OnINTEXPNChanging(value)
					Me.SendPropertyChanging
					Me._INTEXPN = value
					Me.SendPropertyChanged("INTEXPN")
					Me.OnINTEXPNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTVAT", DbType:="Float")>  _
		Public Property INTVAT() As System.Nullable(Of Double)
			Get
				Return Me._INTVAT
			End Get
			Set
				If (Me._INTVAT.Equals(value) = false) Then
					Me.OnINTVATChanging(value)
					Me.SendPropertyChanging
					Me._INTVAT = value
					Me.SendPropertyChanged("INTVAT")
					Me.OnINTVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTFDOCTYPE", DbType:="VarChar(10)")>  _
		Public Property INTFDOCTYPE() As String
			Get
				Return Me._INTFDOCTYPE
			End Get
			Set
				If (String.Equals(Me._INTFDOCTYPE, value) = false) Then
					Me.OnINTFDOCTYPEChanging(value)
					Me.SendPropertyChanging
					Me._INTFDOCTYPE = value
					Me.SendPropertyChanged("INTFDOCTYPE")
					Me.OnINTFDOCTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTSHIPMENT", DbType:="VarChar(10)")>  _
		Public Property INTSHIPMENT() As String
			Get
				Return Me._INTSHIPMENT
			End Get
			Set
				If (String.Equals(Me._INTSHIPMENT, value) = false) Then
					Me.OnINTSHIPMENTChanging(value)
					Me.SendPropertyChanging
					Me._INTSHIPMENT = value
					Me.SendPropertyChanged("INTSHIPMENT")
					Me.OnINTSHIPMENTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISTRIG", DbType:="SmallInt NOT NULL")>  _
		Public Property ISTRIG() As Short
			Get
				Return Me._ISTRIG
			End Get
			Set
				If ((Me._ISTRIG = value)  _
							= false) Then
					Me.OnISTRIGChanging(value)
					Me.SendPropertyChanging
					Me._ISTRIG = value
					Me.SendPropertyChanged("ISTRIG")
					Me.OnISTRIGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGINTSTATPROC", DbType:="VarChar(1)")>  _
		Public Property BGINTSTATPROC() As String
			Get
				Return Me._BGINTSTATPROC
			End Get
			Set
				If (String.Equals(Me._BGINTSTATPROC, value) = false) Then
					Me.OnBGINTSTATPROCChanging(value)
					Me.SendPropertyChanging
					Me._BGINTSTATPROC = value
					Me.SendPropertyChanged("BGINTSTATPROC")
					Me.OnBGINTSTATPROCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGINTDELIVERY", DbType:="VarChar(3)")>  _
		Public Property BGINTDELIVERY() As String
			Get
				Return Me._BGINTDELIVERY
			End Get
			Set
				If (String.Equals(Me._BGINTDELIVERY, value) = false) Then
					Me.OnBGINTDELIVERYChanging(value)
					Me.SendPropertyChanging
					Me._BGINTDELIVERY = value
					Me.SendPropertyChanged("BGINTDELIVERY")
					Me.OnBGINTDELIVERYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGINTDISTRICT", DbType:="SmallInt")>  _
		Public Property BGINTDISTRICT() As System.Nullable(Of Short)
			Get
				Return Me._BGINTDISTRICT
			End Get
			Set
				If (Me._BGINTDISTRICT.Equals(value) = false) Then
					Me.OnBGINTDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._BGINTDISTRICT = value
					Me.SendPropertyChanged("BGINTDISTRICT")
					Me.OnBGINTDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGSUBJECT", DbType:="VarChar(30)")>  _
		Public Property BGSUBJECT() As String
			Get
				Return Me._BGSUBJECT
			End Get
			Set
				If (String.Equals(Me._BGSUBJECT, value) = false) Then
					Me.OnBGSUBJECTChanging(value)
					Me.SendPropertyChanging
					Me._BGSUBJECT = value
					Me.SendPropertyChanged("BGSUBJECT")
					Me.OnBGSUBJECTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGOTHRVAT", DbType:="SmallInt")>  _
		Public Property BGOTHRVAT() As System.Nullable(Of Short)
			Get
				Return Me._BGOTHRVAT
			End Get
			Set
				If (Me._BGOTHRVAT.Equals(value) = false) Then
					Me.OnBGOTHRVATChanging(value)
					Me.SendPropertyChanging
					Me._BGOTHRVAT = value
					Me.SendPropertyChanged("BGOTHRVAT")
					Me.OnBGOTHRVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGPARTVAT", DbType:="SmallInt")>  _
		Public Property BGPARTVAT() As System.Nullable(Of Short)
			Get
				Return Me._BGPARTVAT
			End Get
			Set
				If (Me._BGPARTVAT.Equals(value) = false) Then
					Me.OnBGPARTVATChanging(value)
					Me.SendPropertyChanging
					Me._BGPARTVAT = value
					Me.SendPropertyChanged("BGPARTVAT")
					Me.OnBGPARTVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGDOCDATE", DbType:="DateTime")>  _
		Public Property BGDOCDATE() As System.Nullable(Of Date)
			Get
				Return Me._BGDOCDATE
			End Get
			Set
				If (Me._BGDOCDATE.Equals(value) = false) Then
					Me.OnBGDOCDATEChanging(value)
					Me.SendPropertyChanging
					Me._BGDOCDATE = value
					Me.SendPropertyChanged("BGDOCDATE")
					Me.OnBGDOCDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGDOCDATE1", DbType:="DateTime")>  _
		Public Property BGDOCDATE1() As System.Nullable(Of Date)
			Get
				Return Me._BGDOCDATE1
			End Get
			Set
				If (Me._BGDOCDATE1.Equals(value) = false) Then
					Me.OnBGDOCDATE1Changing(value)
					Me.SendPropertyChanging
					Me._BGDOCDATE1 = value
					Me.SendPropertyChanged("BGDOCDATE1")
					Me.OnBGDOCDATE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATEN", DbType:="DateTime")>  _
		Public Property INSDATEN() As System.Nullable(Of Date)
			Get
				Return Me._INSDATEN
			End Get
			Set
				If (Me._INSDATEN.Equals(value) = false) Then
					Me.OnINSDATENChanging(value)
					Me.SendPropertyChanging
					Me._INSDATEN = value
					Me.SendPropertyChanged("INSDATEN")
					Me.OnINSDATENChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXDIFFPPERIOD", DbType:="SmallInt")>  _
		Public Property EXDIFFPPERIOD() As System.Nullable(Of Short)
			Get
				Return Me._EXDIFFPPERIOD
			End Get
			Set
				If (Me._EXDIFFPPERIOD.Equals(value) = false) Then
					Me.OnEXDIFFPPERIODChanging(value)
					Me.SendPropertyChanging
					Me._EXDIFFPPERIOD = value
					Me.SendPropertyChanged("EXDIFFPPERIOD")
					Me.OnEXDIFFPPERIODChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CASHDEVICE", DbType:="SmallInt")>  _
		Public Property CASHDEVICE() As System.Nullable(Of Short)
			Get
				Return Me._CASHDEVICE
			End Get
			Set
				If (Me._CASHDEVICE.Equals(value) = false) Then
					Me.OnCASHDEVICEChanging(value)
					Me.SendPropertyChanging
					Me._CASHDEVICE = value
					Me.SendPropertyChanged("CASHDEVICE")
					Me.OnCASHDEVICEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CARDPOINTS", DbType:="Float")>  _
		Public Property CARDPOINTS() As System.Nullable(Of Double)
			Get
				Return Me._CARDPOINTS
			End Get
			Set
				If (Me._CARDPOINTS.Equals(value) = false) Then
					Me.OnCARDPOINTSChanging(value)
					Me.SendPropertyChanging
					Me._CARDPOINTS = value
					Me.SendPropertyChanged("CARDPOINTS")
					Me.OnCARDPOINTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEGCARDPOINTS", DbType:="Float")>  _
		Public Property NEGCARDPOINTS() As System.Nullable(Of Double)
			Get
				Return Me._NEGCARDPOINTS
			End Get
			Set
				If (Me._NEGCARDPOINTS.Equals(value) = false) Then
					Me.OnNEGCARDPOINTSChanging(value)
					Me.SendPropertyChanging
					Me._NEGCARDPOINTS = value
					Me.SendPropertyChanged("NEGCARDPOINTS")
					Me.OnNEGCARDPOINTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONUSCARD", DbType:="Int")>  _
		Public Property BONUSCARD() As System.Nullable(Of Integer)
			Get
				Return Me._BONUSCARD
			End Get
			Set
				If (Me._BONUSCARD.Equals(value) = false) Then
					Me.OnBONUSCARDChanging(value)
					Me.SendPropertyChanging
					Me._BONUSCARD = value
					Me.SendPropertyChanged("BONUSCARD")
					Me.OnBONUSCARDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(2000)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR01", DbType:="VarChar(100)")>  _
		Public Property VARCHAR01() As String
			Get
				Return Me._VARCHAR01
			End Get
			Set
				If (String.Equals(Me._VARCHAR01, value) = false) Then
					Me.OnVARCHAR01Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR01 = value
					Me.SendPropertyChanged("VARCHAR01")
					Me.OnVARCHAR01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR02", DbType:="VarChar(100)")>  _
		Public Property VARCHAR02() As String
			Get
				Return Me._VARCHAR02
			End Get
			Set
				If (String.Equals(Me._VARCHAR02, value) = false) Then
					Me.OnVARCHAR02Changing(value)
					Me.SendPropertyChanging
					Me._VARCHAR02 = value
					Me.SendPropertyChanged("VARCHAR02")
					Me.OnVARCHAR02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WASTETYPE", DbType:="VarChar(2)")>  _
		Public Property WASTETYPE() As String
			Get
				Return Me._WASTETYPE
			End Get
			Set
				If (String.Equals(Me._WASTETYPE, value) = false) Then
					Me.OnWASTETYPEChanging(value)
					Me.SendPropertyChanging
					Me._WASTETYPE = value
					Me.SendPropertyChanged("WASTETYPE")
					Me.OnWASTETYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPAYCODE", DbType:="SmallInt")>  _
		Public Property SOPAYCODE() As System.Nullable(Of Short)
			Get
				Return Me._SOPAYCODE
			End Get
			Set
				If (Me._SOPAYCODE.Equals(value) = false) Then
					Me.OnSOPAYCODEChanging(value)
					Me.SendPropertyChanging
					Me._SOPAYCODE = value
					Me.SendPropertyChanged("SOPAYCODE")
					Me.OnSOPAYCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTCNTR", DbType:="Int")>  _
		Public Property COSTCNTR() As System.Nullable(Of Integer)
			Get
				Return Me._COSTCNTR
			End Get
			Set
				If (Me._COSTCNTR.Equals(value) = false) Then
					Me.OnCOSTCNTRChanging(value)
					Me.SendPropertyChanging
					Me._COSTCNTR = value
					Me.SendPropertyChanged("COSTCNTR")
					Me.OnCOSTCNTRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INPAYVAT", DbType:="SmallInt")>  _
		Public Property INPAYVAT() As System.Nullable(Of Short)
			Get
				Return Me._INPAYVAT
			End Get
			Set
				If (Me._INPAYVAT.Equals(value) = false) Then
					Me.OnINPAYVATChanging(value)
					Me.SendPropertyChanging
					Me._INPAYVAT = value
					Me.SendPropertyChanged("INPAYVAT")
					Me.OnINPAYVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EPAYCODE", DbType:="VarChar(35)")>  _
		Public Property EPAYCODE() As String
			Get
				Return Me._EPAYCODE
			End Get
			Set
				If (String.Equals(Me._EPAYCODE, value) = false) Then
					Me.OnEPAYCODEChanging(value)
					Me.SendPropertyChanging
					Me._EPAYCODE = value
					Me.SendPropertyChanged("EPAYCODE")
					Me.OnEPAYCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EINVOICESIGN", DbType:="VarChar(64)")>  _
		Public Property EINVOICESIGN() As String
			Get
				Return Me._EINVOICESIGN
			End Get
			Set
				If (String.Equals(Me._EINVOICESIGN, value) = false) Then
					Me.OnEINVOICESIGNChanging(value)
					Me.SendPropertyChanging
					Me._EINVOICESIGN = value
					Me.SendPropertyChanged("EINVOICESIGN")
					Me.OnEINVOICESIGNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INT01", DbType:="Int")>  _
		Public Property INT01() As System.Nullable(Of Integer)
			Get
				Return Me._INT01
			End Get
			Set
				If (Me._INT01.Equals(value) = false) Then
					Me.OnINT01Changing(value)
					Me.SendPropertyChanging
					Me._INT01 = value
					Me.SendPropertyChanged("INT01")
					Me.OnINT01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INT02", DbType:="Int")>  _
		Public Property INT02() As System.Nullable(Of Integer)
			Get
				Return Me._INT02
			End Get
			Set
				If (Me._INT02.Equals(value) = false) Then
					Me.OnINT02Changing(value)
					Me.SendPropertyChanging
					Me._INT02 = value
					Me.SendPropertyChanged("INT02")
					Me.OnINT02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM01", DbType:="Float")>  _
		Public Property NUM01() As System.Nullable(Of Double)
			Get
				Return Me._NUM01
			End Get
			Set
				If (Me._NUM01.Equals(value) = false) Then
					Me.OnNUM01Changing(value)
					Me.SendPropertyChanging
					Me._NUM01 = value
					Me.SendPropertyChanged("NUM01")
					Me.OnNUM01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM02", DbType:="Float")>  _
		Public Property NUM02() As System.Nullable(Of Double)
			Get
				Return Me._NUM02
			End Get
			Set
				If (Me._NUM02.Equals(value) = false) Then
					Me.OnNUM02Changing(value)
					Me.SendPropertyChanging
					Me._NUM02 = value
					Me.SendPropertyChanged("NUM02")
					Me.OnNUM02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM03", DbType:="Float")>  _
		Public Property NUM03() As System.Nullable(Of Double)
			Get
				Return Me._NUM03
			End Get
			Set
				If (Me._NUM03.Equals(value) = false) Then
					Me.OnNUM03Changing(value)
					Me.SendPropertyChanging
					Me._NUM03 = value
					Me.SendPropertyChanged("NUM03")
					Me.OnNUM03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM04", DbType:="Float")>  _
		Public Property NUM04() As System.Nullable(Of Double)
			Get
				Return Me._NUM04
			End Get
			Set
				If (Me._NUM04.Equals(value) = false) Then
					Me.OnNUM04Changing(value)
					Me.SendPropertyChanging
					Me._NUM04 = value
					Me.SendPropertyChanged("NUM04")
					Me.OnNUM04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL01", DbType:="SmallInt")>  _
		Public Property BOOL01() As System.Nullable(Of Short)
			Get
				Return Me._BOOL01
			End Get
			Set
				If (Me._BOOL01.Equals(value) = false) Then
					Me.OnBOOL01Changing(value)
					Me.SendPropertyChanging
					Me._BOOL01 = value
					Me.SendPropertyChanged("BOOL01")
					Me.OnBOOL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL02", DbType:="SmallInt")>  _
		Public Property BOOL02() As System.Nullable(Of Short)
			Get
				Return Me._BOOL02
			End Get
			Set
				If (Me._BOOL02.Equals(value) = false) Then
					Me.OnBOOL02Changing(value)
					Me.SendPropertyChanging
					Me._BOOL02 = value
					Me.SendPropertyChanged("BOOL02")
					Me.OnBOOL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE01", DbType:="DateTime")>  _
		Public Property DATE01() As System.Nullable(Of Date)
			Get
				Return Me._DATE01
			End Get
			Set
				If (Me._DATE01.Equals(value) = false) Then
					Me.OnDATE01Changing(value)
					Me.SendPropertyChanging
					Me._DATE01 = value
					Me.SendPropertyChanged("DATE01")
					Me.OnDATE01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE02", DbType:="DateTime")>  _
		Public Property DATE02() As System.Nullable(Of Date)
			Get
				Return Me._DATE02
			End Get
			Set
				If (Me._DATE02.Equals(value) = false) Then
					Me.OnDATE02Changing(value)
					Me.SendPropertyChanging
					Me._DATE02 = value
					Me.SendPropertyChanged("DATE02")
					Me.OnDATE02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UFTBL01", DbType:="SmallInt")>  _
		Public Property UFTBL01() As System.Nullable(Of Short)
			Get
				Return Me._UFTBL01
			End Get
			Set
				If (Me._UFTBL01.Equals(value) = false) Then
					Me.OnUFTBL01Changing(value)
					Me.SendPropertyChanging
					Me._UFTBL01 = value
					Me.SendPropertyChanged("UFTBL01")
					Me.OnUFTBL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UFTBL02", DbType:="SmallInt")>  _
		Public Property UFTBL02() As System.Nullable(Of Short)
			Get
				Return Me._UFTBL02
			End Get
			Set
				If (Me._UFTBL02.Equals(value) = false) Then
					Me.OnUFTBL02Changing(value)
					Me.SendPropertyChanging
					Me._UFTBL02 = value
					Me.SendPropertyChanged("UFTBL02")
					Me.OnUFTBL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTruckArrived", DbType:="SmallInt")>  _
		Public Property ccCTruckArrived() As System.Nullable(Of Short)
			Get
				Return Me._ccCTruckArrived
			End Get
			Set
				If (Me._ccCTruckArrived.Equals(value) = false) Then
					Me.OnccCTruckArrivedChanging(value)
					Me.SendPropertyChanging
					Me._ccCTruckArrived = value
					Me.SendPropertyChanged("ccCTruckArrived")
					Me.OnccCTruckArrivedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTruckEntered", DbType:="SmallInt")>  _
		Public Property ccCTruckEntered() As System.Nullable(Of Short)
			Get
				Return Me._ccCTruckEntered
			End Get
			Set
				If (Me._ccCTruckEntered.Equals(value) = false) Then
					Me.OnccCTruckEnteredChanging(value)
					Me.SendPropertyChanging
					Me._ccCTruckEntered = value
					Me.SendPropertyChanged("ccCTruckEntered")
					Me.OnccCTruckEnteredChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNDOCCATEGORY", DbType:="Int")>  _
		Public Property ACNDOCCATEGORY() As System.Nullable(Of Integer)
			Get
				Return Me._ACNDOCCATEGORY
			End Get
			Set
				If (Me._ACNDOCCATEGORY.Equals(value) = false) Then
					Me.OnACNDOCCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._ACNDOCCATEGORY = value
					Me.SendPropertyChanged("ACNDOCCATEGORY")
					Me.OnACNDOCCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCOpenItem", DbType:="VarChar(MAX)")>  _
		Public Property ccCOpenItem() As String
			Get
				Return Me._ccCOpenItem
			End Get
			Set
				If (String.Equals(Me._ccCOpenItem, value) = false) Then
					Me.OnccCOpenItemChanging(value)
					Me.SendPropertyChanging
					Me._ccCOpenItem = value
					Me.SendPropertyChanged("ccCOpenItem")
					Me.OnccCOpenItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_MTRDOC", Storage:="_MTRDOC", ThisKey:="FINDOC", OtherKey:="FINDOC", IsUnique:=true, IsForeignKey:=false)>  _
		Public Property MTRDOC() As MTRDOC
			Get
				Return Me._MTRDOC.Entity
			End Get
			Set
				Dim previousValue As MTRDOC = Me._MTRDOC.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._MTRDOC.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._MTRDOC.Entity = Nothing
						previousValue.FINDOC1 = Nothing
					End If
					Me._MTRDOC.Entity = value
					If (Object.Equals(value, Nothing) = false) Then
						value.FINDOC1 = Me
					End If
					Me.SendPropertyChanged("MTRDOC")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_FINPAYTERM", Storage:="_FINPAYTERMs", ThisKey:="FINDOC", OtherKey:="FINDOC")>  _
		Public Property FINPAYTERMs() As EntitySet(Of FINPAYTERM)
			Get
				Return Me._FINPAYTERMs
			End Get
			Set
				Me._FINPAYTERMs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_TRDTRN", Storage:="_TRDTRNs", ThisKey:="FINDOC", OtherKey:="FINDOC")>  _
		Public Property TRDTRNs() As EntitySet(Of TRDTRN)
			Get
				Return Me._TRDTRNs
			End Get
			Set
				Me._TRDTRNs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_SPCOSTANAL", Storage:="_SPCOSTANALs", ThisKey:="FINDOC", OtherKey:="FINDOC")>  _
		Public Property SPCOSTANALs() As EntitySet(Of SPCOSTANAL)
			Get
				Return Me._SPCOSTANALs
			End Get
			Set
				Me._SPCOSTANALs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_TRDFLINE", Storage:="_TRDFLINEs", ThisKey:="FINDOC", OtherKey:="FINDOC")>  _
		Public Property TRDFLINEs() As EntitySet(Of TRDFLINE)
			Get
				Return Me._TRDFLINEs
			End Get
			Set
				Me._TRDFLINEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_FINDOC", Storage:="_FINDOCs1", ThisKey:="FINDOC", OtherKey:="FINDOCG")>  _
		Public Property FINDOCs1() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs1
			End Get
			Set
				Me._FINDOCs1.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_FINDOC1", Storage:="_FINDOCs2", ThisKey:="FINDOC", OtherKey:="FINDOCS")>  _
		Public Property FINDOCs2() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs2
			End Get
			Set
				Me._FINDOCs2.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_MTRLINE", Storage:="_MTRLINEs", ThisKey:="FINDOC", OtherKey:="FINDOC")>  _
		Public Property MTRLINEs() As EntitySet(Of MTRLINE)
			Get
				Return Me._MTRLINEs
			End Get
			Set
				Me._MTRLINEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_FINDOC", Storage:="_PRSN", ThisKey:="COLLECTOR", OtherKey:="PRSN", IsForeignKey:=true)>  _
		Public Property PRSN() As PRSN
			Get
				Return Me._PRSN.Entity
			End Get
			Set
				Dim previousValue As PRSN = Me._PRSN.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PRSN.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PRSN.Entity = Nothing
						previousValue.FINDOCs.Remove(Me)
					End If
					Me._PRSN.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs.Add(Me)
						Me._COLLECTOR = value.PRSN
					Else
						Me._COLLECTOR = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PRSN")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_FINDOC", Storage:="_FINDOC1", ThisKey:="FINDOCG", OtherKey:="FINDOC", IsForeignKey:=true)>  _
		Public Property FINDOC1() As FINDOC
			Get
				Return Me._FINDOC1.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC1.Entity = Nothing
						previousValue.FINDOCs1.Remove(Me)
					End If
					Me._FINDOC1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs1.Add(Me)
						Me._FINDOCG = value.FINDOC
					Else
						Me._FINDOCG = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("FINDOC1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_FINDOC1", Storage:="_FINDOC2", ThisKey:="FINDOCS", OtherKey:="FINDOC", IsForeignKey:=true)>  _
		Public Property FINDOC2() As FINDOC
			Get
				Return Me._FINDOC2.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC2.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC2.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC2.Entity = Nothing
						previousValue.FINDOCs2.Remove(Me)
					End If
					Me._FINDOC2.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs2.Add(Me)
						Me._FINDOCS = value.FINDOC
					Else
						Me._FINDOCS = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("FINDOC2")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FPRM_FINDOC", Storage:="_FPRM", ThisKey:="COMPANY,SOSOURCE,FPRMS", OtherKey:="COMPANY,SOSOURCE,FPRMS", IsForeignKey:=true)>  _
		Public Property FPRM() As FPRM
			Get
				Return Me._FPRM.Entity
			End Get
			Set
				Dim previousValue As FPRM = Me._FPRM.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FPRM.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FPRM.Entity = Nothing
						previousValue.FINDOCs.Remove(Me)
					End If
					Me._FPRM.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._SOSOURCE = value.SOSOURCE
						Me._FPRMS = value.FPRMS
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._SOSOURCE = CType(Nothing, Integer)
						Me._FPRMS = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("FPRM")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRSN_FINDOC1", Storage:="_PRSN1", ThisKey:="SALESMAN", OtherKey:="PRSN", IsForeignKey:=true)>  _
		Public Property PRSN1() As PRSN
			Get
				Return Me._PRSN1.Entity
			End Get
			Set
				Dim previousValue As PRSN = Me._PRSN1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PRSN1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PRSN1.Entity = Nothing
						previousValue.FINDOCs1.Remove(Me)
					End If
					Me._PRSN1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs1.Add(Me)
						Me._SALESMAN = value.PRSN
					Else
						Me._SALESMAN = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PRSN1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SERIES_FINDOC", Storage:="_SERIES1", ThisKey:="COMPANY,SOSOURCE,SERIES", OtherKey:="COMPANY,SOSOURCE,SERIES", IsForeignKey:=true)>  _
		Public Property SERIES1() As SERIES
			Get
				Return Me._SERIES1.Entity
			End Get
			Set
				Dim previousValue As SERIES = Me._SERIES1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._SERIES1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._SERIES1.Entity = Nothing
						previousValue.FINDOCs.Remove(Me)
					End If
					Me._SERIES1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._SOSOURCE = value.SOSOURCE
						Me._SERIES = value.SERIES
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._SOSOURCE = CType(Nothing, Integer)
						Me._SERIES = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("SERIES1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TRDR_FINDOC", Storage:="_TRDR1", ThisKey:="TRDR", OtherKey:="TRDR", IsForeignKey:=true)>  _
		Public Property TRDR1() As TRDR
			Get
				Return Me._TRDR1.Entity
			End Get
			Set
				Dim previousValue As TRDR = Me._TRDR1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TRDR1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TRDR1.Entity = Nothing
						previousValue.FINDOCs.Remove(Me)
					End If
					Me._TRDR1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs.Add(Me)
						Me._TRDR = value.TRDR
					Else
						Me._TRDR = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("TRDR1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_FINDOC", Storage:="_BRANCH1", ThisKey:="COMPANY,BRANCH", OtherKey:="COMPANY,BRANCH", IsForeignKey:=true)>  _
		Public Property BRANCH1() As BRANCH
			Get
				Return Me._BRANCH1.Entity
			End Get
			Set
				Dim previousValue As BRANCH = Me._BRANCH1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._BRANCH1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._BRANCH1.Entity = Nothing
						previousValue.FINDOCs.Remove(Me)
					End If
					Me._BRANCH1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FINDOCs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._BRANCH = value.BRANCH
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._BRANCH = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("BRANCH1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_FINPAYTERMs(ByVal entity As FINPAYTERM)
			Me.SendPropertyChanging
			entity.FINDOC1 = Me
		End Sub
		
		Private Sub detach_FINPAYTERMs(ByVal entity As FINPAYTERM)
			Me.SendPropertyChanging
			entity.FINDOC1 = Nothing
		End Sub
		
		Private Sub attach_TRDTRNs(ByVal entity As TRDTRN)
			Me.SendPropertyChanging
			entity.FINDOC1 = Me
		End Sub
		
		Private Sub detach_TRDTRNs(ByVal entity As TRDTRN)
			Me.SendPropertyChanging
			entity.FINDOC1 = Nothing
		End Sub
		
		Private Sub attach_SPCOSTANALs(ByVal entity As SPCOSTANAL)
			Me.SendPropertyChanging
			entity.FINDOC1 = Me
		End Sub
		
		Private Sub detach_SPCOSTANALs(ByVal entity As SPCOSTANAL)
			Me.SendPropertyChanging
			entity.FINDOC1 = Nothing
		End Sub
		
		Private Sub attach_TRDFLINEs(ByVal entity As TRDFLINE)
			Me.SendPropertyChanging
			entity.FINDOC1 = Me
		End Sub
		
		Private Sub detach_TRDFLINEs(ByVal entity As TRDFLINE)
			Me.SendPropertyChanging
			entity.FINDOC1 = Nothing
		End Sub
		
		Private Sub attach_FINDOCs1(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.FINDOC1 = Me
		End Sub
		
		Private Sub detach_FINDOCs1(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.FINDOC1 = Nothing
		End Sub
		
		Private Sub attach_FINDOCs2(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.FINDOC2 = Me
		End Sub
		
		Private Sub detach_FINDOCs2(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.FINDOC2 = Nothing
		End Sub
		
		Private Sub attach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.FINDOC1 = Me
		End Sub
		
		Private Sub detach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.FINDOC1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WHOUSEBIN")>  _
	Partial Public Class WHOUSEBIN
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _WHOUSE As Short
		
		Private _WHOUSEBIN As Short
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _ACNMSK As String
		
		Private _ISACTIVE As Short
		
		Private _SERIES As EntitySet(Of SERIES)
		
		Private _MTRLINEs As EntitySet(Of MTRLINE)
		
		Private _WHOUSE1 As EntityRef(Of WHOUSE)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnWHOUSEChanging(value As Short)
    End Sub
    Partial Private Sub OnWHOUSEChanged()
    End Sub
    Partial Private Sub OnWHOUSEBINChanging(value As Short)
    End Sub
    Partial Private Sub OnWHOUSEBINChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._SERIES = New EntitySet(Of SERIES)(AddressOf Me.attach_SERIES, AddressOf Me.detach_SERIES)
			Me._MTRLINEs = New EntitySet(Of MTRLINE)(AddressOf Me.attach_MTRLINEs, AddressOf Me.detach_MTRLINEs)
			Me._WHOUSE1 = CType(Nothing, EntityRef(Of WHOUSE))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					If Me._WHOUSE1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property WHOUSE() As Short
			Get
				Return Me._WHOUSE
			End Get
			Set
				If ((Me._WHOUSE = value)  _
							= false) Then
					If Me._WHOUSE1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSEChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSE = value
					Me.SendPropertyChanged("WHOUSE")
					Me.OnWHOUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSEBIN", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property WHOUSEBIN() As Short
			Get
				Return Me._WHOUSEBIN
			End Get
			Set
				If ((Me._WHOUSEBIN = value)  _
							= false) Then
					Me.OnWHOUSEBINChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSEBIN = value
					Me.SendPropertyChanged("WHOUSEBIN")
					Me.OnWHOUSEBINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSEBIN_SERIES", Storage:="_SERIES", ThisKey:="COMPANY,WHOUSE,WHOUSEBIN", OtherKey:="COMPANY,WHOUSE,WHOUSEBIN")>  _
		Public Property SERIES() As EntitySet(Of SERIES)
			Get
				Return Me._SERIES
			End Get
			Set
				Me._SERIES.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSEBIN_MTRLINE", Storage:="_MTRLINEs", ThisKey:="COMPANY,WHOUSE,WHOUSEBIN", OtherKey:="COMPANY,WHOUSE,WHOUSEBIN")>  _
		Public Property MTRLINEs() As EntitySet(Of MTRLINE)
			Get
				Return Me._MTRLINEs
			End Get
			Set
				Me._MTRLINEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_WHOUSEBIN", Storage:="_WHOUSE1", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE", IsForeignKey:=true)>  _
		Public Property WHOUSE1() As WHOUSE
			Get
				Return Me._WHOUSE1.Entity
			End Get
			Set
				Dim previousValue As WHOUSE = Me._WHOUSE1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSE1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSE1.Entity = Nothing
						previousValue.WHOUSEBINs.Remove(Me)
					End If
					Me._WHOUSE1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.WHOUSEBINs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSE = value.WHOUSE
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSE = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("WHOUSE1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.WHOUSEBIN1 = Me
		End Sub
		
		Private Sub detach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.WHOUSEBIN1 = Nothing
		End Sub
		
		Private Sub attach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.WHOUSEBIN1 = Me
		End Sub
		
		Private Sub detach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.WHOUSEBIN1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cccSettingsLines")>  _
	Partial Public Class cccSettingsLine
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _cccSettingsLines As Integer
		
		Private _cccSettings As System.Nullable(Of Integer)
		
		Private _SeriesInv As System.Nullable(Of Integer)
		
		Private _SeriesCre As System.Nullable(Of Integer)
		
		Private _SeriesCreSec As System.Nullable(Of Integer)
		
		Private _cccSetting As EntityRef(Of cccSetting)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncccSettingsLinesChanging(value As Integer)
    End Sub
    Partial Private Sub OncccSettingsLinesChanged()
    End Sub
    Partial Private Sub OncccSettingsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncccSettingsChanged()
    End Sub
    Partial Private Sub OnSeriesInvChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSeriesInvChanged()
    End Sub
    Partial Private Sub OnSeriesCreChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSeriesCreChanged()
    End Sub
    Partial Private Sub OnSeriesCreSecChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSeriesCreSecChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._cccSetting = CType(Nothing, EntityRef(Of cccSetting))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccSettingsLines", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property cccSettingsLines() As Integer
			Get
				Return Me._cccSettingsLines
			End Get
			Set
				If ((Me._cccSettingsLines = value)  _
							= false) Then
					Me.OncccSettingsLinesChanging(value)
					Me.SendPropertyChanging
					Me._cccSettingsLines = value
					Me.SendPropertyChanged("cccSettingsLines")
					Me.OncccSettingsLinesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cccSettings", DbType:="Int")>  _
		Public Property cccSettings() As System.Nullable(Of Integer)
			Get
				Return Me._cccSettings
			End Get
			Set
				If (Me._cccSettings.Equals(value) = false) Then
					If Me._cccSetting.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OncccSettingsChanging(value)
					Me.SendPropertyChanging
					Me._cccSettings = value
					Me.SendPropertyChanged("cccSettings")
					Me.OncccSettingsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeriesInv", DbType:="Int")>  _
		Public Property SeriesInv() As System.Nullable(Of Integer)
			Get
				Return Me._SeriesInv
			End Get
			Set
				If (Me._SeriesInv.Equals(value) = false) Then
					Me.OnSeriesInvChanging(value)
					Me.SendPropertyChanging
					Me._SeriesInv = value
					Me.SendPropertyChanged("SeriesInv")
					Me.OnSeriesInvChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeriesCre", DbType:="Int")>  _
		Public Property SeriesCre() As System.Nullable(Of Integer)
			Get
				Return Me._SeriesCre
			End Get
			Set
				If (Me._SeriesCre.Equals(value) = false) Then
					Me.OnSeriesCreChanging(value)
					Me.SendPropertyChanging
					Me._SeriesCre = value
					Me.SendPropertyChanged("SeriesCre")
					Me.OnSeriesCreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeriesCreSec", DbType:="Int")>  _
		Public Property SeriesCreSec() As System.Nullable(Of Integer)
			Get
				Return Me._SeriesCreSec
			End Get
			Set
				If (Me._SeriesCreSec.Equals(value) = false) Then
					Me.OnSeriesCreSecChanging(value)
					Me.SendPropertyChanging
					Me._SeriesCreSec = value
					Me.SendPropertyChanged("SeriesCreSec")
					Me.OnSeriesCreSecChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="cccSetting_cccSettingsLine", Storage:="_cccSetting", ThisKey:="cccSettings", OtherKey:="cccSettings", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
		Public Property cccSetting() As cccSetting
			Get
				Return Me._cccSetting.Entity
			End Get
			Set
				Dim previousValue As cccSetting = Me._cccSetting.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._cccSetting.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._cccSetting.Entity = Nothing
						previousValue.cccSettingsLines.Remove(Me)
					End If
					Me._cccSetting.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.cccSettingsLines.Add(Me)
						Me._cccSettings = value.cccSettings
					Else
						Me._cccSettings = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("cccSetting")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ccCVShipments")>  _
	Partial Public Class ccCVShipment
		
		Private _COMPANY As Short
		
		Private _FINDOC As Integer
		
		Private _SOSOURCE As Integer
		
		Private _SODTYPE As Short
		
		Private _SOREDIR As Integer
		
		Private _TRNDATE As Date
		
		Private _SERIES As Short
		
		Private _FPRMS As Short
		
		Private _TFPRMS As Short
		
		Private _FINCODE As String
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _TRDBRANCH As System.Nullable(Of Integer)
		
		Private _COMMENTS As String
		
		Private _VARCHAR01 As String
		
		Private _VARCHAR02 As String
		
		Private _ISCANCEL As Short
		
		Private _ISPRINT As Short
		
		Private _APPRV As Short
		
		Private _FULLYTRANSF As Short
		
		Private _FINSTATES As System.Nullable(Of Short)
		
		Private _SHIPMENT As System.Nullable(Of Short)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _FFINDOCS As System.Nullable(Of Integer)
		
		Private _MTRDOCFINDOC As System.Nullable(Of Integer)
		
		Private _WHOUSE As System.Nullable(Of Short)
		
		Private _ccCTOTSHIPVALUE As System.Nullable(Of Double)
		
		Private _ccCLockShipValue As System.Nullable(Of Short)
		
		Private _ccCShippingNo As String
		
		Private _WHOUSENAME As String
		
		Private _SOCARRIER As System.Nullable(Of Short)
		
		Private _SOCARRIERNAME As String
		
		Private _TRUCKS As System.Nullable(Of Short)
		
		Private _TRUCKSNO As String
		
		Private _SHIPDATE As System.Nullable(Of Date)
		
		Private _DELIVDATE As System.Nullable(Of Date)
		
		Private _MTRLINES As System.Nullable(Of Integer)
		
		Private _LINENUM As System.Nullable(Of Integer)
		
		Private _RESTMODE As System.Nullable(Of Short)
		
		Private _PENDING As System.Nullable(Of Short)
		
		Private _MTRL As System.Nullable(Of Integer)
		
		Private _MTRUNIT As System.Nullable(Of Short)
		
		Private _MTRLINESWHOUSE As System.Nullable(Of Short)
		
		Private _WHOUSESEC As System.Nullable(Of Short)
		
		Private _SOTYPE As System.Nullable(Of Short)
		
		Private _PRICE As System.Nullable(Of Double)
		
		Private _NUM02 As System.Nullable(Of Double)
		
		Private _ccCSOCARRIER As System.Nullable(Of Short)
		
		Private _MTRLINESCCCSHIPVALUE As System.Nullable(Of Double)
		
		Private _MTRLINESCCCADR As System.Nullable(Of Short)
		
		Private _ccCTRUCKSNO As String
		
		Private _ccCDELIVDATE As System.Nullable(Of Date)
		
		Private _ccCPRIORITY As System.Nullable(Of Short)
		
		Private _ccCLocked As System.Nullable(Of Short)
		
		Private _ccCExecQty As System.Nullable(Of Double)
		
		Private _ccCExecDate As System.Nullable(Of Date)
		
		Private _ccCExecUser As System.Nullable(Of Short)
		
		Private _SOCARRIERMTRLINESNAME As String
		
		Private _QTY1 As Double
		
		Private _QTY1COV As Double
		
		Private _QTY1CANC As Double
		
		Private _QTY1FCOV As Double
		
		Private _CCCQTY1PRO As Double
		
		Private _CCCQTY1DIAF As Double
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _MTRTYPE As System.Nullable(Of Short)
		
		Private _MTRTYPE1 As System.Nullable(Of Short)
		
		Private _MTRUNIT1 As System.Nullable(Of Short)
		
		Private _MTRUNITSHORTCUT As String
		
		Private _MTRUNITNAME As String
		
		Private _QDECIMALS As System.Nullable(Of Short)
		
		Private _TRDRCODE As String
		
		Private _TRDRNAME As String
		
		Private _ISPROSP As System.Nullable(Of Short)
		
		Private _SOCURRENCY As System.Nullable(Of Short)
		
		Private _CITY As String
		
		Private _TRDBUSINESS As System.Nullable(Of Short)
		
		Private _TRDBRANCHSODTYPE As System.Nullable(Of Short)
		
		Private _TRDBRANCHNAME As String
		
		Private _ADDRESS As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _BRANCH As System.Nullable(Of Short)
		
		Private _NAME2 As String
		
		Private _PRSNCODE As String
		
		Private _SHIPVALUE As System.Nullable(Of Double)
		
		Private _FINDOCS As System.Nullable(Of Integer)
		
		Private _MTRLINESS As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me._COMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL")>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL")>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					Me._SOSOURCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me._SODTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOREDIR", DbType:="Int NOT NULL")>  _
		Public Property SOREDIR() As Integer
			Get
				Return Me._SOREDIR
			End Get
			Set
				If ((Me._SOREDIR = value)  _
							= false) Then
					Me._SOREDIR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime NOT NULL")>  _
		Public Property TRNDATE() As Date
			Get
				Return Me._TRNDATE
			End Get
			Set
				If ((Me._TRNDATE = value)  _
							= false) Then
					Me._TRNDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIES", DbType:="SmallInt NOT NULL")>  _
		Public Property SERIES() As Short
			Get
				Return Me._SERIES
			End Get
			Set
				If ((Me._SERIES = value)  _
							= false) Then
					Me._SERIES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					Me._FPRMS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property TFPRMS() As Short
			Get
				Return Me._TFPRMS
			End Get
			Set
				If ((Me._TFPRMS = value)  _
							= false) Then
					Me._TFPRMS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODE", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property FINCODE() As String
			Get
				Return Me._FINCODE
			End Get
			Set
				If (String.Equals(Me._FINCODE, value) = false) Then
					Me._FINCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int")>  _
		Public Property TRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If (Me._TRDBRANCH.Equals(value) = false) Then
					Me._TRDBRANCH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me._COMMENTS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR01", DbType:="VarChar(100)")>  _
		Public Property VARCHAR01() As String
			Get
				Return Me._VARCHAR01
			End Get
			Set
				If (String.Equals(Me._VARCHAR01, value) = false) Then
					Me._VARCHAR01 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VARCHAR02", DbType:="VarChar(100)")>  _
		Public Property VARCHAR02() As String
			Get
				Return Me._VARCHAR02
			End Get
			Set
				If (String.Equals(Me._VARCHAR02, value) = false) Then
					Me._VARCHAR02 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCANCEL", DbType:="SmallInt NOT NULL")>  _
		Public Property ISCANCEL() As Short
			Get
				Return Me._ISCANCEL
			End Get
			Set
				If ((Me._ISCANCEL = value)  _
							= false) Then
					Me._ISCANCEL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISPRINT", DbType:="SmallInt NOT NULL")>  _
		Public Property ISPRINT() As Short
			Get
				Return Me._ISPRINT
			End Get
			Set
				If ((Me._ISPRINT = value)  _
							= false) Then
					Me._ISPRINT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPRV", DbType:="SmallInt NOT NULL")>  _
		Public Property APPRV() As Short
			Get
				Return Me._APPRV
			End Get
			Set
				If ((Me._APPRV = value)  _
							= false) Then
					Me._APPRV = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULLYTRANSF", DbType:="SmallInt NOT NULL")>  _
		Public Property FULLYTRANSF() As Short
			Get
				Return Me._FULLYTRANSF
			End Get
			Set
				If ((Me._FULLYTRANSF = value)  _
							= false) Then
					Me._FULLYTRANSF = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINSTATES", DbType:="SmallInt")>  _
		Public Property FINSTATES() As System.Nullable(Of Short)
			Get
				Return Me._FINSTATES
			End Get
			Set
				If (Me._FINSTATES.Equals(value) = false) Then
					Me._FINSTATES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPMENT", DbType:="SmallInt")>  _
		Public Property SHIPMENT() As System.Nullable(Of Short)
			Get
				Return Me._SHIPMENT
			End Get
			Set
				If (Me._SHIPMENT.Equals(value) = false) Then
					Me._SHIPMENT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					Me._SALESMAN = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFINDOCS", DbType:="Int")>  _
		Public Property FFINDOCS() As System.Nullable(Of Integer)
			Get
				Return Me._FFINDOCS
			End Get
			Set
				If (Me._FFINDOCS.Equals(value) = false) Then
					Me._FFINDOCS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRDOCFINDOC", DbType:="Int")>  _
		Public Property MTRDOCFINDOC() As System.Nullable(Of Integer)
			Get
				Return Me._MTRDOCFINDOC
			End Get
			Set
				If (Me._MTRDOCFINDOC.Equals(value) = false) Then
					Me._MTRDOCFINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt")>  _
		Public Property WHOUSE() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSE
			End Get
			Set
				If (Me._WHOUSE.Equals(value) = false) Then
					Me._WHOUSE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTOTSHIPVALUE", DbType:="Float")>  _
		Public Property ccCTOTSHIPVALUE() As System.Nullable(Of Double)
			Get
				Return Me._ccCTOTSHIPVALUE
			End Get
			Set
				If (Me._ccCTOTSHIPVALUE.Equals(value) = false) Then
					Me._ccCTOTSHIPVALUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCLockShipValue", DbType:="SmallInt")>  _
		Public Property ccCLockShipValue() As System.Nullable(Of Short)
			Get
				Return Me._ccCLockShipValue
			End Get
			Set
				If (Me._ccCLockShipValue.Equals(value) = false) Then
					Me._ccCLockShipValue = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCShippingNo", DbType:="VarChar(100)")>  _
		Public Property ccCShippingNo() As String
			Get
				Return Me._ccCShippingNo
			End Get
			Set
				If (String.Equals(Me._ccCShippingNo, value) = false) Then
					Me._ccCShippingNo = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSENAME", DbType:="VarChar(64)")>  _
		Public Property WHOUSENAME() As String
			Get
				Return Me._WHOUSENAME
			End Get
			Set
				If (String.Equals(Me._WHOUSENAME, value) = false) Then
					Me._WHOUSENAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIER", DbType:="SmallInt")>  _
		Public Property SOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._SOCARRIER
			End Get
			Set
				If (Me._SOCARRIER.Equals(value) = false) Then
					Me._SOCARRIER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIERNAME", DbType:="VarChar(50)")>  _
		Public Property SOCARRIERNAME() As String
			Get
				Return Me._SOCARRIERNAME
			End Get
			Set
				If (String.Equals(Me._SOCARRIERNAME, value) = false) Then
					Me._SOCARRIERNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUCKS", DbType:="SmallInt")>  _
		Public Property TRUCKS() As System.Nullable(Of Short)
			Get
				Return Me._TRUCKS
			End Get
			Set
				If (Me._TRUCKS.Equals(value) = false) Then
					Me._TRUCKS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUCKSNO", DbType:="VarChar(20)")>  _
		Public Property TRUCKSNO() As String
			Get
				Return Me._TRUCKSNO
			End Get
			Set
				If (String.Equals(Me._TRUCKSNO, value) = false) Then
					Me._TRUCKSNO = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPDATE", DbType:="DateTime")>  _
		Public Property SHIPDATE() As System.Nullable(Of Date)
			Get
				Return Me._SHIPDATE
			End Get
			Set
				If (Me._SHIPDATE.Equals(value) = false) Then
					Me._SHIPDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DELIVDATE", DbType:="DateTime")>  _
		Public Property DELIVDATE() As System.Nullable(Of Date)
			Get
				Return Me._DELIVDATE
			End Get
			Set
				If (Me._DELIVDATE.Equals(value) = false) Then
					Me._DELIVDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINES", DbType:="Int")>  _
		Public Property MTRLINES() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLINES
			End Get
			Set
				If (Me._MTRLINES.Equals(value) = false) Then
					Me._MTRLINES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINENUM", DbType:="Int")>  _
		Public Property LINENUM() As System.Nullable(Of Integer)
			Get
				Return Me._LINENUM
			End Get
			Set
				If (Me._LINENUM.Equals(value) = false) Then
					Me._LINENUM = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESTMODE", DbType:="SmallInt")>  _
		Public Property RESTMODE() As System.Nullable(Of Short)
			Get
				Return Me._RESTMODE
			End Get
			Set
				If (Me._RESTMODE.Equals(value) = false) Then
					Me._RESTMODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PENDING", DbType:="SmallInt")>  _
		Public Property PENDING() As System.Nullable(Of Short)
			Get
				Return Me._PENDING
			End Get
			Set
				If (Me._PENDING.Equals(value) = false) Then
					Me._PENDING = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", DbType:="Int")>  _
		Public Property MTRL() As System.Nullable(Of Integer)
			Get
				Return Me._MTRL
			End Get
			Set
				If (Me._MTRL.Equals(value) = false) Then
					Me._MTRL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT", DbType:="SmallInt")>  _
		Public Property MTRUNIT() As System.Nullable(Of Short)
			Get
				Return Me._MTRUNIT
			End Get
			Set
				If (Me._MTRUNIT.Equals(value) = false) Then
					Me._MTRUNIT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINESWHOUSE", DbType:="SmallInt")>  _
		Public Property MTRLINESWHOUSE() As System.Nullable(Of Short)
			Get
				Return Me._MTRLINESWHOUSE
			End Get
			Set
				If (Me._MTRLINESWHOUSE.Equals(value) = false) Then
					Me._MTRLINESWHOUSE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSESEC", DbType:="SmallInt")>  _
		Public Property WHOUSESEC() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSESEC
			End Get
			Set
				If (Me._WHOUSESEC.Equals(value) = false) Then
					Me._WHOUSESEC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOTYPE", DbType:="SmallInt")>  _
		Public Property SOTYPE() As System.Nullable(Of Short)
			Get
				Return Me._SOTYPE
			End Get
			Set
				If (Me._SOTYPE.Equals(value) = false) Then
					Me._SOTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE", DbType:="Float")>  _
		Public Property PRICE() As System.Nullable(Of Double)
			Get
				Return Me._PRICE
			End Get
			Set
				If (Me._PRICE.Equals(value) = false) Then
					Me._PRICE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM02", DbType:="Float")>  _
		Public Property NUM02() As System.Nullable(Of Double)
			Get
				Return Me._NUM02
			End Get
			Set
				If (Me._NUM02.Equals(value) = false) Then
					Me._NUM02 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCSOCARRIER", DbType:="SmallInt")>  _
		Public Property ccCSOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._ccCSOCARRIER
			End Get
			Set
				If (Me._ccCSOCARRIER.Equals(value) = false) Then
					Me._ccCSOCARRIER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINESCCCSHIPVALUE", DbType:="Float")>  _
		Public Property MTRLINESCCCSHIPVALUE() As System.Nullable(Of Double)
			Get
				Return Me._MTRLINESCCCSHIPVALUE
			End Get
			Set
				If (Me._MTRLINESCCCSHIPVALUE.Equals(value) = false) Then
					Me._MTRLINESCCCSHIPVALUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINESCCCADR", DbType:="SmallInt")>  _
		Public Property MTRLINESCCCADR() As System.Nullable(Of Short)
			Get
				Return Me._MTRLINESCCCADR
			End Get
			Set
				If (Me._MTRLINESCCCADR.Equals(value) = false) Then
					Me._MTRLINESCCCADR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTRUCKSNO", DbType:="VarChar(20)")>  _
		Public Property ccCTRUCKSNO() As String
			Get
				Return Me._ccCTRUCKSNO
			End Get
			Set
				If (String.Equals(Me._ccCTRUCKSNO, value) = false) Then
					Me._ccCTRUCKSNO = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCDELIVDATE", DbType:="DateTime")>  _
		Public Property ccCDELIVDATE() As System.Nullable(Of Date)
			Get
				Return Me._ccCDELIVDATE
			End Get
			Set
				If (Me._ccCDELIVDATE.Equals(value) = false) Then
					Me._ccCDELIVDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCPRIORITY", DbType:="SmallInt")>  _
		Public Property ccCPRIORITY() As System.Nullable(Of Short)
			Get
				Return Me._ccCPRIORITY
			End Get
			Set
				If (Me._ccCPRIORITY.Equals(value) = false) Then
					Me._ccCPRIORITY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCLocked", DbType:="SmallInt")>  _
		Public Property ccCLocked() As System.Nullable(Of Short)
			Get
				Return Me._ccCLocked
			End Get
			Set
				If (Me._ccCLocked.Equals(value) = false) Then
					Me._ccCLocked = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCExecQty", DbType:="Float")>  _
		Public Property ccCExecQty() As System.Nullable(Of Double)
			Get
				Return Me._ccCExecQty
			End Get
			Set
				If (Me._ccCExecQty.Equals(value) = false) Then
					Me._ccCExecQty = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCExecDate", DbType:="DateTime")>  _
		Public Property ccCExecDate() As System.Nullable(Of Date)
			Get
				Return Me._ccCExecDate
			End Get
			Set
				If (Me._ccCExecDate.Equals(value) = false) Then
					Me._ccCExecDate = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCExecUser", DbType:="SmallInt")>  _
		Public Property ccCExecUser() As System.Nullable(Of Short)
			Get
				Return Me._ccCExecUser
			End Get
			Set
				If (Me._ccCExecUser.Equals(value) = false) Then
					Me._ccCExecUser = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCARRIERMTRLINESNAME", DbType:="VarChar(50)")>  _
		Public Property SOCARRIERMTRLINESNAME() As String
			Get
				Return Me._SOCARRIERMTRLINESNAME
			End Get
			Set
				If (String.Equals(Me._SOCARRIERMTRLINESNAME, value) = false) Then
					Me._SOCARRIERMTRLINESNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1", DbType:="Float NOT NULL")>  _
		Public Property QTY1() As Double
			Get
				Return Me._QTY1
			End Get
			Set
				If ((Me._QTY1 = value)  _
							= false) Then
					Me._QTY1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1COV", DbType:="Float NOT NULL")>  _
		Public Property QTY1COV() As Double
			Get
				Return Me._QTY1COV
			End Get
			Set
				If ((Me._QTY1COV = value)  _
							= false) Then
					Me._QTY1COV = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1CANC", DbType:="Float NOT NULL")>  _
		Public Property QTY1CANC() As Double
			Get
				Return Me._QTY1CANC
			End Get
			Set
				If ((Me._QTY1CANC = value)  _
							= false) Then
					Me._QTY1CANC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1FCOV", DbType:="Float NOT NULL")>  _
		Public Property QTY1FCOV() As Double
			Get
				Return Me._QTY1FCOV
			End Get
			Set
				If ((Me._QTY1FCOV = value)  _
							= false) Then
					Me._QTY1FCOV = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CCCQTY1PRO", DbType:="Float NOT NULL")>  _
		Public Property CCCQTY1PRO() As Double
			Get
				Return Me._CCCQTY1PRO
			End Get
			Set
				If ((Me._CCCQTY1PRO = value)  _
							= false) Then
					Me._CCCQTY1PRO = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CCCQTY1DIAF", DbType:="Float NOT NULL")>  _
		Public Property CCCQTY1DIAF() As Double
			Get
				Return Me._CCCQTY1DIAF
			End Get
			Set
				If ((Me._CCCQTY1DIAF = value)  _
							= false) Then
					Me._CCCQTY1DIAF = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25)")>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(128)")>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRTYPE", DbType:="SmallInt")>  _
		Public Property MTRTYPE() As System.Nullable(Of Short)
			Get
				Return Me._MTRTYPE
			End Get
			Set
				If (Me._MTRTYPE.Equals(value) = false) Then
					Me._MTRTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRTYPE1", DbType:="SmallInt")>  _
		Public Property MTRTYPE1() As System.Nullable(Of Short)
			Get
				Return Me._MTRTYPE1
			End Get
			Set
				If (Me._MTRTYPE1.Equals(value) = false) Then
					Me._MTRTYPE1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT1", DbType:="SmallInt")>  _
		Public Property MTRUNIT1() As System.Nullable(Of Short)
			Get
				Return Me._MTRUNIT1
			End Get
			Set
				If (Me._MTRUNIT1.Equals(value) = false) Then
					Me._MTRUNIT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNITSHORTCUT", DbType:="VarChar(5)")>  _
		Public Property MTRUNITSHORTCUT() As String
			Get
				Return Me._MTRUNITSHORTCUT
			End Get
			Set
				If (String.Equals(Me._MTRUNITSHORTCUT, value) = false) Then
					Me._MTRUNITSHORTCUT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNITNAME", DbType:="VarChar(50)")>  _
		Public Property MTRUNITNAME() As String
			Get
				Return Me._MTRUNITNAME
			End Get
			Set
				If (String.Equals(Me._MTRUNITNAME, value) = false) Then
					Me._MTRUNITNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDECIMALS", DbType:="SmallInt")>  _
		Public Property QDECIMALS() As System.Nullable(Of Short)
			Get
				Return Me._QDECIMALS
			End Get
			Set
				If (Me._QDECIMALS.Equals(value) = false) Then
					Me._QDECIMALS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRCODE", DbType:="VarChar(25)")>  _
		Public Property TRDRCODE() As String
			Get
				Return Me._TRDRCODE
			End Get
			Set
				If (String.Equals(Me._TRDRCODE, value) = false) Then
					Me._TRDRCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDRNAME", DbType:="VarChar(128)")>  _
		Public Property TRDRNAME() As String
			Get
				Return Me._TRDRNAME
			End Get
			Set
				If (String.Equals(Me._TRDRNAME, value) = false) Then
					Me._TRDRNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISPROSP", DbType:="SmallInt")>  _
		Public Property ISPROSP() As System.Nullable(Of Short)
			Get
				Return Me._ISPROSP
			End Get
			Set
				If (Me._ISPROSP.Equals(value) = false) Then
					Me._ISPROSP = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt")>  _
		Public Property SOCURRENCY() As System.Nullable(Of Short)
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If (Me._SOCURRENCY.Equals(value) = false) Then
					Me._SOCURRENCY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me._CITY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBUSINESS", DbType:="SmallInt")>  _
		Public Property TRDBUSINESS() As System.Nullable(Of Short)
			Get
				Return Me._TRDBUSINESS
			End Get
			Set
				If (Me._TRDBUSINESS.Equals(value) = false) Then
					Me._TRDBUSINESS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHSODTYPE", DbType:="SmallInt")>  _
		Public Property TRDBRANCHSODTYPE() As System.Nullable(Of Short)
			Get
				Return Me._TRDBRANCHSODTYPE
			End Get
			Set
				If (Me._TRDBRANCHSODTYPE.Equals(value) = false) Then
					Me._TRDBRANCHSODTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCHNAME", DbType:="VarChar(64)")>  _
		Public Property TRDBRANCHNAME() As String
			Get
				Return Me._TRDBRANCHNAME
			End Get
			Set
				If (String.Equals(Me._TRDBRANCHNAME, value) = false) Then
					Me._TRDBRANCHNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(100)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me._ADDRESS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me._DISTRICT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt")>  _
		Public Property BRANCH() As System.Nullable(Of Short)
			Get
				Return Me._BRANCH
			End Get
			Set
				If (Me._BRANCH.Equals(value) = false) Then
					Me._BRANCH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME2", DbType:="VarChar(64)")>  _
		Public Property NAME2() As String
			Get
				Return Me._NAME2
			End Get
			Set
				If (String.Equals(Me._NAME2, value) = false) Then
					Me._NAME2 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSNCODE", DbType:="VarChar(25)")>  _
		Public Property PRSNCODE() As String
			Get
				Return Me._PRSNCODE
			End Get
			Set
				If (String.Equals(Me._PRSNCODE, value) = false) Then
					Me._PRSNCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPVALUE", DbType:="Float")>  _
		Public Property SHIPVALUE() As System.Nullable(Of Double)
			Get
				Return Me._SHIPVALUE
			End Get
			Set
				If (Me._SHIPVALUE.Equals(value) = false) Then
					Me._SHIPVALUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCS", DbType:="Int")>  _
		Public Property FINDOCS() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCS
			End Get
			Set
				If (Me._FINDOCS.Equals(value) = false) Then
					Me._FINDOCS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINESS", DbType:="Int")>  _
		Public Property MTRLINESS() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLINESS
			End Get
			Set
				If (Me._MTRLINESS.Equals(value) = false) Then
					Me._MTRLINESS = value
				End If
			End Set
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MTRLINES")>  _
	Partial Public Class MTRLINE
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _FINDOC As Integer
		
		Private _MTRLINES As Integer
		
		Private _LINENUM As Integer
		
		Private _SODTYPE As Short
		
		Private _MTRL As Integer
		
		Private _PENDING As Short
		
		Private _RESTMODE As System.Nullable(Of Short)
		
		Private _SOSOURCE As Integer
		
		Private _SOREDIR As Integer
		
		Private _SCODE As String
		
		Private _MTRTYPE As Short
		
		Private _SOTYPE As Short
		
		Private _WHOUSE As System.Nullable(Of Short)
		
		Private _WHOUSESEC As System.Nullable(Of Short)
		
		Private _MTRUNIT As System.Nullable(Of Short)
		
		Private _VAT As Short
		
		Private _PRJC As System.Nullable(Of Integer)
		
		Private _PRJLINES As System.Nullable(Of Integer)
		
		Private _PRJCSTAGE As System.Nullable(Of Short)
		
		Private _MTRPRJCBLD As System.Nullable(Of Short)
		
		Private _SOEXPTYPE As System.Nullable(Of Short)
		
		Private _SALESMAN As System.Nullable(Of Integer)
		
		Private _RSRC As System.Nullable(Of Integer)
		
		Private _MTRLOT As System.Nullable(Of Integer)
		
		Private _ASSDEPR As System.Nullable(Of Integer)
		
		Private _WHOUSEBIN As System.Nullable(Of Short)
		
		Private _WHOUSEBINSEC As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _MTRSEASON As System.Nullable(Of Short)
		
		Private _MTRCATEGORY As System.Nullable(Of Short)
		
		Private _PRCPOLICY As System.Nullable(Of Short)
		
		Private _SPCS As System.Nullable(Of Integer)
		
		Private _MTRPACK As System.Nullable(Of Integer)
		
		Private _QTYP As System.Nullable(Of Double)
		
		Private _QTY As System.Nullable(Of Double)
		
		Private _QTY1 As Double
		
		Private _QTY2 As Double
		
		Private _QTY1COV As Double
		
		Private _QTY1CANC As Double
		
		Private _QTY1FCOV As Double
		
		Private _SHIPDATE As System.Nullable(Of Date)
		
		Private _DELIVDATE As System.Nullable(Of Date)
		
		Private _WEIGHT As System.Nullable(Of Double)
		
		Private _VOLUME As System.Nullable(Of Double)
		
		Private _INTVAL As System.Nullable(Of Double)
		
		Private _INTVAT As System.Nullable(Of Double)
		
		Private _BGINTCOUNTRY As System.Nullable(Of Short)
		
		Private _BGINTDISTRICT As System.Nullable(Of Short)
		
		Private _DUTY As System.Nullable(Of Double)
		
		Private _PLSMVAL As System.Nullable(Of Double)
		
		Private _PLSMVAT As System.Nullable(Of Double)
		
		Private _PRICE As System.Nullable(Of Double)
		
		Private _PRICE1 As System.Nullable(Of Double)
		
		Private _LINEVAL As System.Nullable(Of Double)
		
		Private _LLINEVAL As System.Nullable(Of Double)
		
		Private _EXPVAL As System.Nullable(Of Double)
		
		Private _LEXPVAL As Double
		
		Private _LEXPVAL1 As System.Nullable(Of Double)
		
		Private _LEXPVATVAL1 As System.Nullable(Of Double)
		
		Private _DISC1PRC As System.Nullable(Of Double)
		
		Private _DISC2PRC As System.Nullable(Of Double)
		
		Private _DISC3PRC As System.Nullable(Of Double)
		
		Private _DISC1VAL As System.Nullable(Of Double)
		
		Private _LDISC1VAL As System.Nullable(Of Double)
		
		Private _DISC2VAL As System.Nullable(Of Double)
		
		Private _LDISC2VAL As System.Nullable(Of Double)
		
		Private _DISC3VAL As System.Nullable(Of Double)
		
		Private _LDISC3VAL As System.Nullable(Of Double)
		
		Private _NETLINEVAL As Double
		
		Private _LNETLINEVAL As Double
		
		Private _VATAMNT As Double
		
		Private _LVATAMNT As Double
		
		Private _LVATNOEXM As System.Nullable(Of Double)
		
		Private _SALESCVAL As System.Nullable(Of Double)
		
		Private _EFKVAL As Double
		
		Private _COMMENTS As String
		
		Private _COMMENTS1 As String
		
		Private _COMMENTS2 As String
		
		Private _DIMENSION1 As System.Nullable(Of Double)
		
		Private _DIMENSION2 As System.Nullable(Of Double)
		
		Private _DIMENSION3 As System.Nullable(Of Double)
		
		Private _TRNLINEVAL As System.Nullable(Of Double)
		
		Private _LTRNLINEVAL As System.Nullable(Of Double)
		
		Private _PRCRULEDATA As String
		
		Private _INSTALMENTS As System.Nullable(Of Short)
		
		Private _WASTE As System.Nullable(Of Double)
		
		Private _COSTCOEF As System.Nullable(Of Double)
		
		Private _CONVPRC As System.Nullable(Of Double)
		
		Private _STAGE As System.Nullable(Of Short)
		
		Private _STAGELINENUM As System.Nullable(Of Short)
		
		Private _ACNMSK As String
		
		Private _ACNMSK1 As String
		
		Private _FINDOCS As System.Nullable(Of Integer)
		
		Private _MTRLINESS As System.Nullable(Of Integer)
		
		Private _FINDOCL As System.Nullable(Of Integer)
		
		Private _MTRLINESL As System.Nullable(Of Integer)
		
		Private _SOANAL As String
		
		Private _SXMSKK As System.Nullable(Of Integer)
		
		Private _SXPERC As System.Nullable(Of Double)
		
		Private _BGLEXCISE As System.Nullable(Of Double)
		
		Private _AUTOPRDDOC As Short
		
		Private _ACNMSKS As String
		
		Private _ACNMSKX As String
		
		Private _COSTCNTR As System.Nullable(Of Integer)
		
		Private _ITECALCTYPE As System.Nullable(Of Short)
		
		Private _GUARTIME As System.Nullable(Of Short)
		
		Private _SRVDEBITTYPE As System.Nullable(Of Short)
		
		Private _PACKSTATUS As System.Nullable(Of Short)
		
		Private _PACKCODE1 As String
		
		Private _PACKCODE2 As String
		
		Private _LWMARKUP As System.Nullable(Of Double)
		
		Private _LRMARKUP As System.Nullable(Of Double)
		
		Private _NUM01 As System.Nullable(Of Double)
		
		Private _NUM02 As System.Nullable(Of Double)
		
		Private _NUM03 As System.Nullable(Of Double)
		
		Private _NUM04 As System.Nullable(Of Double)
		
		Private _BOOL01 As System.Nullable(Of Short)
		
		Private _BOOL02 As System.Nullable(Of Short)
		
		Private _DATE01 As System.Nullable(Of Date)
		
		Private _DATE02 As System.Nullable(Of Date)
		
		Private _UFTBL01 As System.Nullable(Of Short)
		
		Private _UFTBL02 As System.Nullable(Of Short)
		
		Private _ccCQTY1PRO As System.Nullable(Of Double)
		
		Private _ccCSOCARRIER As System.Nullable(Of Short)
		
		Private _ccCSHIPVALUE As System.Nullable(Of Double)
		
		Private _ccCADR As System.Nullable(Of Short)
		
		Private _ccCTRUCKSNO As String
		
		Private _ccCDELIVDATE As System.Nullable(Of Date)
		
		Private _ccCPRIORITY As System.Nullable(Of Short)
		
		Private _ccCLocked As System.Nullable(Of Short)
		
		Private _ccCDiscPRC As System.Nullable(Of Double)
		
		Private _ccCDiscVAL As System.Nullable(Of Double)
		
		Private _ACNDOCCATEGORY As System.Nullable(Of Integer)
		
		Private _INST As System.Nullable(Of Integer)
		
		Private _CNTR As System.Nullable(Of Integer)
		
		Private _VAT1 As System.Nullable(Of Integer)
		
		Private _CUSTOMSLOT As System.Nullable(Of Integer)
		
		Private _CMTRUNIT As System.Nullable(Of Short)
		
		Private _QUANTITY As System.Nullable(Of Double)
		
		Private _GROSSMASS As System.Nullable(Of Double)
		
		Private _NETMASS As System.Nullable(Of Double)
		
		Private _BOND As System.Nullable(Of Integer)
		
		Private _PSPCS As System.Nullable(Of Integer)
		
		Private _MYDATACODE As System.Nullable(Of Short)
		
		Private _ccCExecQty As System.Nullable(Of Double)
		
		Private _ccCExecDate As System.Nullable(Of Date)
		
		Private _ccCExecUser As System.Nullable(Of Short)
		
		Private _ccCIDLabels As String
		
		Private _FINDOC1 As EntityRef(Of FINDOC)
		
		Private _WHOUSEBIN1 As EntityRef(Of WHOUSEBIN)
		
		Private _MTRL1 As EntityRef(Of MTRL)
		
		Private _WHOUSE1 As EntityRef(Of WHOUSE)
		
		Private _WHOUSE2 As EntityRef(Of WHOUSE)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnFINDOCChanging(value As Integer)
    End Sub
    Partial Private Sub OnFINDOCChanged()
    End Sub
    Partial Private Sub OnMTRLINESChanging(value As Integer)
    End Sub
    Partial Private Sub OnMTRLINESChanged()
    End Sub
    Partial Private Sub OnLINENUMChanging(value As Integer)
    End Sub
    Partial Private Sub OnLINENUMChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnMTRLChanging(value As Integer)
    End Sub
    Partial Private Sub OnMTRLChanged()
    End Sub
    Partial Private Sub OnPENDINGChanging(value As Short)
    End Sub
    Partial Private Sub OnPENDINGChanged()
    End Sub
    Partial Private Sub OnRESTMODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRESTMODEChanged()
    End Sub
    Partial Private Sub OnSOSOURCEChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOSOURCEChanged()
    End Sub
    Partial Private Sub OnSOREDIRChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOREDIRChanged()
    End Sub
    Partial Private Sub OnSCODEChanging(value As String)
    End Sub
    Partial Private Sub OnSCODEChanged()
    End Sub
    Partial Private Sub OnMTRTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRTYPEChanged()
    End Sub
    Partial Private Sub OnSOTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSOTYPEChanged()
    End Sub
    Partial Private Sub OnWHOUSEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSEChanged()
    End Sub
    Partial Private Sub OnWHOUSESECChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSESECChanged()
    End Sub
    Partial Private Sub OnMTRUNITChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRUNITChanged()
    End Sub
    Partial Private Sub OnVATChanging(value As Short)
    End Sub
    Partial Private Sub OnVATChanged()
    End Sub
    Partial Private Sub OnPRJCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJCChanged()
    End Sub
    Partial Private Sub OnPRJLINESChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRJLINESChanged()
    End Sub
    Partial Private Sub OnPRJCSTAGEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRJCSTAGEChanged()
    End Sub
    Partial Private Sub OnMTRPRJCBLDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRPRJCBLDChanged()
    End Sub
    Partial Private Sub OnSOEXPTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOEXPTYPEChanged()
    End Sub
    Partial Private Sub OnSALESMANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALESMANChanged()
    End Sub
    Partial Private Sub OnRSRCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRSRCChanged()
    End Sub
    Partial Private Sub OnMTRLOTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRLOTChanged()
    End Sub
    Partial Private Sub OnASSDEPRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnASSDEPRChanged()
    End Sub
    Partial Private Sub OnWHOUSEBINChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSEBINChanged()
    End Sub
    Partial Private Sub OnWHOUSEBINSECChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWHOUSEBINSECChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnMTRSEASONChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRSEASONChanged()
    End Sub
    Partial Private Sub OnMTRCATEGORYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRCATEGORYChanged()
    End Sub
    Partial Private Sub OnPRCPOLICYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRCPOLICYChanged()
    End Sub
    Partial Private Sub OnSPCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPCSChanged()
    End Sub
    Partial Private Sub OnMTRPACKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRPACKChanged()
    End Sub
    Partial Private Sub OnQTYPChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnQTYPChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnQTY1Changing(value As Double)
    End Sub
    Partial Private Sub OnQTY1Changed()
    End Sub
    Partial Private Sub OnQTY2Changing(value As Double)
    End Sub
    Partial Private Sub OnQTY2Changed()
    End Sub
    Partial Private Sub OnQTY1COVChanging(value As Double)
    End Sub
    Partial Private Sub OnQTY1COVChanged()
    End Sub
    Partial Private Sub OnQTY1CANCChanging(value As Double)
    End Sub
    Partial Private Sub OnQTY1CANCChanged()
    End Sub
    Partial Private Sub OnQTY1FCOVChanging(value As Double)
    End Sub
    Partial Private Sub OnQTY1FCOVChanged()
    End Sub
    Partial Private Sub OnSHIPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSHIPDATEChanged()
    End Sub
    Partial Private Sub OnDELIVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDELIVDATEChanged()
    End Sub
    Partial Private Sub OnWEIGHTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnWEIGHTChanged()
    End Sub
    Partial Private Sub OnVOLUMEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVOLUMEChanged()
    End Sub
    Partial Private Sub OnINTVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnINTVALChanged()
    End Sub
    Partial Private Sub OnINTVATChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnINTVATChanged()
    End Sub
    Partial Private Sub OnBGINTCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBGINTCOUNTRYChanged()
    End Sub
    Partial Private Sub OnBGINTDISTRICTChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBGINTDISTRICTChanged()
    End Sub
    Partial Private Sub OnDUTYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDUTYChanged()
    End Sub
    Partial Private Sub OnPLSMVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPLSMVALChanged()
    End Sub
    Partial Private Sub OnPLSMVATChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPLSMVATChanged()
    End Sub
    Partial Private Sub OnPRICEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEChanged()
    End Sub
    Partial Private Sub OnPRICE1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICE1Changed()
    End Sub
    Partial Private Sub OnLINEVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLINEVALChanged()
    End Sub
    Partial Private Sub OnLLINEVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLLINEVALChanged()
    End Sub
    Partial Private Sub OnEXPVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXPVALChanged()
    End Sub
    Partial Private Sub OnLEXPVALChanging(value As Double)
    End Sub
    Partial Private Sub OnLEXPVALChanged()
    End Sub
    Partial Private Sub OnLEXPVAL1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLEXPVAL1Changed()
    End Sub
    Partial Private Sub OnLEXPVATVAL1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLEXPVATVAL1Changed()
    End Sub
    Partial Private Sub OnDISC1PRCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISC1PRCChanged()
    End Sub
    Partial Private Sub OnDISC2PRCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISC2PRCChanged()
    End Sub
    Partial Private Sub OnDISC3PRCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISC3PRCChanged()
    End Sub
    Partial Private Sub OnDISC1VALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISC1VALChanged()
    End Sub
    Partial Private Sub OnLDISC1VALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLDISC1VALChanged()
    End Sub
    Partial Private Sub OnDISC2VALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISC2VALChanged()
    End Sub
    Partial Private Sub OnLDISC2VALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLDISC2VALChanged()
    End Sub
    Partial Private Sub OnDISC3VALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDISC3VALChanged()
    End Sub
    Partial Private Sub OnLDISC3VALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLDISC3VALChanged()
    End Sub
    Partial Private Sub OnNETLINEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnNETLINEVALChanged()
    End Sub
    Partial Private Sub OnLNETLINEVALChanging(value As Double)
    End Sub
    Partial Private Sub OnLNETLINEVALChanged()
    End Sub
    Partial Private Sub OnVATAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnVATAMNTChanged()
    End Sub
    Partial Private Sub OnLVATAMNTChanging(value As Double)
    End Sub
    Partial Private Sub OnLVATAMNTChanged()
    End Sub
    Partial Private Sub OnLVATNOEXMChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLVATNOEXMChanged()
    End Sub
    Partial Private Sub OnSALESCVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSALESCVALChanged()
    End Sub
    Partial Private Sub OnEFKVALChanging(value As Double)
    End Sub
    Partial Private Sub OnEFKVALChanged()
    End Sub
    Partial Private Sub OnCOMMENTSChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMENTSChanged()
    End Sub
    Partial Private Sub OnCOMMENTS1Changing(value As String)
    End Sub
    Partial Private Sub OnCOMMENTS1Changed()
    End Sub
    Partial Private Sub OnCOMMENTS2Changing(value As String)
    End Sub
    Partial Private Sub OnCOMMENTS2Changed()
    End Sub
    Partial Private Sub OnDIMENSION1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIMENSION1Changed()
    End Sub
    Partial Private Sub OnDIMENSION2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIMENSION2Changed()
    End Sub
    Partial Private Sub OnDIMENSION3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIMENSION3Changed()
    End Sub
    Partial Private Sub OnTRNLINEVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRNLINEVALChanged()
    End Sub
    Partial Private Sub OnLTRNLINEVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLTRNLINEVALChanged()
    End Sub
    Partial Private Sub OnPRCRULEDATAChanging(value As String)
    End Sub
    Partial Private Sub OnPRCRULEDATAChanged()
    End Sub
    Partial Private Sub OnINSTALMENTSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSTALMENTSChanged()
    End Sub
    Partial Private Sub OnWASTEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnWASTEChanged()
    End Sub
    Partial Private Sub OnCOSTCOEFChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCOSTCOEFChanged()
    End Sub
    Partial Private Sub OnCONVPRCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCONVPRCChanged()
    End Sub
    Partial Private Sub OnSTAGEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSTAGEChanged()
    End Sub
    Partial Private Sub OnSTAGELINENUMChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSTAGELINENUMChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnACNMSK1Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK1Changed()
    End Sub
    Partial Private Sub OnFINDOCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCSChanged()
    End Sub
    Partial Private Sub OnMTRLINESSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRLINESSChanged()
    End Sub
    Partial Private Sub OnFINDOCLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFINDOCLChanged()
    End Sub
    Partial Private Sub OnMTRLINESLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRLINESLChanged()
    End Sub
    Partial Private Sub OnSOANALChanging(value As String)
    End Sub
    Partial Private Sub OnSOANALChanged()
    End Sub
    Partial Private Sub OnSXMSKKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSXMSKKChanged()
    End Sub
    Partial Private Sub OnSXPERCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSXPERCChanged()
    End Sub
    Partial Private Sub OnBGLEXCISEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBGLEXCISEChanged()
    End Sub
    Partial Private Sub OnAUTOPRDDOCChanging(value As Short)
    End Sub
    Partial Private Sub OnAUTOPRDDOCChanged()
    End Sub
    Partial Private Sub OnACNMSKSChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKSChanged()
    End Sub
    Partial Private Sub OnACNMSKXChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKXChanged()
    End Sub
    Partial Private Sub OnCOSTCNTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOSTCNTRChanged()
    End Sub
    Partial Private Sub OnITECALCTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnITECALCTYPEChanged()
    End Sub
    Partial Private Sub OnGUARTIMEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGUARTIMEChanged()
    End Sub
    Partial Private Sub OnSRVDEBITTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSRVDEBITTYPEChanged()
    End Sub
    Partial Private Sub OnPACKSTATUSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPACKSTATUSChanged()
    End Sub
    Partial Private Sub OnPACKCODE1Changing(value As String)
    End Sub
    Partial Private Sub OnPACKCODE1Changed()
    End Sub
    Partial Private Sub OnPACKCODE2Changing(value As String)
    End Sub
    Partial Private Sub OnPACKCODE2Changed()
    End Sub
    Partial Private Sub OnLWMARKUPChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLWMARKUPChanged()
    End Sub
    Partial Private Sub OnLRMARKUPChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLRMARKUPChanged()
    End Sub
    Partial Private Sub OnNUM01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM01Changed()
    End Sub
    Partial Private Sub OnNUM02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM02Changed()
    End Sub
    Partial Private Sub OnNUM03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM03Changed()
    End Sub
    Partial Private Sub OnNUM04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNUM04Changed()
    End Sub
    Partial Private Sub OnBOOL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBOOL01Changed()
    End Sub
    Partial Private Sub OnBOOL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBOOL02Changed()
    End Sub
    Partial Private Sub OnDATE01Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE01Changed()
    End Sub
    Partial Private Sub OnDATE02Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE02Changed()
    End Sub
    Partial Private Sub OnUFTBL01Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUFTBL01Changed()
    End Sub
    Partial Private Sub OnUFTBL02Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUFTBL02Changed()
    End Sub
    Partial Private Sub OnccCQTY1PROChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnccCQTY1PROChanged()
    End Sub
    Partial Private Sub OnccCSOCARRIERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnccCSOCARRIERChanged()
    End Sub
    Partial Private Sub OnccCSHIPVALUEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnccCSHIPVALUEChanged()
    End Sub
    Partial Private Sub OnccCADRChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnccCADRChanged()
    End Sub
    Partial Private Sub OnccCTRUCKSNOChanging(value As String)
    End Sub
    Partial Private Sub OnccCTRUCKSNOChanged()
    End Sub
    Partial Private Sub OnccCDELIVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnccCDELIVDATEChanged()
    End Sub
    Partial Private Sub OnccCPRIORITYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnccCPRIORITYChanged()
    End Sub
    Partial Private Sub OnccCLockedChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnccCLockedChanged()
    End Sub
    Partial Private Sub OnccCDiscPRCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnccCDiscPRCChanged()
    End Sub
    Partial Private Sub OnccCDiscVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnccCDiscVALChanged()
    End Sub
    Partial Private Sub OnACNDOCCATEGORYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACNDOCCATEGORYChanged()
    End Sub
    Partial Private Sub OnINSTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINSTChanged()
    End Sub
    Partial Private Sub OnCNTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCNTRChanged()
    End Sub
    Partial Private Sub OnVAT1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVAT1Changed()
    End Sub
    Partial Private Sub OnCUSTOMSLOTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCUSTOMSLOTChanged()
    End Sub
    Partial Private Sub OnCMTRUNITChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCMTRUNITChanged()
    End Sub
    Partial Private Sub OnQUANTITYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnQUANTITYChanged()
    End Sub
    Partial Private Sub OnGROSSMASSChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGROSSMASSChanged()
    End Sub
    Partial Private Sub OnNETMASSChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNETMASSChanged()
    End Sub
    Partial Private Sub OnBONDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBONDChanged()
    End Sub
    Partial Private Sub OnPSPCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPSPCSChanged()
    End Sub
    Partial Private Sub OnMYDATACODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMYDATACODEChanged()
    End Sub
    Partial Private Sub OnccCExecQtyChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnccCExecQtyChanged()
    End Sub
    Partial Private Sub OnccCExecDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnccCExecDateChanged()
    End Sub
    Partial Private Sub OnccCExecUserChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnccCExecUserChanged()
    End Sub
    Partial Private Sub OnccCIDLabelsChanging(value As String)
    End Sub
    Partial Private Sub OnccCIDLabelsChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FINDOC1 = CType(Nothing, EntityRef(Of FINDOC))
			Me._WHOUSEBIN1 = CType(Nothing, EntityRef(Of WHOUSEBIN))
			Me._MTRL1 = CType(Nothing, EntityRef(Of MTRL))
			Me._WHOUSE1 = CType(Nothing, EntityRef(Of WHOUSE))
			Me._WHOUSE2 = CType(Nothing, EntityRef(Of WHOUSE))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					If ((Me._WHOUSEBIN1.HasLoadedOrAssignedValue OrElse Me._WHOUSE1.HasLoadedOrAssignedValue)  _
								OrElse Me._WHOUSE2.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					If Me._FINDOC1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnFINDOCChanging(value)
					Me.SendPropertyChanging
					Me._FINDOC = value
					Me.SendPropertyChanged("FINDOC")
					Me.OnFINDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINES", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property MTRLINES() As Integer
			Get
				Return Me._MTRLINES
			End Get
			Set
				If ((Me._MTRLINES = value)  _
							= false) Then
					Me.OnMTRLINESChanging(value)
					Me.SendPropertyChanging
					Me._MTRLINES = value
					Me.SendPropertyChanged("MTRLINES")
					Me.OnMTRLINESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINENUM", DbType:="Int NOT NULL")>  _
		Public Property LINENUM() As Integer
			Get
				Return Me._LINENUM
			End Get
			Set
				If ((Me._LINENUM = value)  _
							= false) Then
					Me.OnLINENUMChanging(value)
					Me.SendPropertyChanging
					Me._LINENUM = value
					Me.SendPropertyChanged("LINENUM")
					Me.OnLINENUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", DbType:="Int NOT NULL")>  _
		Public Property MTRL() As Integer
			Get
				Return Me._MTRL
			End Get
			Set
				If ((Me._MTRL = value)  _
							= false) Then
					If Me._MTRL1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnMTRLChanging(value)
					Me.SendPropertyChanging
					Me._MTRL = value
					Me.SendPropertyChanged("MTRL")
					Me.OnMTRLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PENDING", DbType:="SmallInt NOT NULL")>  _
		Public Property PENDING() As Short
			Get
				Return Me._PENDING
			End Get
			Set
				If ((Me._PENDING = value)  _
							= false) Then
					Me.OnPENDINGChanging(value)
					Me.SendPropertyChanging
					Me._PENDING = value
					Me.SendPropertyChanged("PENDING")
					Me.OnPENDINGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESTMODE", DbType:="SmallInt")>  _
		Public Property RESTMODE() As System.Nullable(Of Short)
			Get
				Return Me._RESTMODE
			End Get
			Set
				If (Me._RESTMODE.Equals(value) = false) Then
					Me.OnRESTMODEChanging(value)
					Me.SendPropertyChanging
					Me._RESTMODE = value
					Me.SendPropertyChanged("RESTMODE")
					Me.OnRESTMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOSOURCE", DbType:="Int NOT NULL")>  _
		Public Property SOSOURCE() As Integer
			Get
				Return Me._SOSOURCE
			End Get
			Set
				If ((Me._SOSOURCE = value)  _
							= false) Then
					Me.OnSOSOURCEChanging(value)
					Me.SendPropertyChanging
					Me._SOSOURCE = value
					Me.SendPropertyChanged("SOSOURCE")
					Me.OnSOSOURCEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOREDIR", DbType:="Int NOT NULL")>  _
		Public Property SOREDIR() As Integer
			Get
				Return Me._SOREDIR
			End Get
			Set
				If ((Me._SOREDIR = value)  _
							= false) Then
					Me.OnSOREDIRChanging(value)
					Me.SendPropertyChanging
					Me._SOREDIR = value
					Me.SendPropertyChanged("SOREDIR")
					Me.OnSOREDIRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCODE", DbType:="VarChar(50)")>  _
		Public Property SCODE() As String
			Get
				Return Me._SCODE
			End Get
			Set
				If (String.Equals(Me._SCODE, value) = false) Then
					Me.OnSCODEChanging(value)
					Me.SendPropertyChanging
					Me._SCODE = value
					Me.SendPropertyChanged("SCODE")
					Me.OnSCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRTYPE() As Short
			Get
				Return Me._MTRTYPE
			End Get
			Set
				If ((Me._MTRTYPE = value)  _
							= false) Then
					Me.OnMTRTYPEChanging(value)
					Me.SendPropertyChanging
					Me._MTRTYPE = value
					Me.SendPropertyChanged("MTRTYPE")
					Me.OnMTRTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SOTYPE() As Short
			Get
				Return Me._SOTYPE
			End Get
			Set
				If ((Me._SOTYPE = value)  _
							= false) Then
					Me.OnSOTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SOTYPE = value
					Me.SendPropertyChanged("SOTYPE")
					Me.OnSOTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt")>  _
		Public Property WHOUSE() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSE
			End Get
			Set
				If (Me._WHOUSE.Equals(value) = false) Then
					If (Me._WHOUSEBIN1.HasLoadedOrAssignedValue OrElse Me._WHOUSE1.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSEChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSE = value
					Me.SendPropertyChanged("WHOUSE")
					Me.OnWHOUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSESEC", DbType:="SmallInt")>  _
		Public Property WHOUSESEC() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSESEC
			End Get
			Set
				If (Me._WHOUSESEC.Equals(value) = false) Then
					If Me._WHOUSE2.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSESECChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSESEC = value
					Me.SendPropertyChanged("WHOUSESEC")
					Me.OnWHOUSESECChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT", DbType:="SmallInt")>  _
		Public Property MTRUNIT() As System.Nullable(Of Short)
			Get
				Return Me._MTRUNIT
			End Get
			Set
				If (Me._MTRUNIT.Equals(value) = false) Then
					Me.OnMTRUNITChanging(value)
					Me.SendPropertyChanging
					Me._MTRUNIT = value
					Me.SendPropertyChanged("MTRUNIT")
					Me.OnMTRUNITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT", DbType:="SmallInt NOT NULL")>  _
		Public Property VAT() As Short
			Get
				Return Me._VAT
			End Get
			Set
				If ((Me._VAT = value)  _
							= false) Then
					Me.OnVATChanging(value)
					Me.SendPropertyChanging
					Me._VAT = value
					Me.SendPropertyChanged("VAT")
					Me.OnVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJC", DbType:="Int")>  _
		Public Property PRJC() As System.Nullable(Of Integer)
			Get
				Return Me._PRJC
			End Get
			Set
				If (Me._PRJC.Equals(value) = false) Then
					Me.OnPRJCChanging(value)
					Me.SendPropertyChanging
					Me._PRJC = value
					Me.SendPropertyChanged("PRJC")
					Me.OnPRJCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJLINES", DbType:="Int")>  _
		Public Property PRJLINES() As System.Nullable(Of Integer)
			Get
				Return Me._PRJLINES
			End Get
			Set
				If (Me._PRJLINES.Equals(value) = false) Then
					Me.OnPRJLINESChanging(value)
					Me.SendPropertyChanging
					Me._PRJLINES = value
					Me.SendPropertyChanged("PRJLINES")
					Me.OnPRJLINESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRJCSTAGE", DbType:="SmallInt")>  _
		Public Property PRJCSTAGE() As System.Nullable(Of Short)
			Get
				Return Me._PRJCSTAGE
			End Get
			Set
				If (Me._PRJCSTAGE.Equals(value) = false) Then
					Me.OnPRJCSTAGEChanging(value)
					Me.SendPropertyChanging
					Me._PRJCSTAGE = value
					Me.SendPropertyChanged("PRJCSTAGE")
					Me.OnPRJCSTAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRPRJCBLD", DbType:="SmallInt")>  _
		Public Property MTRPRJCBLD() As System.Nullable(Of Short)
			Get
				Return Me._MTRPRJCBLD
			End Get
			Set
				If (Me._MTRPRJCBLD.Equals(value) = false) Then
					Me.OnMTRPRJCBLDChanging(value)
					Me.SendPropertyChanging
					Me._MTRPRJCBLD = value
					Me.SendPropertyChanged("MTRPRJCBLD")
					Me.OnMTRPRJCBLDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOEXPTYPE", DbType:="SmallInt")>  _
		Public Property SOEXPTYPE() As System.Nullable(Of Short)
			Get
				Return Me._SOEXPTYPE
			End Get
			Set
				If (Me._SOEXPTYPE.Equals(value) = false) Then
					Me.OnSOEXPTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SOEXPTYPE = value
					Me.SendPropertyChanged("SOEXPTYPE")
					Me.OnSOEXPTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESMAN", DbType:="Int")>  _
		Public Property SALESMAN() As System.Nullable(Of Integer)
			Get
				Return Me._SALESMAN
			End Get
			Set
				If (Me._SALESMAN.Equals(value) = false) Then
					Me.OnSALESMANChanging(value)
					Me.SendPropertyChanging
					Me._SALESMAN = value
					Me.SendPropertyChanged("SALESMAN")
					Me.OnSALESMANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RSRC", DbType:="Int")>  _
		Public Property RSRC() As System.Nullable(Of Integer)
			Get
				Return Me._RSRC
			End Get
			Set
				If (Me._RSRC.Equals(value) = false) Then
					Me.OnRSRCChanging(value)
					Me.SendPropertyChanging
					Me._RSRC = value
					Me.SendPropertyChanged("RSRC")
					Me.OnRSRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLOT", DbType:="Int")>  _
		Public Property MTRLOT() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLOT
			End Get
			Set
				If (Me._MTRLOT.Equals(value) = false) Then
					Me.OnMTRLOTChanging(value)
					Me.SendPropertyChanging
					Me._MTRLOT = value
					Me.SendPropertyChanged("MTRLOT")
					Me.OnMTRLOTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSDEPR", DbType:="Int")>  _
		Public Property ASSDEPR() As System.Nullable(Of Integer)
			Get
				Return Me._ASSDEPR
			End Get
			Set
				If (Me._ASSDEPR.Equals(value) = false) Then
					Me.OnASSDEPRChanging(value)
					Me.SendPropertyChanging
					Me._ASSDEPR = value
					Me.SendPropertyChanged("ASSDEPR")
					Me.OnASSDEPRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSEBIN", DbType:="SmallInt")>  _
		Public Property WHOUSEBIN() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSEBIN
			End Get
			Set
				If (Me._WHOUSEBIN.Equals(value) = false) Then
					If Me._WHOUSEBIN1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWHOUSEBINChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSEBIN = value
					Me.SendPropertyChanged("WHOUSEBIN")
					Me.OnWHOUSEBINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSEBINSEC", DbType:="SmallInt")>  _
		Public Property WHOUSEBINSEC() As System.Nullable(Of Short)
			Get
				Return Me._WHOUSEBINSEC
			End Get
			Set
				If (Me._WHOUSEBINSEC.Equals(value) = false) Then
					Me.OnWHOUSEBINSECChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSEBINSEC = value
					Me.SendPropertyChanged("WHOUSEBINSEC")
					Me.OnWHOUSEBINSECChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRSEASON", DbType:="SmallInt")>  _
		Public Property MTRSEASON() As System.Nullable(Of Short)
			Get
				Return Me._MTRSEASON
			End Get
			Set
				If (Me._MTRSEASON.Equals(value) = false) Then
					Me.OnMTRSEASONChanging(value)
					Me.SendPropertyChanging
					Me._MTRSEASON = value
					Me.SendPropertyChanged("MTRSEASON")
					Me.OnMTRSEASONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRCATEGORY", DbType:="SmallInt")>  _
		Public Property MTRCATEGORY() As System.Nullable(Of Short)
			Get
				Return Me._MTRCATEGORY
			End Get
			Set
				If (Me._MTRCATEGORY.Equals(value) = false) Then
					Me.OnMTRCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._MTRCATEGORY = value
					Me.SendPropertyChanged("MTRCATEGORY")
					Me.OnMTRCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCPOLICY", DbType:="SmallInt")>  _
		Public Property PRCPOLICY() As System.Nullable(Of Short)
			Get
				Return Me._PRCPOLICY
			End Get
			Set
				If (Me._PRCPOLICY.Equals(value) = false) Then
					Me.OnPRCPOLICYChanging(value)
					Me.SendPropertyChanging
					Me._PRCPOLICY = value
					Me.SendPropertyChanged("PRCPOLICY")
					Me.OnPRCPOLICYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCS", DbType:="Int")>  _
		Public Property SPCS() As System.Nullable(Of Integer)
			Get
				Return Me._SPCS
			End Get
			Set
				If (Me._SPCS.Equals(value) = false) Then
					Me.OnSPCSChanging(value)
					Me.SendPropertyChanging
					Me._SPCS = value
					Me.SendPropertyChanged("SPCS")
					Me.OnSPCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRPACK", DbType:="Int")>  _
		Public Property MTRPACK() As System.Nullable(Of Integer)
			Get
				Return Me._MTRPACK
			End Get
			Set
				If (Me._MTRPACK.Equals(value) = false) Then
					Me.OnMTRPACKChanging(value)
					Me.SendPropertyChanging
					Me._MTRPACK = value
					Me.SendPropertyChanged("MTRPACK")
					Me.OnMTRPACKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTYP", DbType:="Float")>  _
		Public Property QTYP() As System.Nullable(Of Double)
			Get
				Return Me._QTYP
			End Get
			Set
				If (Me._QTYP.Equals(value) = false) Then
					Me.OnQTYPChanging(value)
					Me.SendPropertyChanging
					Me._QTYP = value
					Me.SendPropertyChanged("QTYP")
					Me.OnQTYPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="Float")>  _
		Public Property QTY() As System.Nullable(Of Double)
			Get
				Return Me._QTY
			End Get
			Set
				If (Me._QTY.Equals(value) = false) Then
					Me.OnQTYChanging(value)
					Me.SendPropertyChanging
					Me._QTY = value
					Me.SendPropertyChanged("QTY")
					Me.OnQTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1", DbType:="Float NOT NULL")>  _
		Public Property QTY1() As Double
			Get
				Return Me._QTY1
			End Get
			Set
				If ((Me._QTY1 = value)  _
							= false) Then
					Me.OnQTY1Changing(value)
					Me.SendPropertyChanging
					Me._QTY1 = value
					Me.SendPropertyChanged("QTY1")
					Me.OnQTY1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY2", DbType:="Float NOT NULL")>  _
		Public Property QTY2() As Double
			Get
				Return Me._QTY2
			End Get
			Set
				If ((Me._QTY2 = value)  _
							= false) Then
					Me.OnQTY2Changing(value)
					Me.SendPropertyChanging
					Me._QTY2 = value
					Me.SendPropertyChanged("QTY2")
					Me.OnQTY2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1COV", DbType:="Float NOT NULL")>  _
		Public Property QTY1COV() As Double
			Get
				Return Me._QTY1COV
			End Get
			Set
				If ((Me._QTY1COV = value)  _
							= false) Then
					Me.OnQTY1COVChanging(value)
					Me.SendPropertyChanging
					Me._QTY1COV = value
					Me.SendPropertyChanged("QTY1COV")
					Me.OnQTY1COVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1CANC", DbType:="Float NOT NULL")>  _
		Public Property QTY1CANC() As Double
			Get
				Return Me._QTY1CANC
			End Get
			Set
				If ((Me._QTY1CANC = value)  _
							= false) Then
					Me.OnQTY1CANCChanging(value)
					Me.SendPropertyChanging
					Me._QTY1CANC = value
					Me.SendPropertyChanged("QTY1CANC")
					Me.OnQTY1CANCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1FCOV", DbType:="Float NOT NULL")>  _
		Public Property QTY1FCOV() As Double
			Get
				Return Me._QTY1FCOV
			End Get
			Set
				If ((Me._QTY1FCOV = value)  _
							= false) Then
					Me.OnQTY1FCOVChanging(value)
					Me.SendPropertyChanging
					Me._QTY1FCOV = value
					Me.SendPropertyChanged("QTY1FCOV")
					Me.OnQTY1FCOVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPDATE", DbType:="DateTime")>  _
		Public Property SHIPDATE() As System.Nullable(Of Date)
			Get
				Return Me._SHIPDATE
			End Get
			Set
				If (Me._SHIPDATE.Equals(value) = false) Then
					Me.OnSHIPDATEChanging(value)
					Me.SendPropertyChanging
					Me._SHIPDATE = value
					Me.SendPropertyChanged("SHIPDATE")
					Me.OnSHIPDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DELIVDATE", DbType:="DateTime")>  _
		Public Property DELIVDATE() As System.Nullable(Of Date)
			Get
				Return Me._DELIVDATE
			End Get
			Set
				If (Me._DELIVDATE.Equals(value) = false) Then
					Me.OnDELIVDATEChanging(value)
					Me.SendPropertyChanging
					Me._DELIVDATE = value
					Me.SendPropertyChanged("DELIVDATE")
					Me.OnDELIVDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT", DbType:="Float")>  _
		Public Property WEIGHT() As System.Nullable(Of Double)
			Get
				Return Me._WEIGHT
			End Get
			Set
				If (Me._WEIGHT.Equals(value) = false) Then
					Me.OnWEIGHTChanging(value)
					Me.SendPropertyChanging
					Me._WEIGHT = value
					Me.SendPropertyChanged("WEIGHT")
					Me.OnWEIGHTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOLUME", DbType:="Float")>  _
		Public Property VOLUME() As System.Nullable(Of Double)
			Get
				Return Me._VOLUME
			End Get
			Set
				If (Me._VOLUME.Equals(value) = false) Then
					Me.OnVOLUMEChanging(value)
					Me.SendPropertyChanging
					Me._VOLUME = value
					Me.SendPropertyChanged("VOLUME")
					Me.OnVOLUMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTVAL", DbType:="Float")>  _
		Public Property INTVAL() As System.Nullable(Of Double)
			Get
				Return Me._INTVAL
			End Get
			Set
				If (Me._INTVAL.Equals(value) = false) Then
					Me.OnINTVALChanging(value)
					Me.SendPropertyChanging
					Me._INTVAL = value
					Me.SendPropertyChanged("INTVAL")
					Me.OnINTVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTVAT", DbType:="Float")>  _
		Public Property INTVAT() As System.Nullable(Of Double)
			Get
				Return Me._INTVAT
			End Get
			Set
				If (Me._INTVAT.Equals(value) = false) Then
					Me.OnINTVATChanging(value)
					Me.SendPropertyChanging
					Me._INTVAT = value
					Me.SendPropertyChanged("INTVAT")
					Me.OnINTVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGINTCOUNTRY", DbType:="SmallInt")>  _
		Public Property BGINTCOUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._BGINTCOUNTRY
			End Get
			Set
				If (Me._BGINTCOUNTRY.Equals(value) = false) Then
					Me.OnBGINTCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._BGINTCOUNTRY = value
					Me.SendPropertyChanged("BGINTCOUNTRY")
					Me.OnBGINTCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGINTDISTRICT", DbType:="SmallInt")>  _
		Public Property BGINTDISTRICT() As System.Nullable(Of Short)
			Get
				Return Me._BGINTDISTRICT
			End Get
			Set
				If (Me._BGINTDISTRICT.Equals(value) = false) Then
					Me.OnBGINTDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._BGINTDISTRICT = value
					Me.SendPropertyChanged("BGINTDISTRICT")
					Me.OnBGINTDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUTY", DbType:="Float")>  _
		Public Property DUTY() As System.Nullable(Of Double)
			Get
				Return Me._DUTY
			End Get
			Set
				If (Me._DUTY.Equals(value) = false) Then
					Me.OnDUTYChanging(value)
					Me.SendPropertyChanging
					Me._DUTY = value
					Me.SendPropertyChanged("DUTY")
					Me.OnDUTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLSMVAL", DbType:="Float")>  _
		Public Property PLSMVAL() As System.Nullable(Of Double)
			Get
				Return Me._PLSMVAL
			End Get
			Set
				If (Me._PLSMVAL.Equals(value) = false) Then
					Me.OnPLSMVALChanging(value)
					Me.SendPropertyChanging
					Me._PLSMVAL = value
					Me.SendPropertyChanged("PLSMVAL")
					Me.OnPLSMVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLSMVAT", DbType:="Float")>  _
		Public Property PLSMVAT() As System.Nullable(Of Double)
			Get
				Return Me._PLSMVAT
			End Get
			Set
				If (Me._PLSMVAT.Equals(value) = false) Then
					Me.OnPLSMVATChanging(value)
					Me.SendPropertyChanging
					Me._PLSMVAT = value
					Me.SendPropertyChanged("PLSMVAT")
					Me.OnPLSMVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE", DbType:="Float")>  _
		Public Property PRICE() As System.Nullable(Of Double)
			Get
				Return Me._PRICE
			End Get
			Set
				If (Me._PRICE.Equals(value) = false) Then
					Me.OnPRICEChanging(value)
					Me.SendPropertyChanging
					Me._PRICE = value
					Me.SendPropertyChanged("PRICE")
					Me.OnPRICEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE1", DbType:="Float")>  _
		Public Property PRICE1() As System.Nullable(Of Double)
			Get
				Return Me._PRICE1
			End Get
			Set
				If (Me._PRICE1.Equals(value) = false) Then
					Me.OnPRICE1Changing(value)
					Me.SendPropertyChanging
					Me._PRICE1 = value
					Me.SendPropertyChanged("PRICE1")
					Me.OnPRICE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINEVAL", DbType:="Float")>  _
		Public Property LINEVAL() As System.Nullable(Of Double)
			Get
				Return Me._LINEVAL
			End Get
			Set
				If (Me._LINEVAL.Equals(value) = false) Then
					Me.OnLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._LINEVAL = value
					Me.SendPropertyChanged("LINEVAL")
					Me.OnLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LLINEVAL", DbType:="Float")>  _
		Public Property LLINEVAL() As System.Nullable(Of Double)
			Get
				Return Me._LLINEVAL
			End Get
			Set
				If (Me._LLINEVAL.Equals(value) = false) Then
					Me.OnLLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._LLINEVAL = value
					Me.SendPropertyChanged("LLINEVAL")
					Me.OnLLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPVAL", DbType:="Float")>  _
		Public Property EXPVAL() As System.Nullable(Of Double)
			Get
				Return Me._EXPVAL
			End Get
			Set
				If (Me._EXPVAL.Equals(value) = false) Then
					Me.OnEXPVALChanging(value)
					Me.SendPropertyChanging
					Me._EXPVAL = value
					Me.SendPropertyChanged("EXPVAL")
					Me.OnEXPVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEXPVAL", DbType:="Float NOT NULL")>  _
		Public Property LEXPVAL() As Double
			Get
				Return Me._LEXPVAL
			End Get
			Set
				If ((Me._LEXPVAL = value)  _
							= false) Then
					Me.OnLEXPVALChanging(value)
					Me.SendPropertyChanging
					Me._LEXPVAL = value
					Me.SendPropertyChanged("LEXPVAL")
					Me.OnLEXPVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEXPVAL1", DbType:="Float")>  _
		Public Property LEXPVAL1() As System.Nullable(Of Double)
			Get
				Return Me._LEXPVAL1
			End Get
			Set
				If (Me._LEXPVAL1.Equals(value) = false) Then
					Me.OnLEXPVAL1Changing(value)
					Me.SendPropertyChanging
					Me._LEXPVAL1 = value
					Me.SendPropertyChanged("LEXPVAL1")
					Me.OnLEXPVAL1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEXPVATVAL1", DbType:="Float")>  _
		Public Property LEXPVATVAL1() As System.Nullable(Of Double)
			Get
				Return Me._LEXPVATVAL1
			End Get
			Set
				If (Me._LEXPVATVAL1.Equals(value) = false) Then
					Me.OnLEXPVATVAL1Changing(value)
					Me.SendPropertyChanging
					Me._LEXPVATVAL1 = value
					Me.SendPropertyChanged("LEXPVATVAL1")
					Me.OnLEXPVATVAL1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC1PRC", DbType:="Float")>  _
		Public Property DISC1PRC() As System.Nullable(Of Double)
			Get
				Return Me._DISC1PRC
			End Get
			Set
				If (Me._DISC1PRC.Equals(value) = false) Then
					Me.OnDISC1PRCChanging(value)
					Me.SendPropertyChanging
					Me._DISC1PRC = value
					Me.SendPropertyChanged("DISC1PRC")
					Me.OnDISC1PRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC2PRC", DbType:="Float")>  _
		Public Property DISC2PRC() As System.Nullable(Of Double)
			Get
				Return Me._DISC2PRC
			End Get
			Set
				If (Me._DISC2PRC.Equals(value) = false) Then
					Me.OnDISC2PRCChanging(value)
					Me.SendPropertyChanging
					Me._DISC2PRC = value
					Me.SendPropertyChanged("DISC2PRC")
					Me.OnDISC2PRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC3PRC", DbType:="Float")>  _
		Public Property DISC3PRC() As System.Nullable(Of Double)
			Get
				Return Me._DISC3PRC
			End Get
			Set
				If (Me._DISC3PRC.Equals(value) = false) Then
					Me.OnDISC3PRCChanging(value)
					Me.SendPropertyChanging
					Me._DISC3PRC = value
					Me.SendPropertyChanged("DISC3PRC")
					Me.OnDISC3PRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC1VAL", DbType:="Float")>  _
		Public Property DISC1VAL() As System.Nullable(Of Double)
			Get
				Return Me._DISC1VAL
			End Get
			Set
				If (Me._DISC1VAL.Equals(value) = false) Then
					Me.OnDISC1VALChanging(value)
					Me.SendPropertyChanging
					Me._DISC1VAL = value
					Me.SendPropertyChanged("DISC1VAL")
					Me.OnDISC1VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDISC1VAL", DbType:="Float")>  _
		Public Property LDISC1VAL() As System.Nullable(Of Double)
			Get
				Return Me._LDISC1VAL
			End Get
			Set
				If (Me._LDISC1VAL.Equals(value) = false) Then
					Me.OnLDISC1VALChanging(value)
					Me.SendPropertyChanging
					Me._LDISC1VAL = value
					Me.SendPropertyChanged("LDISC1VAL")
					Me.OnLDISC1VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC2VAL", DbType:="Float")>  _
		Public Property DISC2VAL() As System.Nullable(Of Double)
			Get
				Return Me._DISC2VAL
			End Get
			Set
				If (Me._DISC2VAL.Equals(value) = false) Then
					Me.OnDISC2VALChanging(value)
					Me.SendPropertyChanging
					Me._DISC2VAL = value
					Me.SendPropertyChanged("DISC2VAL")
					Me.OnDISC2VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDISC2VAL", DbType:="Float")>  _
		Public Property LDISC2VAL() As System.Nullable(Of Double)
			Get
				Return Me._LDISC2VAL
			End Get
			Set
				If (Me._LDISC2VAL.Equals(value) = false) Then
					Me.OnLDISC2VALChanging(value)
					Me.SendPropertyChanging
					Me._LDISC2VAL = value
					Me.SendPropertyChanged("LDISC2VAL")
					Me.OnLDISC2VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISC3VAL", DbType:="Float")>  _
		Public Property DISC3VAL() As System.Nullable(Of Double)
			Get
				Return Me._DISC3VAL
			End Get
			Set
				If (Me._DISC3VAL.Equals(value) = false) Then
					Me.OnDISC3VALChanging(value)
					Me.SendPropertyChanging
					Me._DISC3VAL = value
					Me.SendPropertyChanged("DISC3VAL")
					Me.OnDISC3VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDISC3VAL", DbType:="Float")>  _
		Public Property LDISC3VAL() As System.Nullable(Of Double)
			Get
				Return Me._LDISC3VAL
			End Get
			Set
				If (Me._LDISC3VAL.Equals(value) = false) Then
					Me.OnLDISC3VALChanging(value)
					Me.SendPropertyChanging
					Me._LDISC3VAL = value
					Me.SendPropertyChanged("LDISC3VAL")
					Me.OnLDISC3VALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETLINEVAL", DbType:="Float NOT NULL")>  _
		Public Property NETLINEVAL() As Double
			Get
				Return Me._NETLINEVAL
			End Get
			Set
				If ((Me._NETLINEVAL = value)  _
							= false) Then
					Me.OnNETLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._NETLINEVAL = value
					Me.SendPropertyChanged("NETLINEVAL")
					Me.OnNETLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LNETLINEVAL", DbType:="Float NOT NULL")>  _
		Public Property LNETLINEVAL() As Double
			Get
				Return Me._LNETLINEVAL
			End Get
			Set
				If ((Me._LNETLINEVAL = value)  _
							= false) Then
					Me.OnLNETLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._LNETLINEVAL = value
					Me.SendPropertyChanged("LNETLINEVAL")
					Me.OnLNETLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATAMNT", DbType:="Float NOT NULL")>  _
		Public Property VATAMNT() As Double
			Get
				Return Me._VATAMNT
			End Get
			Set
				If ((Me._VATAMNT = value)  _
							= false) Then
					Me.OnVATAMNTChanging(value)
					Me.SendPropertyChanging
					Me._VATAMNT = value
					Me.SendPropertyChanged("VATAMNT")
					Me.OnVATAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LVATAMNT", DbType:="Float NOT NULL")>  _
		Public Property LVATAMNT() As Double
			Get
				Return Me._LVATAMNT
			End Get
			Set
				If ((Me._LVATAMNT = value)  _
							= false) Then
					Me.OnLVATAMNTChanging(value)
					Me.SendPropertyChanging
					Me._LVATAMNT = value
					Me.SendPropertyChanged("LVATAMNT")
					Me.OnLVATAMNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LVATNOEXM", DbType:="Float")>  _
		Public Property LVATNOEXM() As System.Nullable(Of Double)
			Get
				Return Me._LVATNOEXM
			End Get
			Set
				If (Me._LVATNOEXM.Equals(value) = false) Then
					Me.OnLVATNOEXMChanging(value)
					Me.SendPropertyChanging
					Me._LVATNOEXM = value
					Me.SendPropertyChanged("LVATNOEXM")
					Me.OnLVATNOEXMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESCVAL", DbType:="Float")>  _
		Public Property SALESCVAL() As System.Nullable(Of Double)
			Get
				Return Me._SALESCVAL
			End Get
			Set
				If (Me._SALESCVAL.Equals(value) = false) Then
					Me.OnSALESCVALChanging(value)
					Me.SendPropertyChanging
					Me._SALESCVAL = value
					Me.SendPropertyChanged("SALESCVAL")
					Me.OnSALESCVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFKVAL", DbType:="Float NOT NULL")>  _
		Public Property EFKVAL() As Double
			Get
				Return Me._EFKVAL
			End Get
			Set
				If ((Me._EFKVAL = value)  _
							= false) Then
					Me.OnEFKVALChanging(value)
					Me.SendPropertyChanging
					Me._EFKVAL = value
					Me.SendPropertyChanged("EFKVAL")
					Me.OnEFKVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS", DbType:="VarChar(255)")>  _
		Public Property COMMENTS() As String
			Get
				Return Me._COMMENTS
			End Get
			Set
				If (String.Equals(Me._COMMENTS, value) = false) Then
					Me.OnCOMMENTSChanging(value)
					Me.SendPropertyChanging
					Me._COMMENTS = value
					Me.SendPropertyChanged("COMMENTS")
					Me.OnCOMMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS1", DbType:="VarChar(2000)")>  _
		Public Property COMMENTS1() As String
			Get
				Return Me._COMMENTS1
			End Get
			Set
				If (String.Equals(Me._COMMENTS1, value) = false) Then
					Me.OnCOMMENTS1Changing(value)
					Me.SendPropertyChanging
					Me._COMMENTS1 = value
					Me.SendPropertyChanged("COMMENTS1")
					Me.OnCOMMENTS1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMENTS2", DbType:="VarChar(512)")>  _
		Public Property COMMENTS2() As String
			Get
				Return Me._COMMENTS2
			End Get
			Set
				If (String.Equals(Me._COMMENTS2, value) = false) Then
					Me.OnCOMMENTS2Changing(value)
					Me.SendPropertyChanging
					Me._COMMENTS2 = value
					Me.SendPropertyChanged("COMMENTS2")
					Me.OnCOMMENTS2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIMENSION1", DbType:="Float")>  _
		Public Property DIMENSION1() As System.Nullable(Of Double)
			Get
				Return Me._DIMENSION1
			End Get
			Set
				If (Me._DIMENSION1.Equals(value) = false) Then
					Me.OnDIMENSION1Changing(value)
					Me.SendPropertyChanging
					Me._DIMENSION1 = value
					Me.SendPropertyChanged("DIMENSION1")
					Me.OnDIMENSION1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIMENSION2", DbType:="Float")>  _
		Public Property DIMENSION2() As System.Nullable(Of Double)
			Get
				Return Me._DIMENSION2
			End Get
			Set
				If (Me._DIMENSION2.Equals(value) = false) Then
					Me.OnDIMENSION2Changing(value)
					Me.SendPropertyChanging
					Me._DIMENSION2 = value
					Me.SendPropertyChanged("DIMENSION2")
					Me.OnDIMENSION2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIMENSION3", DbType:="Float")>  _
		Public Property DIMENSION3() As System.Nullable(Of Double)
			Get
				Return Me._DIMENSION3
			End Get
			Set
				If (Me._DIMENSION3.Equals(value) = false) Then
					Me.OnDIMENSION3Changing(value)
					Me.SendPropertyChanging
					Me._DIMENSION3 = value
					Me.SendPropertyChanged("DIMENSION3")
					Me.OnDIMENSION3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNLINEVAL", DbType:="Float")>  _
		Public Property TRNLINEVAL() As System.Nullable(Of Double)
			Get
				Return Me._TRNLINEVAL
			End Get
			Set
				If (Me._TRNLINEVAL.Equals(value) = false) Then
					Me.OnTRNLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._TRNLINEVAL = value
					Me.SendPropertyChanged("TRNLINEVAL")
					Me.OnTRNLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTRNLINEVAL", DbType:="Float")>  _
		Public Property LTRNLINEVAL() As System.Nullable(Of Double)
			Get
				Return Me._LTRNLINEVAL
			End Get
			Set
				If (Me._LTRNLINEVAL.Equals(value) = false) Then
					Me.OnLTRNLINEVALChanging(value)
					Me.SendPropertyChanging
					Me._LTRNLINEVAL = value
					Me.SendPropertyChanged("LTRNLINEVAL")
					Me.OnLTRNLINEVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCRULEDATA", DbType:="VarChar(1024)")>  _
		Public Property PRCRULEDATA() As String
			Get
				Return Me._PRCRULEDATA
			End Get
			Set
				If (String.Equals(Me._PRCRULEDATA, value) = false) Then
					Me.OnPRCRULEDATAChanging(value)
					Me.SendPropertyChanging
					Me._PRCRULEDATA = value
					Me.SendPropertyChanged("PRCRULEDATA")
					Me.OnPRCRULEDATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSTALMENTS", DbType:="SmallInt")>  _
		Public Property INSTALMENTS() As System.Nullable(Of Short)
			Get
				Return Me._INSTALMENTS
			End Get
			Set
				If (Me._INSTALMENTS.Equals(value) = false) Then
					Me.OnINSTALMENTSChanging(value)
					Me.SendPropertyChanging
					Me._INSTALMENTS = value
					Me.SendPropertyChanged("INSTALMENTS")
					Me.OnINSTALMENTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WASTE", DbType:="Float")>  _
		Public Property WASTE() As System.Nullable(Of Double)
			Get
				Return Me._WASTE
			End Get
			Set
				If (Me._WASTE.Equals(value) = false) Then
					Me.OnWASTEChanging(value)
					Me.SendPropertyChanging
					Me._WASTE = value
					Me.SendPropertyChanged("WASTE")
					Me.OnWASTEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTCOEF", DbType:="Float")>  _
		Public Property COSTCOEF() As System.Nullable(Of Double)
			Get
				Return Me._COSTCOEF
			End Get
			Set
				If (Me._COSTCOEF.Equals(value) = false) Then
					Me.OnCOSTCOEFChanging(value)
					Me.SendPropertyChanging
					Me._COSTCOEF = value
					Me.SendPropertyChanged("COSTCOEF")
					Me.OnCOSTCOEFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONVPRC", DbType:="Float")>  _
		Public Property CONVPRC() As System.Nullable(Of Double)
			Get
				Return Me._CONVPRC
			End Get
			Set
				If (Me._CONVPRC.Equals(value) = false) Then
					Me.OnCONVPRCChanging(value)
					Me.SendPropertyChanging
					Me._CONVPRC = value
					Me.SendPropertyChanged("CONVPRC")
					Me.OnCONVPRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAGE", DbType:="SmallInt")>  _
		Public Property STAGE() As System.Nullable(Of Short)
			Get
				Return Me._STAGE
			End Get
			Set
				If (Me._STAGE.Equals(value) = false) Then
					Me.OnSTAGEChanging(value)
					Me.SendPropertyChanging
					Me._STAGE = value
					Me.SendPropertyChanged("STAGE")
					Me.OnSTAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAGELINENUM", DbType:="SmallInt")>  _
		Public Property STAGELINENUM() As System.Nullable(Of Short)
			Get
				Return Me._STAGELINENUM
			End Get
			Set
				If (Me._STAGELINENUM.Equals(value) = false) Then
					Me.OnSTAGELINENUMChanging(value)
					Me.SendPropertyChanging
					Me._STAGELINENUM = value
					Me.SendPropertyChanged("STAGELINENUM")
					Me.OnSTAGELINENUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK1", DbType:="VarChar(25)")>  _
		Public Property ACNMSK1() As String
			Get
				Return Me._ACNMSK1
			End Get
			Set
				If (String.Equals(Me._ACNMSK1, value) = false) Then
					Me.OnACNMSK1Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK1 = value
					Me.SendPropertyChanged("ACNMSK1")
					Me.OnACNMSK1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCS", DbType:="Int")>  _
		Public Property FINDOCS() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCS
			End Get
			Set
				If (Me._FINDOCS.Equals(value) = false) Then
					Me.OnFINDOCSChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCS = value
					Me.SendPropertyChanged("FINDOCS")
					Me.OnFINDOCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINESS", DbType:="Int")>  _
		Public Property MTRLINESS() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLINESS
			End Get
			Set
				If (Me._MTRLINESS.Equals(value) = false) Then
					Me.OnMTRLINESSChanging(value)
					Me.SendPropertyChanging
					Me._MTRLINESS = value
					Me.SendPropertyChanged("MTRLINESS")
					Me.OnMTRLINESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOCL", DbType:="Int")>  _
		Public Property FINDOCL() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOCL
			End Get
			Set
				If (Me._FINDOCL.Equals(value) = false) Then
					Me.OnFINDOCLChanging(value)
					Me.SendPropertyChanging
					Me._FINDOCL = value
					Me.SendPropertyChanged("FINDOCL")
					Me.OnFINDOCLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLINESL", DbType:="Int")>  _
		Public Property MTRLINESL() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLINESL
			End Get
			Set
				If (Me._MTRLINESL.Equals(value) = false) Then
					Me.OnMTRLINESLChanging(value)
					Me.SendPropertyChanging
					Me._MTRLINESL = value
					Me.SendPropertyChanged("MTRLINESL")
					Me.OnMTRLINESLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOANAL", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property SOANAL() As String
			Get
				Return Me._SOANAL
			End Get
			Set
				If (String.Equals(Me._SOANAL, value) = false) Then
					Me.OnSOANALChanging(value)
					Me.SendPropertyChanging
					Me._SOANAL = value
					Me.SendPropertyChanged("SOANAL")
					Me.OnSOANALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SXMSKK", DbType:="Int")>  _
		Public Property SXMSKK() As System.Nullable(Of Integer)
			Get
				Return Me._SXMSKK
			End Get
			Set
				If (Me._SXMSKK.Equals(value) = false) Then
					Me.OnSXMSKKChanging(value)
					Me.SendPropertyChanging
					Me._SXMSKK = value
					Me.SendPropertyChanged("SXMSKK")
					Me.OnSXMSKKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SXPERC", DbType:="Float")>  _
		Public Property SXPERC() As System.Nullable(Of Double)
			Get
				Return Me._SXPERC
			End Get
			Set
				If (Me._SXPERC.Equals(value) = false) Then
					Me.OnSXPERCChanging(value)
					Me.SendPropertyChanging
					Me._SXPERC = value
					Me.SendPropertyChanged("SXPERC")
					Me.OnSXPERCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BGLEXCISE", DbType:="Float")>  _
		Public Property BGLEXCISE() As System.Nullable(Of Double)
			Get
				Return Me._BGLEXCISE
			End Get
			Set
				If (Me._BGLEXCISE.Equals(value) = false) Then
					Me.OnBGLEXCISEChanging(value)
					Me.SendPropertyChanging
					Me._BGLEXCISE = value
					Me.SendPropertyChanged("BGLEXCISE")
					Me.OnBGLEXCISEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTOPRDDOC", DbType:="SmallInt NOT NULL")>  _
		Public Property AUTOPRDDOC() As Short
			Get
				Return Me._AUTOPRDDOC
			End Get
			Set
				If ((Me._AUTOPRDDOC = value)  _
							= false) Then
					Me.OnAUTOPRDDOCChanging(value)
					Me.SendPropertyChanging
					Me._AUTOPRDDOC = value
					Me.SendPropertyChanged("AUTOPRDDOC")
					Me.OnAUTOPRDDOCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKS", DbType:="VarChar(25)")>  _
		Public Property ACNMSKS() As String
			Get
				Return Me._ACNMSKS
			End Get
			Set
				If (String.Equals(Me._ACNMSKS, value) = false) Then
					Me.OnACNMSKSChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKS = value
					Me.SendPropertyChanged("ACNMSKS")
					Me.OnACNMSKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKX", DbType:="VarChar(25)")>  _
		Public Property ACNMSKX() As String
			Get
				Return Me._ACNMSKX
			End Get
			Set
				If (String.Equals(Me._ACNMSKX, value) = false) Then
					Me.OnACNMSKXChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKX = value
					Me.SendPropertyChanged("ACNMSKX")
					Me.OnACNMSKXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTCNTR", DbType:="Int")>  _
		Public Property COSTCNTR() As System.Nullable(Of Integer)
			Get
				Return Me._COSTCNTR
			End Get
			Set
				If (Me._COSTCNTR.Equals(value) = false) Then
					Me.OnCOSTCNTRChanging(value)
					Me.SendPropertyChanging
					Me._COSTCNTR = value
					Me.SendPropertyChanged("COSTCNTR")
					Me.OnCOSTCNTRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITECALCTYPE", DbType:="SmallInt")>  _
		Public Property ITECALCTYPE() As System.Nullable(Of Short)
			Get
				Return Me._ITECALCTYPE
			End Get
			Set
				If (Me._ITECALCTYPE.Equals(value) = false) Then
					Me.OnITECALCTYPEChanging(value)
					Me.SendPropertyChanging
					Me._ITECALCTYPE = value
					Me.SendPropertyChanged("ITECALCTYPE")
					Me.OnITECALCTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUARTIME", DbType:="SmallInt")>  _
		Public Property GUARTIME() As System.Nullable(Of Short)
			Get
				Return Me._GUARTIME
			End Get
			Set
				If (Me._GUARTIME.Equals(value) = false) Then
					Me.OnGUARTIMEChanging(value)
					Me.SendPropertyChanging
					Me._GUARTIME = value
					Me.SendPropertyChanged("GUARTIME")
					Me.OnGUARTIMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SRVDEBITTYPE", DbType:="SmallInt")>  _
		Public Property SRVDEBITTYPE() As System.Nullable(Of Short)
			Get
				Return Me._SRVDEBITTYPE
			End Get
			Set
				If (Me._SRVDEBITTYPE.Equals(value) = false) Then
					Me.OnSRVDEBITTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SRVDEBITTYPE = value
					Me.SendPropertyChanged("SRVDEBITTYPE")
					Me.OnSRVDEBITTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKSTATUS", DbType:="SmallInt")>  _
		Public Property PACKSTATUS() As System.Nullable(Of Short)
			Get
				Return Me._PACKSTATUS
			End Get
			Set
				If (Me._PACKSTATUS.Equals(value) = false) Then
					Me.OnPACKSTATUSChanging(value)
					Me.SendPropertyChanging
					Me._PACKSTATUS = value
					Me.SendPropertyChanged("PACKSTATUS")
					Me.OnPACKSTATUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKCODE1", DbType:="VarChar(15)")>  _
		Public Property PACKCODE1() As String
			Get
				Return Me._PACKCODE1
			End Get
			Set
				If (String.Equals(Me._PACKCODE1, value) = false) Then
					Me.OnPACKCODE1Changing(value)
					Me.SendPropertyChanging
					Me._PACKCODE1 = value
					Me.SendPropertyChanged("PACKCODE1")
					Me.OnPACKCODE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKCODE2", DbType:="VarChar(15)")>  _
		Public Property PACKCODE2() As String
			Get
				Return Me._PACKCODE2
			End Get
			Set
				If (String.Equals(Me._PACKCODE2, value) = false) Then
					Me.OnPACKCODE2Changing(value)
					Me.SendPropertyChanging
					Me._PACKCODE2 = value
					Me.SendPropertyChanged("PACKCODE2")
					Me.OnPACKCODE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LWMARKUP", DbType:="Float")>  _
		Public Property LWMARKUP() As System.Nullable(Of Double)
			Get
				Return Me._LWMARKUP
			End Get
			Set
				If (Me._LWMARKUP.Equals(value) = false) Then
					Me.OnLWMARKUPChanging(value)
					Me.SendPropertyChanging
					Me._LWMARKUP = value
					Me.SendPropertyChanged("LWMARKUP")
					Me.OnLWMARKUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LRMARKUP", DbType:="Float")>  _
		Public Property LRMARKUP() As System.Nullable(Of Double)
			Get
				Return Me._LRMARKUP
			End Get
			Set
				If (Me._LRMARKUP.Equals(value) = false) Then
					Me.OnLRMARKUPChanging(value)
					Me.SendPropertyChanging
					Me._LRMARKUP = value
					Me.SendPropertyChanged("LRMARKUP")
					Me.OnLRMARKUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM01", DbType:="Float")>  _
		Public Property NUM01() As System.Nullable(Of Double)
			Get
				Return Me._NUM01
			End Get
			Set
				If (Me._NUM01.Equals(value) = false) Then
					Me.OnNUM01Changing(value)
					Me.SendPropertyChanging
					Me._NUM01 = value
					Me.SendPropertyChanged("NUM01")
					Me.OnNUM01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM02", DbType:="Float")>  _
		Public Property NUM02() As System.Nullable(Of Double)
			Get
				Return Me._NUM02
			End Get
			Set
				If (Me._NUM02.Equals(value) = false) Then
					Me.OnNUM02Changing(value)
					Me.SendPropertyChanging
					Me._NUM02 = value
					Me.SendPropertyChanged("NUM02")
					Me.OnNUM02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM03", DbType:="Float")>  _
		Public Property NUM03() As System.Nullable(Of Double)
			Get
				Return Me._NUM03
			End Get
			Set
				If (Me._NUM03.Equals(value) = false) Then
					Me.OnNUM03Changing(value)
					Me.SendPropertyChanging
					Me._NUM03 = value
					Me.SendPropertyChanged("NUM03")
					Me.OnNUM03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUM04", DbType:="Float")>  _
		Public Property NUM04() As System.Nullable(Of Double)
			Get
				Return Me._NUM04
			End Get
			Set
				If (Me._NUM04.Equals(value) = false) Then
					Me.OnNUM04Changing(value)
					Me.SendPropertyChanging
					Me._NUM04 = value
					Me.SendPropertyChanged("NUM04")
					Me.OnNUM04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL01", DbType:="SmallInt")>  _
		Public Property BOOL01() As System.Nullable(Of Short)
			Get
				Return Me._BOOL01
			End Get
			Set
				If (Me._BOOL01.Equals(value) = false) Then
					Me.OnBOOL01Changing(value)
					Me.SendPropertyChanging
					Me._BOOL01 = value
					Me.SendPropertyChanged("BOOL01")
					Me.OnBOOL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOOL02", DbType:="SmallInt")>  _
		Public Property BOOL02() As System.Nullable(Of Short)
			Get
				Return Me._BOOL02
			End Get
			Set
				If (Me._BOOL02.Equals(value) = false) Then
					Me.OnBOOL02Changing(value)
					Me.SendPropertyChanging
					Me._BOOL02 = value
					Me.SendPropertyChanged("BOOL02")
					Me.OnBOOL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE01", DbType:="DateTime")>  _
		Public Property DATE01() As System.Nullable(Of Date)
			Get
				Return Me._DATE01
			End Get
			Set
				If (Me._DATE01.Equals(value) = false) Then
					Me.OnDATE01Changing(value)
					Me.SendPropertyChanging
					Me._DATE01 = value
					Me.SendPropertyChanged("DATE01")
					Me.OnDATE01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE02", DbType:="DateTime")>  _
		Public Property DATE02() As System.Nullable(Of Date)
			Get
				Return Me._DATE02
			End Get
			Set
				If (Me._DATE02.Equals(value) = false) Then
					Me.OnDATE02Changing(value)
					Me.SendPropertyChanging
					Me._DATE02 = value
					Me.SendPropertyChanged("DATE02")
					Me.OnDATE02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UFTBL01", DbType:="SmallInt")>  _
		Public Property UFTBL01() As System.Nullable(Of Short)
			Get
				Return Me._UFTBL01
			End Get
			Set
				If (Me._UFTBL01.Equals(value) = false) Then
					Me.OnUFTBL01Changing(value)
					Me.SendPropertyChanging
					Me._UFTBL01 = value
					Me.SendPropertyChanged("UFTBL01")
					Me.OnUFTBL01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UFTBL02", DbType:="SmallInt")>  _
		Public Property UFTBL02() As System.Nullable(Of Short)
			Get
				Return Me._UFTBL02
			End Get
			Set
				If (Me._UFTBL02.Equals(value) = false) Then
					Me.OnUFTBL02Changing(value)
					Me.SendPropertyChanging
					Me._UFTBL02 = value
					Me.SendPropertyChanged("UFTBL02")
					Me.OnUFTBL02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCQTY1PRO", DbType:="Float")>  _
		Public Property ccCQTY1PRO() As System.Nullable(Of Double)
			Get
				Return Me._ccCQTY1PRO
			End Get
			Set
				If (Me._ccCQTY1PRO.Equals(value) = false) Then
					Me.OnccCQTY1PROChanging(value)
					Me.SendPropertyChanging
					Me._ccCQTY1PRO = value
					Me.SendPropertyChanged("ccCQTY1PRO")
					Me.OnccCQTY1PROChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCSOCARRIER", DbType:="SmallInt")>  _
		Public Property ccCSOCARRIER() As System.Nullable(Of Short)
			Get
				Return Me._ccCSOCARRIER
			End Get
			Set
				If (Me._ccCSOCARRIER.Equals(value) = false) Then
					Me.OnccCSOCARRIERChanging(value)
					Me.SendPropertyChanging
					Me._ccCSOCARRIER = value
					Me.SendPropertyChanged("ccCSOCARRIER")
					Me.OnccCSOCARRIERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCSHIPVALUE", DbType:="Float")>  _
		Public Property ccCSHIPVALUE() As System.Nullable(Of Double)
			Get
				Return Me._ccCSHIPVALUE
			End Get
			Set
				If (Me._ccCSHIPVALUE.Equals(value) = false) Then
					Me.OnccCSHIPVALUEChanging(value)
					Me.SendPropertyChanging
					Me._ccCSHIPVALUE = value
					Me.SendPropertyChanged("ccCSHIPVALUE")
					Me.OnccCSHIPVALUEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCADR", DbType:="SmallInt")>  _
		Public Property ccCADR() As System.Nullable(Of Short)
			Get
				Return Me._ccCADR
			End Get
			Set
				If (Me._ccCADR.Equals(value) = false) Then
					Me.OnccCADRChanging(value)
					Me.SendPropertyChanging
					Me._ccCADR = value
					Me.SendPropertyChanged("ccCADR")
					Me.OnccCADRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCTRUCKSNO", DbType:="VarChar(20)")>  _
		Public Property ccCTRUCKSNO() As String
			Get
				Return Me._ccCTRUCKSNO
			End Get
			Set
				If (String.Equals(Me._ccCTRUCKSNO, value) = false) Then
					Me.OnccCTRUCKSNOChanging(value)
					Me.SendPropertyChanging
					Me._ccCTRUCKSNO = value
					Me.SendPropertyChanged("ccCTRUCKSNO")
					Me.OnccCTRUCKSNOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCDELIVDATE", DbType:="DateTime")>  _
		Public Property ccCDELIVDATE() As System.Nullable(Of Date)
			Get
				Return Me._ccCDELIVDATE
			End Get
			Set
				If (Me._ccCDELIVDATE.Equals(value) = false) Then
					Me.OnccCDELIVDATEChanging(value)
					Me.SendPropertyChanging
					Me._ccCDELIVDATE = value
					Me.SendPropertyChanged("ccCDELIVDATE")
					Me.OnccCDELIVDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCPRIORITY", DbType:="SmallInt")>  _
		Public Property ccCPRIORITY() As System.Nullable(Of Short)
			Get
				Return Me._ccCPRIORITY
			End Get
			Set
				If (Me._ccCPRIORITY.Equals(value) = false) Then
					Me.OnccCPRIORITYChanging(value)
					Me.SendPropertyChanging
					Me._ccCPRIORITY = value
					Me.SendPropertyChanged("ccCPRIORITY")
					Me.OnccCPRIORITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCLocked", DbType:="SmallInt")>  _
		Public Property ccCLocked() As System.Nullable(Of Short)
			Get
				Return Me._ccCLocked
			End Get
			Set
				If (Me._ccCLocked.Equals(value) = false) Then
					Me.OnccCLockedChanging(value)
					Me.SendPropertyChanging
					Me._ccCLocked = value
					Me.SendPropertyChanged("ccCLocked")
					Me.OnccCLockedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCDiscPRC", DbType:="Float")>  _
		Public Property ccCDiscPRC() As System.Nullable(Of Double)
			Get
				Return Me._ccCDiscPRC
			End Get
			Set
				If (Me._ccCDiscPRC.Equals(value) = false) Then
					Me.OnccCDiscPRCChanging(value)
					Me.SendPropertyChanging
					Me._ccCDiscPRC = value
					Me.SendPropertyChanged("ccCDiscPRC")
					Me.OnccCDiscPRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCDiscVAL", DbType:="Float")>  _
		Public Property ccCDiscVAL() As System.Nullable(Of Double)
			Get
				Return Me._ccCDiscVAL
			End Get
			Set
				If (Me._ccCDiscVAL.Equals(value) = false) Then
					Me.OnccCDiscVALChanging(value)
					Me.SendPropertyChanging
					Me._ccCDiscVAL = value
					Me.SendPropertyChanged("ccCDiscVAL")
					Me.OnccCDiscVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNDOCCATEGORY", DbType:="Int")>  _
		Public Property ACNDOCCATEGORY() As System.Nullable(Of Integer)
			Get
				Return Me._ACNDOCCATEGORY
			End Get
			Set
				If (Me._ACNDOCCATEGORY.Equals(value) = false) Then
					Me.OnACNDOCCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._ACNDOCCATEGORY = value
					Me.SendPropertyChanged("ACNDOCCATEGORY")
					Me.OnACNDOCCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INST", DbType:="Int")>  _
		Public Property INST() As System.Nullable(Of Integer)
			Get
				Return Me._INST
			End Get
			Set
				If (Me._INST.Equals(value) = false) Then
					Me.OnINSTChanging(value)
					Me.SendPropertyChanging
					Me._INST = value
					Me.SendPropertyChanged("INST")
					Me.OnINSTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNTR", DbType:="Int")>  _
		Public Property CNTR() As System.Nullable(Of Integer)
			Get
				Return Me._CNTR
			End Get
			Set
				If (Me._CNTR.Equals(value) = false) Then
					Me.OnCNTRChanging(value)
					Me.SendPropertyChanging
					Me._CNTR = value
					Me.SendPropertyChanged("CNTR")
					Me.OnCNTRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT1", DbType:="Int")>  _
		Public Property VAT1() As System.Nullable(Of Integer)
			Get
				Return Me._VAT1
			End Get
			Set
				If (Me._VAT1.Equals(value) = false) Then
					Me.OnVAT1Changing(value)
					Me.SendPropertyChanging
					Me._VAT1 = value
					Me.SendPropertyChanged("VAT1")
					Me.OnVAT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMSLOT", DbType:="Int")>  _
		Public Property CUSTOMSLOT() As System.Nullable(Of Integer)
			Get
				Return Me._CUSTOMSLOT
			End Get
			Set
				If (Me._CUSTOMSLOT.Equals(value) = false) Then
					Me.OnCUSTOMSLOTChanging(value)
					Me.SendPropertyChanging
					Me._CUSTOMSLOT = value
					Me.SendPropertyChanged("CUSTOMSLOT")
					Me.OnCUSTOMSLOTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CMTRUNIT", DbType:="SmallInt")>  _
		Public Property CMTRUNIT() As System.Nullable(Of Short)
			Get
				Return Me._CMTRUNIT
			End Get
			Set
				If (Me._CMTRUNIT.Equals(value) = false) Then
					Me.OnCMTRUNITChanging(value)
					Me.SendPropertyChanging
					Me._CMTRUNIT = value
					Me.SendPropertyChanged("CMTRUNIT")
					Me.OnCMTRUNITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUANTITY", DbType:="Float")>  _
		Public Property QUANTITY() As System.Nullable(Of Double)
			Get
				Return Me._QUANTITY
			End Get
			Set
				If (Me._QUANTITY.Equals(value) = false) Then
					Me.OnQUANTITYChanging(value)
					Me.SendPropertyChanging
					Me._QUANTITY = value
					Me.SendPropertyChanged("QUANTITY")
					Me.OnQUANTITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROSSMASS", DbType:="Float")>  _
		Public Property GROSSMASS() As System.Nullable(Of Double)
			Get
				Return Me._GROSSMASS
			End Get
			Set
				If (Me._GROSSMASS.Equals(value) = false) Then
					Me.OnGROSSMASSChanging(value)
					Me.SendPropertyChanging
					Me._GROSSMASS = value
					Me.SendPropertyChanged("GROSSMASS")
					Me.OnGROSSMASSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NETMASS", DbType:="Float")>  _
		Public Property NETMASS() As System.Nullable(Of Double)
			Get
				Return Me._NETMASS
			End Get
			Set
				If (Me._NETMASS.Equals(value) = false) Then
					Me.OnNETMASSChanging(value)
					Me.SendPropertyChanging
					Me._NETMASS = value
					Me.SendPropertyChanged("NETMASS")
					Me.OnNETMASSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BOND", DbType:="Int")>  _
		Public Property BOND() As System.Nullable(Of Integer)
			Get
				Return Me._BOND
			End Get
			Set
				If (Me._BOND.Equals(value) = false) Then
					Me.OnBONDChanging(value)
					Me.SendPropertyChanging
					Me._BOND = value
					Me.SendPropertyChanged("BOND")
					Me.OnBONDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PSPCS", DbType:="Int")>  _
		Public Property PSPCS() As System.Nullable(Of Integer)
			Get
				Return Me._PSPCS
			End Get
			Set
				If (Me._PSPCS.Equals(value) = false) Then
					Me.OnPSPCSChanging(value)
					Me.SendPropertyChanging
					Me._PSPCS = value
					Me.SendPropertyChanged("PSPCS")
					Me.OnPSPCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MYDATACODE", DbType:="SmallInt")>  _
		Public Property MYDATACODE() As System.Nullable(Of Short)
			Get
				Return Me._MYDATACODE
			End Get
			Set
				If (Me._MYDATACODE.Equals(value) = false) Then
					Me.OnMYDATACODEChanging(value)
					Me.SendPropertyChanging
					Me._MYDATACODE = value
					Me.SendPropertyChanged("MYDATACODE")
					Me.OnMYDATACODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCExecQty", DbType:="Float")>  _
		Public Property ccCExecQty() As System.Nullable(Of Double)
			Get
				Return Me._ccCExecQty
			End Get
			Set
				If (Me._ccCExecQty.Equals(value) = false) Then
					Me.OnccCExecQtyChanging(value)
					Me.SendPropertyChanging
					Me._ccCExecQty = value
					Me.SendPropertyChanged("ccCExecQty")
					Me.OnccCExecQtyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCExecDate", DbType:="DateTime")>  _
		Public Property ccCExecDate() As System.Nullable(Of Date)
			Get
				Return Me._ccCExecDate
			End Get
			Set
				If (Me._ccCExecDate.Equals(value) = false) Then
					Me.OnccCExecDateChanging(value)
					Me.SendPropertyChanging
					Me._ccCExecDate = value
					Me.SendPropertyChanged("ccCExecDate")
					Me.OnccCExecDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCExecUser", DbType:="SmallInt")>  _
		Public Property ccCExecUser() As System.Nullable(Of Short)
			Get
				Return Me._ccCExecUser
			End Get
			Set
				If (Me._ccCExecUser.Equals(value) = false) Then
					Me.OnccCExecUserChanging(value)
					Me.SendPropertyChanging
					Me._ccCExecUser = value
					Me.SendPropertyChanged("ccCExecUser")
					Me.OnccCExecUserChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCIDLabels", DbType:="VarChar(MAX)")>  _
		Public Property ccCIDLabels() As String
			Get
				Return Me._ccCIDLabels
			End Get
			Set
				If (String.Equals(Me._ccCIDLabels, value) = false) Then
					Me.OnccCIDLabelsChanging(value)
					Me.SendPropertyChanging
					Me._ccCIDLabels = value
					Me.SendPropertyChanged("ccCIDLabels")
					Me.OnccCIDLabelsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FINDOC_MTRLINE", Storage:="_FINDOC1", ThisKey:="FINDOC", OtherKey:="FINDOC", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property FINDOC1() As FINDOC
			Get
				Return Me._FINDOC1.Entity
			End Get
			Set
				Dim previousValue As FINDOC = Me._FINDOC1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FINDOC1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FINDOC1.Entity = Nothing
						previousValue.MTRLINEs.Remove(Me)
					End If
					Me._FINDOC1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRLINEs.Add(Me)
						Me._FINDOC = value.FINDOC
					Else
						Me._FINDOC = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("FINDOC1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSEBIN_MTRLINE", Storage:="_WHOUSEBIN1", ThisKey:="COMPANY,WHOUSE,WHOUSEBIN", OtherKey:="COMPANY,WHOUSE,WHOUSEBIN", IsForeignKey:=true)>  _
		Public Property WHOUSEBIN1() As WHOUSEBIN
			Get
				Return Me._WHOUSEBIN1.Entity
			End Get
			Set
				Dim previousValue As WHOUSEBIN = Me._WHOUSEBIN1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSEBIN1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSEBIN1.Entity = Nothing
						previousValue.MTRLINEs.Remove(Me)
					End If
					Me._WHOUSEBIN1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRLINEs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSE = value.WHOUSE
						Me._WHOUSEBIN = value.WHOUSEBIN
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSE = CType(Nothing, Nullable(Of Short))
						Me._WHOUSEBIN = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSEBIN1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MTRL_MTRLINE", Storage:="_MTRL1", ThisKey:="MTRL", OtherKey:="MTRL", IsForeignKey:=true)>  _
		Public Property MTRL1() As MTRL
			Get
				Return Me._MTRL1.Entity
			End Get
			Set
				Dim previousValue As MTRL = Me._MTRL1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._MTRL1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._MTRL1.Entity = Nothing
						previousValue.MTRLINEs.Remove(Me)
					End If
					Me._MTRL1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRLINEs.Add(Me)
						Me._MTRL = value.MTRL
					Else
						Me._MTRL = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("MTRL1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRLINE", Storage:="_WHOUSE1", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE", IsForeignKey:=true)>  _
		Public Property WHOUSE1() As WHOUSE
			Get
				Return Me._WHOUSE1.Entity
			End Get
			Set
				Dim previousValue As WHOUSE = Me._WHOUSE1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSE1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSE1.Entity = Nothing
						previousValue.MTRLINEs.Remove(Me)
					End If
					Me._WHOUSE1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRLINEs.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSE = value.WHOUSE
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSE = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSE1")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRLINE1", Storage:="_WHOUSE2", ThisKey:="COMPANY,WHOUSESEC", OtherKey:="COMPANY,WHOUSE", IsForeignKey:=true)>  _
		Public Property WHOUSE2() As WHOUSE
			Get
				Return Me._WHOUSE2.Entity
			End Get
			Set
				Dim previousValue As WHOUSE = Me._WHOUSE2.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WHOUSE2.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WHOUSE2.Entity = Nothing
						previousValue.MTRLINEs1.Remove(Me)
					End If
					Me._WHOUSE2.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRLINEs1.Add(Me)
						Me._COMPANY = value.COMPANY
						Me._WHOUSESEC = value.WHOUSE
					Else
						Me._COMPANY = CType(Nothing, Short)
						Me._WHOUSESEC = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("WHOUSE2")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MTRL")>  _
	Partial Public Class MTRL
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _SODTYPE As Short
		
		Private _LOCKID As System.Nullable(Of Integer)
		
		Private _MTRL As Integer
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _CODE1 As String
		
		Private _CODE2 As String
		
		Private _APVCODE As String
		
		Private _RELITEM As System.Nullable(Of Integer)
		
		Private _NAME1 As String
		
		Private _ISACTIVE As Short
		
		Private _MTRTYPE As Short
		
		Private _MTRTYPE1 As Short
		
		Private _CRDCARDMODE As Short
		
		Private _MTRGASTYPE As Short
		
		Private _MTRACN As System.Nullable(Of Integer)
		
		Private _MTRCATEGORY As System.Nullable(Of Short)
		
		Private _VAT As Short
		
		Private _MTRUNIT1 As Short
		
		Private _MTRUNIT2 As System.Nullable(Of Short)
		
		Private _MTRUNIT3 As Short
		
		Private _MTRUNIT4 As Short
		
		Private _MU21 As System.Nullable(Of Double)
		
		Private _MU31 As Double
		
		Private _MU41 As Double
		
		Private _MU12MODE As System.Nullable(Of Short)
		
		Private _MU13MODE As System.Nullable(Of Short)
		
		Private _MU14MODE As System.Nullable(Of Short)
		
		Private _MTRGROUP As System.Nullable(Of Integer)
		
		Private _MTRMANFCTR As System.Nullable(Of Integer)
		
		Private _COUNTRY As System.Nullable(Of Short)
		
		Private _MCOUNTRY As System.Nullable(Of Short)
		
		Private _BUSUNITS As System.Nullable(Of Short)
		
		Private _COSTCNTR As System.Nullable(Of Integer)
		
		Private _MTRDUTY As System.Nullable(Of Short)
		
		Private _MTRPCATEGORY As System.Nullable(Of Integer)
		
		Private _MTRMARK As System.Nullable(Of Integer)
		
		Private _MTRMODEL As System.Nullable(Of Short)
		
		Private _CHK As System.Nullable(Of Short)
		
		Private _COMMISION As System.Nullable(Of Short)
		
		Private _MTRSEASON As System.Nullable(Of Short)
		
		Private _SOCURRENCY As System.Nullable(Of Short)
		
		Private _WARNING As String
		
		Private _KEPYO As Short
		
		Private _GSISVALUE As System.Nullable(Of Short)
		
		Private _MTRDUN As System.Nullable(Of Short)
		
		Private _INTRASTAT As System.Nullable(Of Integer)
		
		Private _MUMD As Short
		
		Private _VOLUME As System.Nullable(Of Double)
		
		Private _WEIGHT As System.Nullable(Of Double)
		
		Private _GWEIGHT As System.Nullable(Of Double)
		
		Private _WEBPAGE As String
		
		Private _WEBNAME As String
		
		Private _WEBVIEW As System.Nullable(Of Short)
		
		Private _MTRPLACE As String
		
		Private _PRICEW As System.Nullable(Of Double)
		
		Private _PRICER As System.Nullable(Of Double)
		
		Private _MARKUPW As System.Nullable(Of Double)
		
		Private _MARKUPR As System.Nullable(Of Double)
		
		Private _REMAINMODE As Short
		
		Private _ACNMSK As String
		
		Private _ACNMSK1 As String
		
		Private _ACNMSK2 As String
		
		Private _ACNMSK3 As String
		
		Private _ACNMSK4 As String
		
		Private _ACNMSK5 As String
		
		Private _ACNMSK6 As String
		
		Private _PRICEW01 As System.Nullable(Of Double)
		
		Private _PRICEW02 As System.Nullable(Of Double)
		
		Private _PRICEW03 As System.Nullable(Of Double)
		
		Private _PRICEW04 As System.Nullable(Of Double)
		
		Private _PRICEW05 As System.Nullable(Of Double)
		
		Private _PRICEW06 As System.Nullable(Of Double)
		
		Private _PRICEW07 As System.Nullable(Of Double)
		
		Private _PRICEW08 As System.Nullable(Of Double)
		
		Private _PRICEW09 As System.Nullable(Of Double)
		
		Private _PRICEW10 As System.Nullable(Of Double)
		
		Private _PRICEW11 As System.Nullable(Of Double)
		
		Private _PRICEW12 As System.Nullable(Of Double)
		
		Private _PRICER01 As System.Nullable(Of Double)
		
		Private _PRICER02 As System.Nullable(Of Double)
		
		Private _PRICER03 As System.Nullable(Of Double)
		
		Private _PRICER04 As System.Nullable(Of Double)
		
		Private _PRICER05 As System.Nullable(Of Double)
		
		Private _PRICER06 As System.Nullable(Of Double)
		
		Private _PRICER07 As System.Nullable(Of Double)
		
		Private _PRICER08 As System.Nullable(Of Double)
		
		Private _PRICER09 As System.Nullable(Of Double)
		
		Private _PRICER10 As System.Nullable(Of Double)
		
		Private _PRICER11 As System.Nullable(Of Double)
		
		Private _PRICER12 As System.Nullable(Of Double)
		
		Private _DIM1 As System.Nullable(Of Double)
		
		Private _DIM2 As System.Nullable(Of Double)
		
		Private _DIM3 As System.Nullable(Of Double)
		
		Private _DIMMD As Short
		
		Private _DIMMTRUNIT As Short
		
		Private _SALQTY As System.Nullable(Of Double)
		
		Private _PURQTY As System.Nullable(Of Double)
		
		Private _ITEQTY As System.Nullable(Of Double)
		
		Private _FROMVAL As Short
		
		Private _SODISCOUNT As System.Nullable(Of Double)
		
		Private _SODISCOUNT1 As System.Nullable(Of Double)
		
		Private _SODISCOUNT2 As System.Nullable(Of Double)
		
		Private _MAXPRCDISC As System.Nullable(Of Double)
		
		Private _MINPRCMK As System.Nullable(Of Double)
		
		Private _CHKMAXPRCDISC As Short
		
		Private _CALCONCREDIT As Short
		
		Private _REPLPUR As Short
		
		Private _REPLSAL As Short
		
		Private _REPLITE As Short
		
		Private _SPCS As System.Nullable(Of Integer)
		
		Private _SPCITESRV As System.Nullable(Of Integer)
		
		Private _AUTOUPDPUR As Short
		
		Private _AUTOUPDSAL As Short
		
		Private _AUTOUPDITE As Short
		
		Private _PRINTPURMD As Short
		
		Private _PRINTSALMD As Short
		
		Private _PRINTITEMD As Short
		
		Private _UNIQSUB As Short
		
		Private _LOTCODEMASK As String
		
		Private _MTRLOTUSE As Short
		
		Private _MTRSNUSE As Short
		
		Private _SNCODEMSK As String
		
		Private _ISTOTSRVCARD As Short
		
		Private _MTRTHIRD As Short
		
		Private _USESTBIN As Short
		
		Private _MTRONORDER As Short
		
		Private _TURNOVR As Short
		
		Private _SETITEM As String
		
		Private _REPLPRICE As System.Nullable(Of Double)
		
		Private _REPLEXP As System.Nullable(Of Double)
		
		Private _MTRRPLCODE As System.Nullable(Of Integer)
		
		Private _MTRCUS As System.Nullable(Of Integer)
		
		Private _MTRSUP As System.Nullable(Of Integer)
		
		Private _MTRSUPBRANCH As System.Nullable(Of Integer)
		
		Private _REMAINLIMMIN As System.Nullable(Of Double)
		
		Private _REMAINLIMMAX As System.Nullable(Of Double)
		
		Private _REORDERLEVEL As System.Nullable(Of Double)
		
		Private _EXPN1 As System.Nullable(Of Short)
		
		Private _EXPN2 As System.Nullable(Of Short)
		
		Private _EXPN3 As System.Nullable(Of Short)
		
		Private _EXPN4 As System.Nullable(Of Short)
		
		Private _EXPN5 As System.Nullable(Of Short)
		
		Private _EXPVAL1 As System.Nullable(Of Double)
		
		Private _EXPVAL2 As System.Nullable(Of Double)
		
		Private _EXPVAL3 As System.Nullable(Of Double)
		
		Private _EXPVAL4 As System.Nullable(Of Double)
		
		Private _EXPVAL5 As System.Nullable(Of Double)
		
		Private _LISOURCETYPE As String
		
		Private _SOCLMNS As System.Nullable(Of Short)
		
		Private _SOCLMNS1 As System.Nullable(Of Short)
		
		Private _MTRPRJCBLD As System.Nullable(Of Short)
		
		Private _SOEXPTYPE As System.Nullable(Of Short)
		
		Private _SXMSKK As System.Nullable(Of Integer)
		
		Private _PRDLEVEL As System.Nullable(Of Short)
		
		Private _REMARKS As String
		
		Private _MTRPACK As System.Nullable(Of Integer)
		
		Private _CDIMCATEG1 As System.Nullable(Of Short)
		
		Private _CDIM1 As System.Nullable(Of Integer)
		
		Private _CDIMCATEG2 As System.Nullable(Of Short)
		
		Private _CDIM2 As System.Nullable(Of Integer)
		
		Private _CDIMCATEG3 As System.Nullable(Of Short)
		
		Private _CDIM3 As System.Nullable(Of Integer)
		
		Private _CDIMLEVEL As String
		
		Private _MTRDEFWHS As String
		
		Private _VISITUNIT As System.Nullable(Of Short)
		
		Private _VISITNUM As System.Nullable(Of Double)
		
		Private _VATMTRL As System.Nullable(Of Integer)
		
		Private _ACNMSKS As String
		
		Private _ACNMSKX As String
		
		Private _ACNMSKSXD As String
		
		Private _ACNMSK9 As String
		
		Private _GUARTIME As System.Nullable(Of Short)
		
		Private _SOPAYVALUE As System.Nullable(Of Short)
		
		Private _MTRLA As System.Nullable(Of Integer)
		
		Private _MTRLP As System.Nullable(Of Integer)
		
		Private _HASBAIL As Short
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _TRENDFACTOR As System.Nullable(Of Double)
		
		Private _KADTAXIS As System.Nullable(Of Integer)
		
		Private _ACNTYPE1 As System.Nullable(Of Short)
		
		Private _ccCCode As String
		
		Private _MYDATAVPRC As System.Nullable(Of Short)
		
		Private _MYDATACODE As System.Nullable(Of Short)
		
		Private _CLASSTYPE As System.Nullable(Of Integer)
		
		Private _CLASSCATEGORY As System.Nullable(Of Integer)
		
		Private _ccCDescr As String
		
		Private _CDIMNUSE1 As String
		
		Private _CDIMNUSE2 As String
		
		Private _CDIMNUSE3 As String
		
		Private _SOPAYCODE As System.Nullable(Of Short)
		
		Private _MTRDOCs As EntitySet(Of MTRDOC)
		
		Private _MTREXTRA As EntityRef(Of MTREXTRA)
		
		Private _MTRLINEs As EntitySet(Of MTRLINE)
		
		Private _VAT1 As EntityRef(Of VAT)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnSODTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnSODTYPEChanged()
    End Sub
    Partial Private Sub OnLOCKIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCKIDChanged()
    End Sub
    Partial Private Sub OnMTRLChanging(value As Integer)
    End Sub
    Partial Private Sub OnMTRLChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnCODE1Changing(value As String)
    End Sub
    Partial Private Sub OnCODE1Changed()
    End Sub
    Partial Private Sub OnCODE2Changing(value As String)
    End Sub
    Partial Private Sub OnCODE2Changed()
    End Sub
    Partial Private Sub OnAPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnAPVCODEChanged()
    End Sub
    Partial Private Sub OnRELITEMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRELITEMChanged()
    End Sub
    Partial Private Sub OnNAME1Changing(value As String)
    End Sub
    Partial Private Sub OnNAME1Changed()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnMTRTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRTYPEChanged()
    End Sub
    Partial Private Sub OnMTRTYPE1Changing(value As Short)
    End Sub
    Partial Private Sub OnMTRTYPE1Changed()
    End Sub
    Partial Private Sub OnCRDCARDMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnCRDCARDMODEChanged()
    End Sub
    Partial Private Sub OnMTRGASTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRGASTYPEChanged()
    End Sub
    Partial Private Sub OnMTRACNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRACNChanged()
    End Sub
    Partial Private Sub OnMTRCATEGORYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRCATEGORYChanged()
    End Sub
    Partial Private Sub OnVATChanging(value As Short)
    End Sub
    Partial Private Sub OnVATChanged()
    End Sub
    Partial Private Sub OnMTRUNIT1Changing(value As Short)
    End Sub
    Partial Private Sub OnMTRUNIT1Changed()
    End Sub
    Partial Private Sub OnMTRUNIT2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRUNIT2Changed()
    End Sub
    Partial Private Sub OnMTRUNIT3Changing(value As Short)
    End Sub
    Partial Private Sub OnMTRUNIT3Changed()
    End Sub
    Partial Private Sub OnMTRUNIT4Changing(value As Short)
    End Sub
    Partial Private Sub OnMTRUNIT4Changed()
    End Sub
    Partial Private Sub OnMU21Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMU21Changed()
    End Sub
    Partial Private Sub OnMU31Changing(value As Double)
    End Sub
    Partial Private Sub OnMU31Changed()
    End Sub
    Partial Private Sub OnMU41Changing(value As Double)
    End Sub
    Partial Private Sub OnMU41Changed()
    End Sub
    Partial Private Sub OnMU12MODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMU12MODEChanged()
    End Sub
    Partial Private Sub OnMU13MODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMU13MODEChanged()
    End Sub
    Partial Private Sub OnMU14MODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMU14MODEChanged()
    End Sub
    Partial Private Sub OnMTRGROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRGROUPChanged()
    End Sub
    Partial Private Sub OnMTRMANFCTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRMANFCTRChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnMCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMCOUNTRYChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnCOSTCNTRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOSTCNTRChanged()
    End Sub
    Partial Private Sub OnMTRDUTYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRDUTYChanged()
    End Sub
    Partial Private Sub OnMTRPCATEGORYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRPCATEGORYChanged()
    End Sub
    Partial Private Sub OnMTRMARKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRMARKChanged()
    End Sub
    Partial Private Sub OnMTRMODELChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRMODELChanged()
    End Sub
    Partial Private Sub OnCHKChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCHKChanged()
    End Sub
    Partial Private Sub OnCOMMISIONChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOMMISIONChanged()
    End Sub
    Partial Private Sub OnMTRSEASONChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRSEASONChanged()
    End Sub
    Partial Private Sub OnSOCURRENCYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCURRENCYChanged()
    End Sub
    Partial Private Sub OnWARNINGChanging(value As String)
    End Sub
    Partial Private Sub OnWARNINGChanged()
    End Sub
    Partial Private Sub OnKEPYOChanging(value As Short)
    End Sub
    Partial Private Sub OnKEPYOChanged()
    End Sub
    Partial Private Sub OnGSISVALUEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGSISVALUEChanged()
    End Sub
    Partial Private Sub OnMTRDUNChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRDUNChanged()
    End Sub
    Partial Private Sub OnINTRASTATChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINTRASTATChanged()
    End Sub
    Partial Private Sub OnMUMDChanging(value As Short)
    End Sub
    Partial Private Sub OnMUMDChanged()
    End Sub
    Partial Private Sub OnVOLUMEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVOLUMEChanged()
    End Sub
    Partial Private Sub OnWEIGHTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnWEIGHTChanged()
    End Sub
    Partial Private Sub OnGWEIGHTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGWEIGHTChanged()
    End Sub
    Partial Private Sub OnWEBPAGEChanging(value As String)
    End Sub
    Partial Private Sub OnWEBPAGEChanged()
    End Sub
    Partial Private Sub OnWEBNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWEBNAMEChanged()
    End Sub
    Partial Private Sub OnWEBVIEWChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnWEBVIEWChanged()
    End Sub
    Partial Private Sub OnMTRPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnMTRPLACEChanged()
    End Sub
    Partial Private Sub OnPRICEWChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEWChanged()
    End Sub
    Partial Private Sub OnPRICERChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICERChanged()
    End Sub
    Partial Private Sub OnMARKUPWChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMARKUPWChanged()
    End Sub
    Partial Private Sub OnMARKUPRChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMARKUPRChanged()
    End Sub
    Partial Private Sub OnREMAINMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnREMAINMODEChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnACNMSK1Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK1Changed()
    End Sub
    Partial Private Sub OnACNMSK2Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK2Changed()
    End Sub
    Partial Private Sub OnACNMSK3Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK3Changed()
    End Sub
    Partial Private Sub OnACNMSK4Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK4Changed()
    End Sub
    Partial Private Sub OnACNMSK5Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK5Changed()
    End Sub
    Partial Private Sub OnACNMSK6Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK6Changed()
    End Sub
    Partial Private Sub OnPRICEW01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW01Changed()
    End Sub
    Partial Private Sub OnPRICEW02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW02Changed()
    End Sub
    Partial Private Sub OnPRICEW03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW03Changed()
    End Sub
    Partial Private Sub OnPRICEW04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW04Changed()
    End Sub
    Partial Private Sub OnPRICEW05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW05Changed()
    End Sub
    Partial Private Sub OnPRICEW06Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW06Changed()
    End Sub
    Partial Private Sub OnPRICEW07Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW07Changed()
    End Sub
    Partial Private Sub OnPRICEW08Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW08Changed()
    End Sub
    Partial Private Sub OnPRICEW09Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW09Changed()
    End Sub
    Partial Private Sub OnPRICEW10Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW10Changed()
    End Sub
    Partial Private Sub OnPRICEW11Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW11Changed()
    End Sub
    Partial Private Sub OnPRICEW12Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICEW12Changed()
    End Sub
    Partial Private Sub OnPRICER01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER01Changed()
    End Sub
    Partial Private Sub OnPRICER02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER02Changed()
    End Sub
    Partial Private Sub OnPRICER03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER03Changed()
    End Sub
    Partial Private Sub OnPRICER04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER04Changed()
    End Sub
    Partial Private Sub OnPRICER05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER05Changed()
    End Sub
    Partial Private Sub OnPRICER06Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER06Changed()
    End Sub
    Partial Private Sub OnPRICER07Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER07Changed()
    End Sub
    Partial Private Sub OnPRICER08Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER08Changed()
    End Sub
    Partial Private Sub OnPRICER09Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER09Changed()
    End Sub
    Partial Private Sub OnPRICER10Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER10Changed()
    End Sub
    Partial Private Sub OnPRICER11Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER11Changed()
    End Sub
    Partial Private Sub OnPRICER12Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPRICER12Changed()
    End Sub
    Partial Private Sub OnDIM1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIM1Changed()
    End Sub
    Partial Private Sub OnDIM2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIM2Changed()
    End Sub
    Partial Private Sub OnDIM3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDIM3Changed()
    End Sub
    Partial Private Sub OnDIMMDChanging(value As Short)
    End Sub
    Partial Private Sub OnDIMMDChanged()
    End Sub
    Partial Private Sub OnDIMMTRUNITChanging(value As Short)
    End Sub
    Partial Private Sub OnDIMMTRUNITChanged()
    End Sub
    Partial Private Sub OnSALQTYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSALQTYChanged()
    End Sub
    Partial Private Sub OnPURQTYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPURQTYChanged()
    End Sub
    Partial Private Sub OnITEQTYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnITEQTYChanged()
    End Sub
    Partial Private Sub OnFROMVALChanging(value As Short)
    End Sub
    Partial Private Sub OnFROMVALChanged()
    End Sub
    Partial Private Sub OnSODISCOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSODISCOUNTChanged()
    End Sub
    Partial Private Sub OnSODISCOUNT1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSODISCOUNT1Changed()
    End Sub
    Partial Private Sub OnSODISCOUNT2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSODISCOUNT2Changed()
    End Sub
    Partial Private Sub OnMAXPRCDISCChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMAXPRCDISCChanged()
    End Sub
    Partial Private Sub OnMINPRCMKChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMINPRCMKChanged()
    End Sub
    Partial Private Sub OnCHKMAXPRCDISCChanging(value As Short)
    End Sub
    Partial Private Sub OnCHKMAXPRCDISCChanged()
    End Sub
    Partial Private Sub OnCALCONCREDITChanging(value As Short)
    End Sub
    Partial Private Sub OnCALCONCREDITChanged()
    End Sub
    Partial Private Sub OnREPLPURChanging(value As Short)
    End Sub
    Partial Private Sub OnREPLPURChanged()
    End Sub
    Partial Private Sub OnREPLSALChanging(value As Short)
    End Sub
    Partial Private Sub OnREPLSALChanged()
    End Sub
    Partial Private Sub OnREPLITEChanging(value As Short)
    End Sub
    Partial Private Sub OnREPLITEChanged()
    End Sub
    Partial Private Sub OnSPCSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPCSChanged()
    End Sub
    Partial Private Sub OnSPCITESRVChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSPCITESRVChanged()
    End Sub
    Partial Private Sub OnAUTOUPDPURChanging(value As Short)
    End Sub
    Partial Private Sub OnAUTOUPDPURChanged()
    End Sub
    Partial Private Sub OnAUTOUPDSALChanging(value As Short)
    End Sub
    Partial Private Sub OnAUTOUPDSALChanged()
    End Sub
    Partial Private Sub OnAUTOUPDITEChanging(value As Short)
    End Sub
    Partial Private Sub OnAUTOUPDITEChanged()
    End Sub
    Partial Private Sub OnPRINTPURMDChanging(value As Short)
    End Sub
    Partial Private Sub OnPRINTPURMDChanged()
    End Sub
    Partial Private Sub OnPRINTSALMDChanging(value As Short)
    End Sub
    Partial Private Sub OnPRINTSALMDChanged()
    End Sub
    Partial Private Sub OnPRINTITEMDChanging(value As Short)
    End Sub
    Partial Private Sub OnPRINTITEMDChanged()
    End Sub
    Partial Private Sub OnUNIQSUBChanging(value As Short)
    End Sub
    Partial Private Sub OnUNIQSUBChanged()
    End Sub
    Partial Private Sub OnLOTCODEMASKChanging(value As String)
    End Sub
    Partial Private Sub OnLOTCODEMASKChanged()
    End Sub
    Partial Private Sub OnMTRLOTUSEChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRLOTUSEChanged()
    End Sub
    Partial Private Sub OnMTRSNUSEChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRSNUSEChanged()
    End Sub
    Partial Private Sub OnSNCODEMSKChanging(value As String)
    End Sub
    Partial Private Sub OnSNCODEMSKChanged()
    End Sub
    Partial Private Sub OnISTOTSRVCARDChanging(value As Short)
    End Sub
    Partial Private Sub OnISTOTSRVCARDChanged()
    End Sub
    Partial Private Sub OnMTRTHIRDChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRTHIRDChanged()
    End Sub
    Partial Private Sub OnUSESTBINChanging(value As Short)
    End Sub
    Partial Private Sub OnUSESTBINChanged()
    End Sub
    Partial Private Sub OnMTRONORDERChanging(value As Short)
    End Sub
    Partial Private Sub OnMTRONORDERChanged()
    End Sub
    Partial Private Sub OnTURNOVRChanging(value As Short)
    End Sub
    Partial Private Sub OnTURNOVRChanged()
    End Sub
    Partial Private Sub OnSETITEMChanging(value As String)
    End Sub
    Partial Private Sub OnSETITEMChanged()
    End Sub
    Partial Private Sub OnREPLPRICEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnREPLPRICEChanged()
    End Sub
    Partial Private Sub OnREPLEXPChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnREPLEXPChanged()
    End Sub
    Partial Private Sub OnMTRRPLCODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRRPLCODEChanged()
    End Sub
    Partial Private Sub OnMTRCUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRCUSChanged()
    End Sub
    Partial Private Sub OnMTRSUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRSUPChanged()
    End Sub
    Partial Private Sub OnMTRSUPBRANCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRSUPBRANCHChanged()
    End Sub
    Partial Private Sub OnREMAINLIMMINChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnREMAINLIMMINChanged()
    End Sub
    Partial Private Sub OnREMAINLIMMAXChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnREMAINLIMMAXChanged()
    End Sub
    Partial Private Sub OnREORDERLEVELChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnREORDERLEVELChanged()
    End Sub
    Partial Private Sub OnEXPN1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXPN1Changed()
    End Sub
    Partial Private Sub OnEXPN2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXPN2Changed()
    End Sub
    Partial Private Sub OnEXPN3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXPN3Changed()
    End Sub
    Partial Private Sub OnEXPN4Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXPN4Changed()
    End Sub
    Partial Private Sub OnEXPN5Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEXPN5Changed()
    End Sub
    Partial Private Sub OnEXPVAL1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXPVAL1Changed()
    End Sub
    Partial Private Sub OnEXPVAL2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXPVAL2Changed()
    End Sub
    Partial Private Sub OnEXPVAL3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXPVAL3Changed()
    End Sub
    Partial Private Sub OnEXPVAL4Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXPVAL4Changed()
    End Sub
    Partial Private Sub OnEXPVAL5Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEXPVAL5Changed()
    End Sub
    Partial Private Sub OnLISOURCETYPEChanging(value As String)
    End Sub
    Partial Private Sub OnLISOURCETYPEChanged()
    End Sub
    Partial Private Sub OnSOCLMNSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCLMNSChanged()
    End Sub
    Partial Private Sub OnSOCLMNS1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCLMNS1Changed()
    End Sub
    Partial Private Sub OnMTRPRJCBLDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMTRPRJCBLDChanged()
    End Sub
    Partial Private Sub OnSOEXPTYPEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOEXPTYPEChanged()
    End Sub
    Partial Private Sub OnSXMSKKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSXMSKKChanged()
    End Sub
    Partial Private Sub OnPRDLEVELChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRDLEVELChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnMTRPACKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRPACKChanged()
    End Sub
    Partial Private Sub OnCDIMCATEG1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCDIMCATEG1Changed()
    End Sub
    Partial Private Sub OnCDIM1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCDIM1Changed()
    End Sub
    Partial Private Sub OnCDIMCATEG2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCDIMCATEG2Changed()
    End Sub
    Partial Private Sub OnCDIM2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCDIM2Changed()
    End Sub
    Partial Private Sub OnCDIMCATEG3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCDIMCATEG3Changed()
    End Sub
    Partial Private Sub OnCDIM3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCDIM3Changed()
    End Sub
    Partial Private Sub OnCDIMLEVELChanging(value As String)
    End Sub
    Partial Private Sub OnCDIMLEVELChanged()
    End Sub
    Partial Private Sub OnMTRDEFWHSChanging(value As String)
    End Sub
    Partial Private Sub OnMTRDEFWHSChanged()
    End Sub
    Partial Private Sub OnVISITUNITChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVISITUNITChanged()
    End Sub
    Partial Private Sub OnVISITNUMChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVISITNUMChanged()
    End Sub
    Partial Private Sub OnVATMTRLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVATMTRLChanged()
    End Sub
    Partial Private Sub OnACNMSKSChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKSChanged()
    End Sub
    Partial Private Sub OnACNMSKXChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKXChanged()
    End Sub
    Partial Private Sub OnACNMSKSXDChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKSXDChanged()
    End Sub
    Partial Private Sub OnACNMSK9Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK9Changed()
    End Sub
    Partial Private Sub OnGUARTIMEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGUARTIMEChanged()
    End Sub
    Partial Private Sub OnSOPAYVALUEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOPAYVALUEChanged()
    End Sub
    Partial Private Sub OnMTRLAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRLAChanged()
    End Sub
    Partial Private Sub OnMTRLPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTRLPChanged()
    End Sub
    Partial Private Sub OnHASBAILChanging(value As Short)
    End Sub
    Partial Private Sub OnHASBAILChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnTRENDFACTORChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTRENDFACTORChanged()
    End Sub
    Partial Private Sub OnKADTAXISChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKADTAXISChanged()
    End Sub
    Partial Private Sub OnACNTYPE1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnACNTYPE1Changed()
    End Sub
    Partial Private Sub OnccCCodeChanging(value As String)
    End Sub
    Partial Private Sub OnccCCodeChanged()
    End Sub
    Partial Private Sub OnMYDATAVPRCChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMYDATAVPRCChanged()
    End Sub
    Partial Private Sub OnMYDATACODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMYDATACODEChanged()
    End Sub
    Partial Private Sub OnCLASSTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCLASSTYPEChanged()
    End Sub
    Partial Private Sub OnCLASSCATEGORYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCLASSCATEGORYChanged()
    End Sub
    Partial Private Sub OnccCDescrChanging(value As String)
    End Sub
    Partial Private Sub OnccCDescrChanged()
    End Sub
    Partial Private Sub OnCDIMNUSE1Changing(value As String)
    End Sub
    Partial Private Sub OnCDIMNUSE1Changed()
    End Sub
    Partial Private Sub OnCDIMNUSE2Changing(value As String)
    End Sub
    Partial Private Sub OnCDIMNUSE2Changed()
    End Sub
    Partial Private Sub OnCDIMNUSE3Changing(value As String)
    End Sub
    Partial Private Sub OnCDIMNUSE3Changed()
    End Sub
    Partial Private Sub OnSOPAYCODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOPAYCODEChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._MTRDOCs = New EntitySet(Of MTRDOC)(AddressOf Me.attach_MTRDOCs, AddressOf Me.detach_MTRDOCs)
			Me._MTREXTRA = CType(Nothing, EntityRef(Of MTREXTRA))
			Me._MTRLINEs = New EntitySet(Of MTRLINE)(AddressOf Me.attach_MTRLINEs, AddressOf Me.detach_MTRLINEs)
			Me._VAT1 = CType(Nothing, EntityRef(Of VAT))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property SODTYPE() As Short
			Get
				Return Me._SODTYPE
			End Get
			Set
				If ((Me._SODTYPE = value)  _
							= false) Then
					Me.OnSODTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SODTYPE = value
					Me.SendPropertyChanged("SODTYPE")
					Me.OnSODTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCKID", DbType:="Int")>  _
		Public Property LOCKID() As System.Nullable(Of Integer)
			Get
				Return Me._LOCKID
			End Get
			Set
				If (Me._LOCKID.Equals(value) = false) Then
					Me.OnLOCKIDChanging(value)
					Me.SendPropertyChanging
					Me._LOCKID = value
					Me.SendPropertyChanged("LOCKID")
					Me.OnLOCKIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property MTRL() As Integer
			Get
				Return Me._MTRL
			End Get
			Set
				If ((Me._MTRL = value)  _
							= false) Then
					Me.OnMTRLChanging(value)
					Me.SendPropertyChanging
					Me._MTRL = value
					Me.SendPropertyChanged("MTRL")
					Me.OnMTRLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE1", DbType:="VarChar(25)")>  _
		Public Property CODE1() As String
			Get
				Return Me._CODE1
			End Get
			Set
				If (String.Equals(Me._CODE1, value) = false) Then
					Me.OnCODE1Changing(value)
					Me.SendPropertyChanging
					Me._CODE1 = value
					Me.SendPropertyChanged("CODE1")
					Me.OnCODE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE2", DbType:="VarChar(25)")>  _
		Public Property CODE2() As String
			Get
				Return Me._CODE2
			End Get
			Set
				If (String.Equals(Me._CODE2, value) = false) Then
					Me.OnCODE2Changing(value)
					Me.SendPropertyChanging
					Me._CODE2 = value
					Me.SendPropertyChanged("CODE2")
					Me.OnCODE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APVCODE", DbType:="VarChar(25)")>  _
		Public Property APVCODE() As String
			Get
				Return Me._APVCODE
			End Get
			Set
				If (String.Equals(Me._APVCODE, value) = false) Then
					Me.OnAPVCODEChanging(value)
					Me.SendPropertyChanging
					Me._APVCODE = value
					Me.SendPropertyChanged("APVCODE")
					Me.OnAPVCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RELITEM", DbType:="Int")>  _
		Public Property RELITEM() As System.Nullable(Of Integer)
			Get
				Return Me._RELITEM
			End Get
			Set
				If (Me._RELITEM.Equals(value) = false) Then
					Me.OnRELITEMChanging(value)
					Me.SendPropertyChanging
					Me._RELITEM = value
					Me.SendPropertyChanged("RELITEM")
					Me.OnRELITEMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME1", DbType:="VarChar(128)")>  _
		Public Property NAME1() As String
			Get
				Return Me._NAME1
			End Get
			Set
				If (String.Equals(Me._NAME1, value) = false) Then
					Me.OnNAME1Changing(value)
					Me.SendPropertyChanging
					Me._NAME1 = value
					Me.SendPropertyChanged("NAME1")
					Me.OnNAME1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRTYPE() As Short
			Get
				Return Me._MTRTYPE
			End Get
			Set
				If ((Me._MTRTYPE = value)  _
							= false) Then
					Me.OnMTRTYPEChanging(value)
					Me.SendPropertyChanging
					Me._MTRTYPE = value
					Me.SendPropertyChanged("MTRTYPE")
					Me.OnMTRTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRTYPE1", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRTYPE1() As Short
			Get
				Return Me._MTRTYPE1
			End Get
			Set
				If ((Me._MTRTYPE1 = value)  _
							= false) Then
					Me.OnMTRTYPE1Changing(value)
					Me.SendPropertyChanging
					Me._MTRTYPE1 = value
					Me.SendPropertyChanged("MTRTYPE1")
					Me.OnMTRTYPE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRDCARDMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property CRDCARDMODE() As Short
			Get
				Return Me._CRDCARDMODE
			End Get
			Set
				If ((Me._CRDCARDMODE = value)  _
							= false) Then
					Me.OnCRDCARDMODEChanging(value)
					Me.SendPropertyChanging
					Me._CRDCARDMODE = value
					Me.SendPropertyChanged("CRDCARDMODE")
					Me.OnCRDCARDMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRGASTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRGASTYPE() As Short
			Get
				Return Me._MTRGASTYPE
			End Get
			Set
				If ((Me._MTRGASTYPE = value)  _
							= false) Then
					Me.OnMTRGASTYPEChanging(value)
					Me.SendPropertyChanging
					Me._MTRGASTYPE = value
					Me.SendPropertyChanged("MTRGASTYPE")
					Me.OnMTRGASTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRACN", DbType:="Int")>  _
		Public Property MTRACN() As System.Nullable(Of Integer)
			Get
				Return Me._MTRACN
			End Get
			Set
				If (Me._MTRACN.Equals(value) = false) Then
					Me.OnMTRACNChanging(value)
					Me.SendPropertyChanging
					Me._MTRACN = value
					Me.SendPropertyChanged("MTRACN")
					Me.OnMTRACNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRCATEGORY", DbType:="SmallInt")>  _
		Public Property MTRCATEGORY() As System.Nullable(Of Short)
			Get
				Return Me._MTRCATEGORY
			End Get
			Set
				If (Me._MTRCATEGORY.Equals(value) = false) Then
					Me.OnMTRCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._MTRCATEGORY = value
					Me.SendPropertyChanged("MTRCATEGORY")
					Me.OnMTRCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAT", DbType:="SmallInt NOT NULL")>  _
		Public Property VAT() As Short
			Get
				Return Me._VAT
			End Get
			Set
				If ((Me._VAT = value)  _
							= false) Then
					If Me._VAT1.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnVATChanging(value)
					Me.SendPropertyChanging
					Me._VAT = value
					Me.SendPropertyChanged("VAT")
					Me.OnVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT1", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRUNIT1() As Short
			Get
				Return Me._MTRUNIT1
			End Get
			Set
				If ((Me._MTRUNIT1 = value)  _
							= false) Then
					Me.OnMTRUNIT1Changing(value)
					Me.SendPropertyChanging
					Me._MTRUNIT1 = value
					Me.SendPropertyChanged("MTRUNIT1")
					Me.OnMTRUNIT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT2", DbType:="SmallInt")>  _
		Public Property MTRUNIT2() As System.Nullable(Of Short)
			Get
				Return Me._MTRUNIT2
			End Get
			Set
				If (Me._MTRUNIT2.Equals(value) = false) Then
					Me.OnMTRUNIT2Changing(value)
					Me.SendPropertyChanging
					Me._MTRUNIT2 = value
					Me.SendPropertyChanged("MTRUNIT2")
					Me.OnMTRUNIT2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT3", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRUNIT3() As Short
			Get
				Return Me._MTRUNIT3
			End Get
			Set
				If ((Me._MTRUNIT3 = value)  _
							= false) Then
					Me.OnMTRUNIT3Changing(value)
					Me.SendPropertyChanging
					Me._MTRUNIT3 = value
					Me.SendPropertyChanged("MTRUNIT3")
					Me.OnMTRUNIT3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT4", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRUNIT4() As Short
			Get
				Return Me._MTRUNIT4
			End Get
			Set
				If ((Me._MTRUNIT4 = value)  _
							= false) Then
					Me.OnMTRUNIT4Changing(value)
					Me.SendPropertyChanging
					Me._MTRUNIT4 = value
					Me.SendPropertyChanged("MTRUNIT4")
					Me.OnMTRUNIT4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU21", DbType:="Float")>  _
		Public Property MU21() As System.Nullable(Of Double)
			Get
				Return Me._MU21
			End Get
			Set
				If (Me._MU21.Equals(value) = false) Then
					Me.OnMU21Changing(value)
					Me.SendPropertyChanging
					Me._MU21 = value
					Me.SendPropertyChanged("MU21")
					Me.OnMU21Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU31", DbType:="Float NOT NULL")>  _
		Public Property MU31() As Double
			Get
				Return Me._MU31
			End Get
			Set
				If ((Me._MU31 = value)  _
							= false) Then
					Me.OnMU31Changing(value)
					Me.SendPropertyChanging
					Me._MU31 = value
					Me.SendPropertyChanged("MU31")
					Me.OnMU31Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU41", DbType:="Float NOT NULL")>  _
		Public Property MU41() As Double
			Get
				Return Me._MU41
			End Get
			Set
				If ((Me._MU41 = value)  _
							= false) Then
					Me.OnMU41Changing(value)
					Me.SendPropertyChanging
					Me._MU41 = value
					Me.SendPropertyChanged("MU41")
					Me.OnMU41Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU12MODE", DbType:="SmallInt")>  _
		Public Property MU12MODE() As System.Nullable(Of Short)
			Get
				Return Me._MU12MODE
			End Get
			Set
				If (Me._MU12MODE.Equals(value) = false) Then
					Me.OnMU12MODEChanging(value)
					Me.SendPropertyChanging
					Me._MU12MODE = value
					Me.SendPropertyChanged("MU12MODE")
					Me.OnMU12MODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU13MODE", DbType:="SmallInt")>  _
		Public Property MU13MODE() As System.Nullable(Of Short)
			Get
				Return Me._MU13MODE
			End Get
			Set
				If (Me._MU13MODE.Equals(value) = false) Then
					Me.OnMU13MODEChanging(value)
					Me.SendPropertyChanging
					Me._MU13MODE = value
					Me.SendPropertyChanged("MU13MODE")
					Me.OnMU13MODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU14MODE", DbType:="SmallInt")>  _
		Public Property MU14MODE() As System.Nullable(Of Short)
			Get
				Return Me._MU14MODE
			End Get
			Set
				If (Me._MU14MODE.Equals(value) = false) Then
					Me.OnMU14MODEChanging(value)
					Me.SendPropertyChanging
					Me._MU14MODE = value
					Me.SendPropertyChanged("MU14MODE")
					Me.OnMU14MODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRGROUP", DbType:="Int")>  _
		Public Property MTRGROUP() As System.Nullable(Of Integer)
			Get
				Return Me._MTRGROUP
			End Get
			Set
				If (Me._MTRGROUP.Equals(value) = false) Then
					Me.OnMTRGROUPChanging(value)
					Me.SendPropertyChanging
					Me._MTRGROUP = value
					Me.SendPropertyChanged("MTRGROUP")
					Me.OnMTRGROUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRMANFCTR", DbType:="Int")>  _
		Public Property MTRMANFCTR() As System.Nullable(Of Integer)
			Get
				Return Me._MTRMANFCTR
			End Get
			Set
				If (Me._MTRMANFCTR.Equals(value) = false) Then
					Me.OnMTRMANFCTRChanging(value)
					Me.SendPropertyChanging
					Me._MTRMANFCTR = value
					Me.SendPropertyChanged("MTRMANFCTR")
					Me.OnMTRMANFCTRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt")>  _
		Public Property COUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._COUNTRY
			End Get
			Set
				If (Me._COUNTRY.Equals(value) = false) Then
					Me.OnCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._COUNTRY = value
					Me.SendPropertyChanged("COUNTRY")
					Me.OnCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCOUNTRY", DbType:="SmallInt")>  _
		Public Property MCOUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._MCOUNTRY
			End Get
			Set
				If (Me._MCOUNTRY.Equals(value) = false) Then
					Me.OnMCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._MCOUNTRY = value
					Me.SendPropertyChanged("MCOUNTRY")
					Me.OnMCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="SmallInt")>  _
		Public Property BUSUNITS() As System.Nullable(Of Short)
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (Me._BUSUNITS.Equals(value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTCNTR", DbType:="Int")>  _
		Public Property COSTCNTR() As System.Nullable(Of Integer)
			Get
				Return Me._COSTCNTR
			End Get
			Set
				If (Me._COSTCNTR.Equals(value) = false) Then
					Me.OnCOSTCNTRChanging(value)
					Me.SendPropertyChanging
					Me._COSTCNTR = value
					Me.SendPropertyChanged("COSTCNTR")
					Me.OnCOSTCNTRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRDUTY", DbType:="SmallInt")>  _
		Public Property MTRDUTY() As System.Nullable(Of Short)
			Get
				Return Me._MTRDUTY
			End Get
			Set
				If (Me._MTRDUTY.Equals(value) = false) Then
					Me.OnMTRDUTYChanging(value)
					Me.SendPropertyChanging
					Me._MTRDUTY = value
					Me.SendPropertyChanged("MTRDUTY")
					Me.OnMTRDUTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRPCATEGORY", DbType:="Int")>  _
		Public Property MTRPCATEGORY() As System.Nullable(Of Integer)
			Get
				Return Me._MTRPCATEGORY
			End Get
			Set
				If (Me._MTRPCATEGORY.Equals(value) = false) Then
					Me.OnMTRPCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._MTRPCATEGORY = value
					Me.SendPropertyChanged("MTRPCATEGORY")
					Me.OnMTRPCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRMARK", DbType:="Int")>  _
		Public Property MTRMARK() As System.Nullable(Of Integer)
			Get
				Return Me._MTRMARK
			End Get
			Set
				If (Me._MTRMARK.Equals(value) = false) Then
					Me.OnMTRMARKChanging(value)
					Me.SendPropertyChanging
					Me._MTRMARK = value
					Me.SendPropertyChanged("MTRMARK")
					Me.OnMTRMARKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRMODEL", DbType:="SmallInt")>  _
		Public Property MTRMODEL() As System.Nullable(Of Short)
			Get
				Return Me._MTRMODEL
			End Get
			Set
				If (Me._MTRMODEL.Equals(value) = false) Then
					Me.OnMTRMODELChanging(value)
					Me.SendPropertyChanging
					Me._MTRMODEL = value
					Me.SendPropertyChanged("MTRMODEL")
					Me.OnMTRMODELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK", DbType:="SmallInt")>  _
		Public Property CHK() As System.Nullable(Of Short)
			Get
				Return Me._CHK
			End Get
			Set
				If (Me._CHK.Equals(value) = false) Then
					Me.OnCHKChanging(value)
					Me.SendPropertyChanging
					Me._CHK = value
					Me.SendPropertyChanged("CHK")
					Me.OnCHKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMISION", DbType:="SmallInt")>  _
		Public Property COMMISION() As System.Nullable(Of Short)
			Get
				Return Me._COMMISION
			End Get
			Set
				If (Me._COMMISION.Equals(value) = false) Then
					Me.OnCOMMISIONChanging(value)
					Me.SendPropertyChanging
					Me._COMMISION = value
					Me.SendPropertyChanged("COMMISION")
					Me.OnCOMMISIONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRSEASON", DbType:="SmallInt")>  _
		Public Property MTRSEASON() As System.Nullable(Of Short)
			Get
				Return Me._MTRSEASON
			End Get
			Set
				If (Me._MTRSEASON.Equals(value) = false) Then
					Me.OnMTRSEASONChanging(value)
					Me.SendPropertyChanging
					Me._MTRSEASON = value
					Me.SendPropertyChanged("MTRSEASON")
					Me.OnMTRSEASONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCURRENCY", DbType:="SmallInt")>  _
		Public Property SOCURRENCY() As System.Nullable(Of Short)
			Get
				Return Me._SOCURRENCY
			End Get
			Set
				If (Me._SOCURRENCY.Equals(value) = false) Then
					Me.OnSOCURRENCYChanging(value)
					Me.SendPropertyChanging
					Me._SOCURRENCY = value
					Me.SendPropertyChanged("SOCURRENCY")
					Me.OnSOCURRENCYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING", DbType:="VarChar(250)")>  _
		Public Property WARNING() As String
			Get
				Return Me._WARNING
			End Get
			Set
				If (String.Equals(Me._WARNING, value) = false) Then
					Me.OnWARNINGChanging(value)
					Me.SendPropertyChanging
					Me._WARNING = value
					Me.SendPropertyChanged("WARNING")
					Me.OnWARNINGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEPYO", DbType:="SmallInt NOT NULL")>  _
		Public Property KEPYO() As Short
			Get
				Return Me._KEPYO
			End Get
			Set
				If ((Me._KEPYO = value)  _
							= false) Then
					Me.OnKEPYOChanging(value)
					Me.SendPropertyChanging
					Me._KEPYO = value
					Me.SendPropertyChanged("KEPYO")
					Me.OnKEPYOChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GSISVALUE", DbType:="SmallInt")>  _
		Public Property GSISVALUE() As System.Nullable(Of Short)
			Get
				Return Me._GSISVALUE
			End Get
			Set
				If (Me._GSISVALUE.Equals(value) = false) Then
					Me.OnGSISVALUEChanging(value)
					Me.SendPropertyChanging
					Me._GSISVALUE = value
					Me.SendPropertyChanged("GSISVALUE")
					Me.OnGSISVALUEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRDUN", DbType:="SmallInt")>  _
		Public Property MTRDUN() As System.Nullable(Of Short)
			Get
				Return Me._MTRDUN
			End Get
			Set
				If (Me._MTRDUN.Equals(value) = false) Then
					Me.OnMTRDUNChanging(value)
					Me.SendPropertyChanging
					Me._MTRDUN = value
					Me.SendPropertyChanged("MTRDUN")
					Me.OnMTRDUNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INTRASTAT", DbType:="Int")>  _
		Public Property INTRASTAT() As System.Nullable(Of Integer)
			Get
				Return Me._INTRASTAT
			End Get
			Set
				If (Me._INTRASTAT.Equals(value) = false) Then
					Me.OnINTRASTATChanging(value)
					Me.SendPropertyChanging
					Me._INTRASTAT = value
					Me.SendPropertyChanged("INTRASTAT")
					Me.OnINTRASTATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MUMD", DbType:="SmallInt NOT NULL")>  _
		Public Property MUMD() As Short
			Get
				Return Me._MUMD
			End Get
			Set
				If ((Me._MUMD = value)  _
							= false) Then
					Me.OnMUMDChanging(value)
					Me.SendPropertyChanging
					Me._MUMD = value
					Me.SendPropertyChanged("MUMD")
					Me.OnMUMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOLUME", DbType:="Float")>  _
		Public Property VOLUME() As System.Nullable(Of Double)
			Get
				Return Me._VOLUME
			End Get
			Set
				If (Me._VOLUME.Equals(value) = false) Then
					Me.OnVOLUMEChanging(value)
					Me.SendPropertyChanging
					Me._VOLUME = value
					Me.SendPropertyChanged("VOLUME")
					Me.OnVOLUMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT", DbType:="Float")>  _
		Public Property WEIGHT() As System.Nullable(Of Double)
			Get
				Return Me._WEIGHT
			End Get
			Set
				If (Me._WEIGHT.Equals(value) = false) Then
					Me.OnWEIGHTChanging(value)
					Me.SendPropertyChanging
					Me._WEIGHT = value
					Me.SendPropertyChanged("WEIGHT")
					Me.OnWEIGHTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GWEIGHT", DbType:="Float")>  _
		Public Property GWEIGHT() As System.Nullable(Of Double)
			Get
				Return Me._GWEIGHT
			End Get
			Set
				If (Me._GWEIGHT.Equals(value) = false) Then
					Me.OnGWEIGHTChanging(value)
					Me.SendPropertyChanging
					Me._GWEIGHT = value
					Me.SendPropertyChanged("GWEIGHT")
					Me.OnGWEIGHTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEBPAGE", DbType:="VarChar(128)")>  _
		Public Property WEBPAGE() As String
			Get
				Return Me._WEBPAGE
			End Get
			Set
				If (String.Equals(Me._WEBPAGE, value) = false) Then
					Me.OnWEBPAGEChanging(value)
					Me.SendPropertyChanging
					Me._WEBPAGE = value
					Me.SendPropertyChanged("WEBPAGE")
					Me.OnWEBPAGEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEBNAME", DbType:="VarChar(64)")>  _
		Public Property WEBNAME() As String
			Get
				Return Me._WEBNAME
			End Get
			Set
				If (String.Equals(Me._WEBNAME, value) = false) Then
					Me.OnWEBNAMEChanging(value)
					Me.SendPropertyChanging
					Me._WEBNAME = value
					Me.SendPropertyChanged("WEBNAME")
					Me.OnWEBNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEBVIEW", DbType:="SmallInt")>  _
		Public Property WEBVIEW() As System.Nullable(Of Short)
			Get
				Return Me._WEBVIEW
			End Get
			Set
				If (Me._WEBVIEW.Equals(value) = false) Then
					Me.OnWEBVIEWChanging(value)
					Me.SendPropertyChanging
					Me._WEBVIEW = value
					Me.SendPropertyChanged("WEBVIEW")
					Me.OnWEBVIEWChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRPLACE", DbType:="VarChar(25)")>  _
		Public Property MTRPLACE() As String
			Get
				Return Me._MTRPLACE
			End Get
			Set
				If (String.Equals(Me._MTRPLACE, value) = false) Then
					Me.OnMTRPLACEChanging(value)
					Me.SendPropertyChanging
					Me._MTRPLACE = value
					Me.SendPropertyChanged("MTRPLACE")
					Me.OnMTRPLACEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW", DbType:="Float")>  _
		Public Property PRICEW() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW
			End Get
			Set
				If (Me._PRICEW.Equals(value) = false) Then
					Me.OnPRICEWChanging(value)
					Me.SendPropertyChanging
					Me._PRICEW = value
					Me.SendPropertyChanged("PRICEW")
					Me.OnPRICEWChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER", DbType:="Float")>  _
		Public Property PRICER() As System.Nullable(Of Double)
			Get
				Return Me._PRICER
			End Get
			Set
				If (Me._PRICER.Equals(value) = false) Then
					Me.OnPRICERChanging(value)
					Me.SendPropertyChanging
					Me._PRICER = value
					Me.SendPropertyChanged("PRICER")
					Me.OnPRICERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MARKUPW", DbType:="Float")>  _
		Public Property MARKUPW() As System.Nullable(Of Double)
			Get
				Return Me._MARKUPW
			End Get
			Set
				If (Me._MARKUPW.Equals(value) = false) Then
					Me.OnMARKUPWChanging(value)
					Me.SendPropertyChanging
					Me._MARKUPW = value
					Me.SendPropertyChanged("MARKUPW")
					Me.OnMARKUPWChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MARKUPR", DbType:="Float")>  _
		Public Property MARKUPR() As System.Nullable(Of Double)
			Get
				Return Me._MARKUPR
			End Get
			Set
				If (Me._MARKUPR.Equals(value) = false) Then
					Me.OnMARKUPRChanging(value)
					Me.SendPropertyChanging
					Me._MARKUPR = value
					Me.SendPropertyChanged("MARKUPR")
					Me.OnMARKUPRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMAINMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property REMAINMODE() As Short
			Get
				Return Me._REMAINMODE
			End Get
			Set
				If ((Me._REMAINMODE = value)  _
							= false) Then
					Me.OnREMAINMODEChanging(value)
					Me.SendPropertyChanging
					Me._REMAINMODE = value
					Me.SendPropertyChanged("REMAINMODE")
					Me.OnREMAINMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK1", DbType:="VarChar(25)")>  _
		Public Property ACNMSK1() As String
			Get
				Return Me._ACNMSK1
			End Get
			Set
				If (String.Equals(Me._ACNMSK1, value) = false) Then
					Me.OnACNMSK1Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK1 = value
					Me.SendPropertyChanged("ACNMSK1")
					Me.OnACNMSK1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK2", DbType:="VarChar(25)")>  _
		Public Property ACNMSK2() As String
			Get
				Return Me._ACNMSK2
			End Get
			Set
				If (String.Equals(Me._ACNMSK2, value) = false) Then
					Me.OnACNMSK2Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK2 = value
					Me.SendPropertyChanged("ACNMSK2")
					Me.OnACNMSK2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK3", DbType:="VarChar(25)")>  _
		Public Property ACNMSK3() As String
			Get
				Return Me._ACNMSK3
			End Get
			Set
				If (String.Equals(Me._ACNMSK3, value) = false) Then
					Me.OnACNMSK3Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK3 = value
					Me.SendPropertyChanged("ACNMSK3")
					Me.OnACNMSK3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK4", DbType:="VarChar(25)")>  _
		Public Property ACNMSK4() As String
			Get
				Return Me._ACNMSK4
			End Get
			Set
				If (String.Equals(Me._ACNMSK4, value) = false) Then
					Me.OnACNMSK4Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK4 = value
					Me.SendPropertyChanged("ACNMSK4")
					Me.OnACNMSK4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK5", DbType:="VarChar(25)")>  _
		Public Property ACNMSK5() As String
			Get
				Return Me._ACNMSK5
			End Get
			Set
				If (String.Equals(Me._ACNMSK5, value) = false) Then
					Me.OnACNMSK5Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK5 = value
					Me.SendPropertyChanged("ACNMSK5")
					Me.OnACNMSK5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK6", DbType:="VarChar(25)")>  _
		Public Property ACNMSK6() As String
			Get
				Return Me._ACNMSK6
			End Get
			Set
				If (String.Equals(Me._ACNMSK6, value) = false) Then
					Me.OnACNMSK6Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK6 = value
					Me.SendPropertyChanged("ACNMSK6")
					Me.OnACNMSK6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW01", DbType:="Float")>  _
		Public Property PRICEW01() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW01
			End Get
			Set
				If (Me._PRICEW01.Equals(value) = false) Then
					Me.OnPRICEW01Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW01 = value
					Me.SendPropertyChanged("PRICEW01")
					Me.OnPRICEW01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW02", DbType:="Float")>  _
		Public Property PRICEW02() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW02
			End Get
			Set
				If (Me._PRICEW02.Equals(value) = false) Then
					Me.OnPRICEW02Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW02 = value
					Me.SendPropertyChanged("PRICEW02")
					Me.OnPRICEW02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW03", DbType:="Float")>  _
		Public Property PRICEW03() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW03
			End Get
			Set
				If (Me._PRICEW03.Equals(value) = false) Then
					Me.OnPRICEW03Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW03 = value
					Me.SendPropertyChanged("PRICEW03")
					Me.OnPRICEW03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW04", DbType:="Float")>  _
		Public Property PRICEW04() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW04
			End Get
			Set
				If (Me._PRICEW04.Equals(value) = false) Then
					Me.OnPRICEW04Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW04 = value
					Me.SendPropertyChanged("PRICEW04")
					Me.OnPRICEW04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW05", DbType:="Float")>  _
		Public Property PRICEW05() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW05
			End Get
			Set
				If (Me._PRICEW05.Equals(value) = false) Then
					Me.OnPRICEW05Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW05 = value
					Me.SendPropertyChanged("PRICEW05")
					Me.OnPRICEW05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW06", DbType:="Float")>  _
		Public Property PRICEW06() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW06
			End Get
			Set
				If (Me._PRICEW06.Equals(value) = false) Then
					Me.OnPRICEW06Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW06 = value
					Me.SendPropertyChanged("PRICEW06")
					Me.OnPRICEW06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW07", DbType:="Float")>  _
		Public Property PRICEW07() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW07
			End Get
			Set
				If (Me._PRICEW07.Equals(value) = false) Then
					Me.OnPRICEW07Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW07 = value
					Me.SendPropertyChanged("PRICEW07")
					Me.OnPRICEW07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW08", DbType:="Float")>  _
		Public Property PRICEW08() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW08
			End Get
			Set
				If (Me._PRICEW08.Equals(value) = false) Then
					Me.OnPRICEW08Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW08 = value
					Me.SendPropertyChanged("PRICEW08")
					Me.OnPRICEW08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW09", DbType:="Float")>  _
		Public Property PRICEW09() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW09
			End Get
			Set
				If (Me._PRICEW09.Equals(value) = false) Then
					Me.OnPRICEW09Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW09 = value
					Me.SendPropertyChanged("PRICEW09")
					Me.OnPRICEW09Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW10", DbType:="Float")>  _
		Public Property PRICEW10() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW10
			End Get
			Set
				If (Me._PRICEW10.Equals(value) = false) Then
					Me.OnPRICEW10Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW10 = value
					Me.SendPropertyChanged("PRICEW10")
					Me.OnPRICEW10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW11", DbType:="Float")>  _
		Public Property PRICEW11() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW11
			End Get
			Set
				If (Me._PRICEW11.Equals(value) = false) Then
					Me.OnPRICEW11Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW11 = value
					Me.SendPropertyChanged("PRICEW11")
					Me.OnPRICEW11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEW12", DbType:="Float")>  _
		Public Property PRICEW12() As System.Nullable(Of Double)
			Get
				Return Me._PRICEW12
			End Get
			Set
				If (Me._PRICEW12.Equals(value) = false) Then
					Me.OnPRICEW12Changing(value)
					Me.SendPropertyChanging
					Me._PRICEW12 = value
					Me.SendPropertyChanged("PRICEW12")
					Me.OnPRICEW12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER01", DbType:="Float")>  _
		Public Property PRICER01() As System.Nullable(Of Double)
			Get
				Return Me._PRICER01
			End Get
			Set
				If (Me._PRICER01.Equals(value) = false) Then
					Me.OnPRICER01Changing(value)
					Me.SendPropertyChanging
					Me._PRICER01 = value
					Me.SendPropertyChanged("PRICER01")
					Me.OnPRICER01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER02", DbType:="Float")>  _
		Public Property PRICER02() As System.Nullable(Of Double)
			Get
				Return Me._PRICER02
			End Get
			Set
				If (Me._PRICER02.Equals(value) = false) Then
					Me.OnPRICER02Changing(value)
					Me.SendPropertyChanging
					Me._PRICER02 = value
					Me.SendPropertyChanged("PRICER02")
					Me.OnPRICER02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER03", DbType:="Float")>  _
		Public Property PRICER03() As System.Nullable(Of Double)
			Get
				Return Me._PRICER03
			End Get
			Set
				If (Me._PRICER03.Equals(value) = false) Then
					Me.OnPRICER03Changing(value)
					Me.SendPropertyChanging
					Me._PRICER03 = value
					Me.SendPropertyChanged("PRICER03")
					Me.OnPRICER03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER04", DbType:="Float")>  _
		Public Property PRICER04() As System.Nullable(Of Double)
			Get
				Return Me._PRICER04
			End Get
			Set
				If (Me._PRICER04.Equals(value) = false) Then
					Me.OnPRICER04Changing(value)
					Me.SendPropertyChanging
					Me._PRICER04 = value
					Me.SendPropertyChanged("PRICER04")
					Me.OnPRICER04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER05", DbType:="Float")>  _
		Public Property PRICER05() As System.Nullable(Of Double)
			Get
				Return Me._PRICER05
			End Get
			Set
				If (Me._PRICER05.Equals(value) = false) Then
					Me.OnPRICER05Changing(value)
					Me.SendPropertyChanging
					Me._PRICER05 = value
					Me.SendPropertyChanged("PRICER05")
					Me.OnPRICER05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER06", DbType:="Float")>  _
		Public Property PRICER06() As System.Nullable(Of Double)
			Get
				Return Me._PRICER06
			End Get
			Set
				If (Me._PRICER06.Equals(value) = false) Then
					Me.OnPRICER06Changing(value)
					Me.SendPropertyChanging
					Me._PRICER06 = value
					Me.SendPropertyChanged("PRICER06")
					Me.OnPRICER06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER07", DbType:="Float")>  _
		Public Property PRICER07() As System.Nullable(Of Double)
			Get
				Return Me._PRICER07
			End Get
			Set
				If (Me._PRICER07.Equals(value) = false) Then
					Me.OnPRICER07Changing(value)
					Me.SendPropertyChanging
					Me._PRICER07 = value
					Me.SendPropertyChanged("PRICER07")
					Me.OnPRICER07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER08", DbType:="Float")>  _
		Public Property PRICER08() As System.Nullable(Of Double)
			Get
				Return Me._PRICER08
			End Get
			Set
				If (Me._PRICER08.Equals(value) = false) Then
					Me.OnPRICER08Changing(value)
					Me.SendPropertyChanging
					Me._PRICER08 = value
					Me.SendPropertyChanged("PRICER08")
					Me.OnPRICER08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER09", DbType:="Float")>  _
		Public Property PRICER09() As System.Nullable(Of Double)
			Get
				Return Me._PRICER09
			End Get
			Set
				If (Me._PRICER09.Equals(value) = false) Then
					Me.OnPRICER09Changing(value)
					Me.SendPropertyChanging
					Me._PRICER09 = value
					Me.SendPropertyChanged("PRICER09")
					Me.OnPRICER09Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER10", DbType:="Float")>  _
		Public Property PRICER10() As System.Nullable(Of Double)
			Get
				Return Me._PRICER10
			End Get
			Set
				If (Me._PRICER10.Equals(value) = false) Then
					Me.OnPRICER10Changing(value)
					Me.SendPropertyChanging
					Me._PRICER10 = value
					Me.SendPropertyChanged("PRICER10")
					Me.OnPRICER10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER11", DbType:="Float")>  _
		Public Property PRICER11() As System.Nullable(Of Double)
			Get
				Return Me._PRICER11
			End Get
			Set
				If (Me._PRICER11.Equals(value) = false) Then
					Me.OnPRICER11Changing(value)
					Me.SendPropertyChanging
					Me._PRICER11 = value
					Me.SendPropertyChanged("PRICER11")
					Me.OnPRICER11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICER12", DbType:="Float")>  _
		Public Property PRICER12() As System.Nullable(Of Double)
			Get
				Return Me._PRICER12
			End Get
			Set
				If (Me._PRICER12.Equals(value) = false) Then
					Me.OnPRICER12Changing(value)
					Me.SendPropertyChanging
					Me._PRICER12 = value
					Me.SendPropertyChanged("PRICER12")
					Me.OnPRICER12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIM1", DbType:="Float")>  _
		Public Property DIM1() As System.Nullable(Of Double)
			Get
				Return Me._DIM1
			End Get
			Set
				If (Me._DIM1.Equals(value) = false) Then
					Me.OnDIM1Changing(value)
					Me.SendPropertyChanging
					Me._DIM1 = value
					Me.SendPropertyChanged("DIM1")
					Me.OnDIM1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIM2", DbType:="Float")>  _
		Public Property DIM2() As System.Nullable(Of Double)
			Get
				Return Me._DIM2
			End Get
			Set
				If (Me._DIM2.Equals(value) = false) Then
					Me.OnDIM2Changing(value)
					Me.SendPropertyChanging
					Me._DIM2 = value
					Me.SendPropertyChanged("DIM2")
					Me.OnDIM2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIM3", DbType:="Float")>  _
		Public Property DIM3() As System.Nullable(Of Double)
			Get
				Return Me._DIM3
			End Get
			Set
				If (Me._DIM3.Equals(value) = false) Then
					Me.OnDIM3Changing(value)
					Me.SendPropertyChanging
					Me._DIM3 = value
					Me.SendPropertyChanged("DIM3")
					Me.OnDIM3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIMMD", DbType:="SmallInt NOT NULL")>  _
		Public Property DIMMD() As Short
			Get
				Return Me._DIMMD
			End Get
			Set
				If ((Me._DIMMD = value)  _
							= false) Then
					Me.OnDIMMDChanging(value)
					Me.SendPropertyChanging
					Me._DIMMD = value
					Me.SendPropertyChanged("DIMMD")
					Me.OnDIMMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIMMTRUNIT", DbType:="SmallInt NOT NULL")>  _
		Public Property DIMMTRUNIT() As Short
			Get
				Return Me._DIMMTRUNIT
			End Get
			Set
				If ((Me._DIMMTRUNIT = value)  _
							= false) Then
					Me.OnDIMMTRUNITChanging(value)
					Me.SendPropertyChanging
					Me._DIMMTRUNIT = value
					Me.SendPropertyChanged("DIMMTRUNIT")
					Me.OnDIMMTRUNITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALQTY", DbType:="Float")>  _
		Public Property SALQTY() As System.Nullable(Of Double)
			Get
				Return Me._SALQTY
			End Get
			Set
				If (Me._SALQTY.Equals(value) = false) Then
					Me.OnSALQTYChanging(value)
					Me.SendPropertyChanging
					Me._SALQTY = value
					Me.SendPropertyChanged("SALQTY")
					Me.OnSALQTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURQTY", DbType:="Float")>  _
		Public Property PURQTY() As System.Nullable(Of Double)
			Get
				Return Me._PURQTY
			End Get
			Set
				If (Me._PURQTY.Equals(value) = false) Then
					Me.OnPURQTYChanging(value)
					Me.SendPropertyChanging
					Me._PURQTY = value
					Me.SendPropertyChanged("PURQTY")
					Me.OnPURQTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEQTY", DbType:="Float")>  _
		Public Property ITEQTY() As System.Nullable(Of Double)
			Get
				Return Me._ITEQTY
			End Get
			Set
				If (Me._ITEQTY.Equals(value) = false) Then
					Me.OnITEQTYChanging(value)
					Me.SendPropertyChanging
					Me._ITEQTY = value
					Me.SendPropertyChanged("ITEQTY")
					Me.OnITEQTYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FROMVAL", DbType:="SmallInt NOT NULL")>  _
		Public Property FROMVAL() As Short
			Get
				Return Me._FROMVAL
			End Get
			Set
				If ((Me._FROMVAL = value)  _
							= false) Then
					Me.OnFROMVALChanging(value)
					Me.SendPropertyChanging
					Me._FROMVAL = value
					Me.SendPropertyChanged("FROMVAL")
					Me.OnFROMVALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODISCOUNT", DbType:="Float")>  _
		Public Property SODISCOUNT() As System.Nullable(Of Double)
			Get
				Return Me._SODISCOUNT
			End Get
			Set
				If (Me._SODISCOUNT.Equals(value) = false) Then
					Me.OnSODISCOUNTChanging(value)
					Me.SendPropertyChanging
					Me._SODISCOUNT = value
					Me.SendPropertyChanged("SODISCOUNT")
					Me.OnSODISCOUNTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODISCOUNT1", DbType:="Float")>  _
		Public Property SODISCOUNT1() As System.Nullable(Of Double)
			Get
				Return Me._SODISCOUNT1
			End Get
			Set
				If (Me._SODISCOUNT1.Equals(value) = false) Then
					Me.OnSODISCOUNT1Changing(value)
					Me.SendPropertyChanging
					Me._SODISCOUNT1 = value
					Me.SendPropertyChanged("SODISCOUNT1")
					Me.OnSODISCOUNT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODISCOUNT2", DbType:="Float")>  _
		Public Property SODISCOUNT2() As System.Nullable(Of Double)
			Get
				Return Me._SODISCOUNT2
			End Get
			Set
				If (Me._SODISCOUNT2.Equals(value) = false) Then
					Me.OnSODISCOUNT2Changing(value)
					Me.SendPropertyChanging
					Me._SODISCOUNT2 = value
					Me.SendPropertyChanged("SODISCOUNT2")
					Me.OnSODISCOUNT2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAXPRCDISC", DbType:="Float")>  _
		Public Property MAXPRCDISC() As System.Nullable(Of Double)
			Get
				Return Me._MAXPRCDISC
			End Get
			Set
				If (Me._MAXPRCDISC.Equals(value) = false) Then
					Me.OnMAXPRCDISCChanging(value)
					Me.SendPropertyChanging
					Me._MAXPRCDISC = value
					Me.SendPropertyChanged("MAXPRCDISC")
					Me.OnMAXPRCDISCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MINPRCMK", DbType:="Float")>  _
		Public Property MINPRCMK() As System.Nullable(Of Double)
			Get
				Return Me._MINPRCMK
			End Get
			Set
				If (Me._MINPRCMK.Equals(value) = false) Then
					Me.OnMINPRCMKChanging(value)
					Me.SendPropertyChanging
					Me._MINPRCMK = value
					Me.SendPropertyChanged("MINPRCMK")
					Me.OnMINPRCMKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHKMAXPRCDISC", DbType:="SmallInt NOT NULL")>  _
		Public Property CHKMAXPRCDISC() As Short
			Get
				Return Me._CHKMAXPRCDISC
			End Get
			Set
				If ((Me._CHKMAXPRCDISC = value)  _
							= false) Then
					Me.OnCHKMAXPRCDISCChanging(value)
					Me.SendPropertyChanging
					Me._CHKMAXPRCDISC = value
					Me.SendPropertyChanged("CHKMAXPRCDISC")
					Me.OnCHKMAXPRCDISCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CALCONCREDIT", DbType:="SmallInt NOT NULL")>  _
		Public Property CALCONCREDIT() As Short
			Get
				Return Me._CALCONCREDIT
			End Get
			Set
				If ((Me._CALCONCREDIT = value)  _
							= false) Then
					Me.OnCALCONCREDITChanging(value)
					Me.SendPropertyChanging
					Me._CALCONCREDIT = value
					Me.SendPropertyChanged("CALCONCREDIT")
					Me.OnCALCONCREDITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPLPUR", DbType:="SmallInt NOT NULL")>  _
		Public Property REPLPUR() As Short
			Get
				Return Me._REPLPUR
			End Get
			Set
				If ((Me._REPLPUR = value)  _
							= false) Then
					Me.OnREPLPURChanging(value)
					Me.SendPropertyChanging
					Me._REPLPUR = value
					Me.SendPropertyChanged("REPLPUR")
					Me.OnREPLPURChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPLSAL", DbType:="SmallInt NOT NULL")>  _
		Public Property REPLSAL() As Short
			Get
				Return Me._REPLSAL
			End Get
			Set
				If ((Me._REPLSAL = value)  _
							= false) Then
					Me.OnREPLSALChanging(value)
					Me.SendPropertyChanging
					Me._REPLSAL = value
					Me.SendPropertyChanged("REPLSAL")
					Me.OnREPLSALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPLITE", DbType:="SmallInt NOT NULL")>  _
		Public Property REPLITE() As Short
			Get
				Return Me._REPLITE
			End Get
			Set
				If ((Me._REPLITE = value)  _
							= false) Then
					Me.OnREPLITEChanging(value)
					Me.SendPropertyChanging
					Me._REPLITE = value
					Me.SendPropertyChanged("REPLITE")
					Me.OnREPLITEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCS", DbType:="Int")>  _
		Public Property SPCS() As System.Nullable(Of Integer)
			Get
				Return Me._SPCS
			End Get
			Set
				If (Me._SPCS.Equals(value) = false) Then
					Me.OnSPCSChanging(value)
					Me.SendPropertyChanging
					Me._SPCS = value
					Me.SendPropertyChanged("SPCS")
					Me.OnSPCSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPCITESRV", DbType:="Int")>  _
		Public Property SPCITESRV() As System.Nullable(Of Integer)
			Get
				Return Me._SPCITESRV
			End Get
			Set
				If (Me._SPCITESRV.Equals(value) = false) Then
					Me.OnSPCITESRVChanging(value)
					Me.SendPropertyChanging
					Me._SPCITESRV = value
					Me.SendPropertyChanged("SPCITESRV")
					Me.OnSPCITESRVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTOUPDPUR", DbType:="SmallInt NOT NULL")>  _
		Public Property AUTOUPDPUR() As Short
			Get
				Return Me._AUTOUPDPUR
			End Get
			Set
				If ((Me._AUTOUPDPUR = value)  _
							= false) Then
					Me.OnAUTOUPDPURChanging(value)
					Me.SendPropertyChanging
					Me._AUTOUPDPUR = value
					Me.SendPropertyChanged("AUTOUPDPUR")
					Me.OnAUTOUPDPURChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTOUPDSAL", DbType:="SmallInt NOT NULL")>  _
		Public Property AUTOUPDSAL() As Short
			Get
				Return Me._AUTOUPDSAL
			End Get
			Set
				If ((Me._AUTOUPDSAL = value)  _
							= false) Then
					Me.OnAUTOUPDSALChanging(value)
					Me.SendPropertyChanging
					Me._AUTOUPDSAL = value
					Me.SendPropertyChanged("AUTOUPDSAL")
					Me.OnAUTOUPDSALChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTOUPDITE", DbType:="SmallInt NOT NULL")>  _
		Public Property AUTOUPDITE() As Short
			Get
				Return Me._AUTOUPDITE
			End Get
			Set
				If ((Me._AUTOUPDITE = value)  _
							= false) Then
					Me.OnAUTOUPDITEChanging(value)
					Me.SendPropertyChanging
					Me._AUTOUPDITE = value
					Me.SendPropertyChanged("AUTOUPDITE")
					Me.OnAUTOUPDITEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINTPURMD", DbType:="SmallInt NOT NULL")>  _
		Public Property PRINTPURMD() As Short
			Get
				Return Me._PRINTPURMD
			End Get
			Set
				If ((Me._PRINTPURMD = value)  _
							= false) Then
					Me.OnPRINTPURMDChanging(value)
					Me.SendPropertyChanging
					Me._PRINTPURMD = value
					Me.SendPropertyChanged("PRINTPURMD")
					Me.OnPRINTPURMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINTSALMD", DbType:="SmallInt NOT NULL")>  _
		Public Property PRINTSALMD() As Short
			Get
				Return Me._PRINTSALMD
			End Get
			Set
				If ((Me._PRINTSALMD = value)  _
							= false) Then
					Me.OnPRINTSALMDChanging(value)
					Me.SendPropertyChanging
					Me._PRINTSALMD = value
					Me.SendPropertyChanged("PRINTSALMD")
					Me.OnPRINTSALMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINTITEMD", DbType:="SmallInt NOT NULL")>  _
		Public Property PRINTITEMD() As Short
			Get
				Return Me._PRINTITEMD
			End Get
			Set
				If ((Me._PRINTITEMD = value)  _
							= false) Then
					Me.OnPRINTITEMDChanging(value)
					Me.SendPropertyChanging
					Me._PRINTITEMD = value
					Me.SendPropertyChanged("PRINTITEMD")
					Me.OnPRINTITEMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIQSUB", DbType:="SmallInt NOT NULL")>  _
		Public Property UNIQSUB() As Short
			Get
				Return Me._UNIQSUB
			End Get
			Set
				If ((Me._UNIQSUB = value)  _
							= false) Then
					Me.OnUNIQSUBChanging(value)
					Me.SendPropertyChanging
					Me._UNIQSUB = value
					Me.SendPropertyChanged("UNIQSUB")
					Me.OnUNIQSUBChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOTCODEMASK", DbType:="VarChar(30)")>  _
		Public Property LOTCODEMASK() As String
			Get
				Return Me._LOTCODEMASK
			End Get
			Set
				If (String.Equals(Me._LOTCODEMASK, value) = false) Then
					Me.OnLOTCODEMASKChanging(value)
					Me.SendPropertyChanging
					Me._LOTCODEMASK = value
					Me.SendPropertyChanged("LOTCODEMASK")
					Me.OnLOTCODEMASKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLOTUSE", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRLOTUSE() As Short
			Get
				Return Me._MTRLOTUSE
			End Get
			Set
				If ((Me._MTRLOTUSE = value)  _
							= false) Then
					Me.OnMTRLOTUSEChanging(value)
					Me.SendPropertyChanging
					Me._MTRLOTUSE = value
					Me.SendPropertyChanged("MTRLOTUSE")
					Me.OnMTRLOTUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRSNUSE", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRSNUSE() As Short
			Get
				Return Me._MTRSNUSE
			End Get
			Set
				If ((Me._MTRSNUSE = value)  _
							= false) Then
					Me.OnMTRSNUSEChanging(value)
					Me.SendPropertyChanging
					Me._MTRSNUSE = value
					Me.SendPropertyChanged("MTRSNUSE")
					Me.OnMTRSNUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SNCODEMSK", DbType:="VarChar(50)")>  _
		Public Property SNCODEMSK() As String
			Get
				Return Me._SNCODEMSK
			End Get
			Set
				If (String.Equals(Me._SNCODEMSK, value) = false) Then
					Me.OnSNCODEMSKChanging(value)
					Me.SendPropertyChanging
					Me._SNCODEMSK = value
					Me.SendPropertyChanged("SNCODEMSK")
					Me.OnSNCODEMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISTOTSRVCARD", DbType:="SmallInt NOT NULL")>  _
		Public Property ISTOTSRVCARD() As Short
			Get
				Return Me._ISTOTSRVCARD
			End Get
			Set
				If ((Me._ISTOTSRVCARD = value)  _
							= false) Then
					Me.OnISTOTSRVCARDChanging(value)
					Me.SendPropertyChanging
					Me._ISTOTSRVCARD = value
					Me.SendPropertyChanged("ISTOTSRVCARD")
					Me.OnISTOTSRVCARDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRTHIRD", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRTHIRD() As Short
			Get
				Return Me._MTRTHIRD
			End Get
			Set
				If ((Me._MTRTHIRD = value)  _
							= false) Then
					Me.OnMTRTHIRDChanging(value)
					Me.SendPropertyChanging
					Me._MTRTHIRD = value
					Me.SendPropertyChanged("MTRTHIRD")
					Me.OnMTRTHIRDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USESTBIN", DbType:="SmallInt NOT NULL")>  _
		Public Property USESTBIN() As Short
			Get
				Return Me._USESTBIN
			End Get
			Set
				If ((Me._USESTBIN = value)  _
							= false) Then
					Me.OnUSESTBINChanging(value)
					Me.SendPropertyChanging
					Me._USESTBIN = value
					Me.SendPropertyChanged("USESTBIN")
					Me.OnUSESTBINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRONORDER", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRONORDER() As Short
			Get
				Return Me._MTRONORDER
			End Get
			Set
				If ((Me._MTRONORDER = value)  _
							= false) Then
					Me.OnMTRONORDERChanging(value)
					Me.SendPropertyChanging
					Me._MTRONORDER = value
					Me.SendPropertyChanged("MTRONORDER")
					Me.OnMTRONORDERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TURNOVR", DbType:="SmallInt NOT NULL")>  _
		Public Property TURNOVR() As Short
			Get
				Return Me._TURNOVR
			End Get
			Set
				If ((Me._TURNOVR = value)  _
							= false) Then
					Me.OnTURNOVRChanging(value)
					Me.SendPropertyChanging
					Me._TURNOVR = value
					Me.SendPropertyChanged("TURNOVR")
					Me.OnTURNOVRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SETITEM", DbType:="VarChar(255)")>  _
		Public Property SETITEM() As String
			Get
				Return Me._SETITEM
			End Get
			Set
				If (String.Equals(Me._SETITEM, value) = false) Then
					Me.OnSETITEMChanging(value)
					Me.SendPropertyChanging
					Me._SETITEM = value
					Me.SendPropertyChanged("SETITEM")
					Me.OnSETITEMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPLPRICE", DbType:="Float")>  _
		Public Property REPLPRICE() As System.Nullable(Of Double)
			Get
				Return Me._REPLPRICE
			End Get
			Set
				If (Me._REPLPRICE.Equals(value) = false) Then
					Me.OnREPLPRICEChanging(value)
					Me.SendPropertyChanging
					Me._REPLPRICE = value
					Me.SendPropertyChanged("REPLPRICE")
					Me.OnREPLPRICEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPLEXP", DbType:="Float")>  _
		Public Property REPLEXP() As System.Nullable(Of Double)
			Get
				Return Me._REPLEXP
			End Get
			Set
				If (Me._REPLEXP.Equals(value) = false) Then
					Me.OnREPLEXPChanging(value)
					Me.SendPropertyChanging
					Me._REPLEXP = value
					Me.SendPropertyChanged("REPLEXP")
					Me.OnREPLEXPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRRPLCODE", DbType:="Int")>  _
		Public Property MTRRPLCODE() As System.Nullable(Of Integer)
			Get
				Return Me._MTRRPLCODE
			End Get
			Set
				If (Me._MTRRPLCODE.Equals(value) = false) Then
					Me.OnMTRRPLCODEChanging(value)
					Me.SendPropertyChanging
					Me._MTRRPLCODE = value
					Me.SendPropertyChanged("MTRRPLCODE")
					Me.OnMTRRPLCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRCUS", DbType:="Int")>  _
		Public Property MTRCUS() As System.Nullable(Of Integer)
			Get
				Return Me._MTRCUS
			End Get
			Set
				If (Me._MTRCUS.Equals(value) = false) Then
					Me.OnMTRCUSChanging(value)
					Me.SendPropertyChanging
					Me._MTRCUS = value
					Me.SendPropertyChanged("MTRCUS")
					Me.OnMTRCUSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRSUP", DbType:="Int")>  _
		Public Property MTRSUP() As System.Nullable(Of Integer)
			Get
				Return Me._MTRSUP
			End Get
			Set
				If (Me._MTRSUP.Equals(value) = false) Then
					Me.OnMTRSUPChanging(value)
					Me.SendPropertyChanging
					Me._MTRSUP = value
					Me.SendPropertyChanged("MTRSUP")
					Me.OnMTRSUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRSUPBRANCH", DbType:="Int")>  _
		Public Property MTRSUPBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._MTRSUPBRANCH
			End Get
			Set
				If (Me._MTRSUPBRANCH.Equals(value) = false) Then
					Me.OnMTRSUPBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._MTRSUPBRANCH = value
					Me.SendPropertyChanged("MTRSUPBRANCH")
					Me.OnMTRSUPBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMAINLIMMIN", DbType:="Float")>  _
		Public Property REMAINLIMMIN() As System.Nullable(Of Double)
			Get
				Return Me._REMAINLIMMIN
			End Get
			Set
				If (Me._REMAINLIMMIN.Equals(value) = false) Then
					Me.OnREMAINLIMMINChanging(value)
					Me.SendPropertyChanging
					Me._REMAINLIMMIN = value
					Me.SendPropertyChanged("REMAINLIMMIN")
					Me.OnREMAINLIMMINChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMAINLIMMAX", DbType:="Float")>  _
		Public Property REMAINLIMMAX() As System.Nullable(Of Double)
			Get
				Return Me._REMAINLIMMAX
			End Get
			Set
				If (Me._REMAINLIMMAX.Equals(value) = false) Then
					Me.OnREMAINLIMMAXChanging(value)
					Me.SendPropertyChanging
					Me._REMAINLIMMAX = value
					Me.SendPropertyChanged("REMAINLIMMAX")
					Me.OnREMAINLIMMAXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REORDERLEVEL", DbType:="Float")>  _
		Public Property REORDERLEVEL() As System.Nullable(Of Double)
			Get
				Return Me._REORDERLEVEL
			End Get
			Set
				If (Me._REORDERLEVEL.Equals(value) = false) Then
					Me.OnREORDERLEVELChanging(value)
					Me.SendPropertyChanging
					Me._REORDERLEVEL = value
					Me.SendPropertyChanged("REORDERLEVEL")
					Me.OnREORDERLEVELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPN1", DbType:="SmallInt")>  _
		Public Property EXPN1() As System.Nullable(Of Short)
			Get
				Return Me._EXPN1
			End Get
			Set
				If (Me._EXPN1.Equals(value) = false) Then
					Me.OnEXPN1Changing(value)
					Me.SendPropertyChanging
					Me._EXPN1 = value
					Me.SendPropertyChanged("EXPN1")
					Me.OnEXPN1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPN2", DbType:="SmallInt")>  _
		Public Property EXPN2() As System.Nullable(Of Short)
			Get
				Return Me._EXPN2
			End Get
			Set
				If (Me._EXPN2.Equals(value) = false) Then
					Me.OnEXPN2Changing(value)
					Me.SendPropertyChanging
					Me._EXPN2 = value
					Me.SendPropertyChanged("EXPN2")
					Me.OnEXPN2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPN3", DbType:="SmallInt")>  _
		Public Property EXPN3() As System.Nullable(Of Short)
			Get
				Return Me._EXPN3
			End Get
			Set
				If (Me._EXPN3.Equals(value) = false) Then
					Me.OnEXPN3Changing(value)
					Me.SendPropertyChanging
					Me._EXPN3 = value
					Me.SendPropertyChanged("EXPN3")
					Me.OnEXPN3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPN4", DbType:="SmallInt")>  _
		Public Property EXPN4() As System.Nullable(Of Short)
			Get
				Return Me._EXPN4
			End Get
			Set
				If (Me._EXPN4.Equals(value) = false) Then
					Me.OnEXPN4Changing(value)
					Me.SendPropertyChanging
					Me._EXPN4 = value
					Me.SendPropertyChanged("EXPN4")
					Me.OnEXPN4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPN5", DbType:="SmallInt")>  _
		Public Property EXPN5() As System.Nullable(Of Short)
			Get
				Return Me._EXPN5
			End Get
			Set
				If (Me._EXPN5.Equals(value) = false) Then
					Me.OnEXPN5Changing(value)
					Me.SendPropertyChanging
					Me._EXPN5 = value
					Me.SendPropertyChanged("EXPN5")
					Me.OnEXPN5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPVAL1", DbType:="Float")>  _
		Public Property EXPVAL1() As System.Nullable(Of Double)
			Get
				Return Me._EXPVAL1
			End Get
			Set
				If (Me._EXPVAL1.Equals(value) = false) Then
					Me.OnEXPVAL1Changing(value)
					Me.SendPropertyChanging
					Me._EXPVAL1 = value
					Me.SendPropertyChanged("EXPVAL1")
					Me.OnEXPVAL1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPVAL2", DbType:="Float")>  _
		Public Property EXPVAL2() As System.Nullable(Of Double)
			Get
				Return Me._EXPVAL2
			End Get
			Set
				If (Me._EXPVAL2.Equals(value) = false) Then
					Me.OnEXPVAL2Changing(value)
					Me.SendPropertyChanging
					Me._EXPVAL2 = value
					Me.SendPropertyChanged("EXPVAL2")
					Me.OnEXPVAL2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPVAL3", DbType:="Float")>  _
		Public Property EXPVAL3() As System.Nullable(Of Double)
			Get
				Return Me._EXPVAL3
			End Get
			Set
				If (Me._EXPVAL3.Equals(value) = false) Then
					Me.OnEXPVAL3Changing(value)
					Me.SendPropertyChanging
					Me._EXPVAL3 = value
					Me.SendPropertyChanged("EXPVAL3")
					Me.OnEXPVAL3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPVAL4", DbType:="Float")>  _
		Public Property EXPVAL4() As System.Nullable(Of Double)
			Get
				Return Me._EXPVAL4
			End Get
			Set
				If (Me._EXPVAL4.Equals(value) = false) Then
					Me.OnEXPVAL4Changing(value)
					Me.SendPropertyChanging
					Me._EXPVAL4 = value
					Me.SendPropertyChanged("EXPVAL4")
					Me.OnEXPVAL4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPVAL5", DbType:="Float")>  _
		Public Property EXPVAL5() As System.Nullable(Of Double)
			Get
				Return Me._EXPVAL5
			End Get
			Set
				If (Me._EXPVAL5.Equals(value) = false) Then
					Me.OnEXPVAL5Changing(value)
					Me.SendPropertyChanging
					Me._EXPVAL5 = value
					Me.SendPropertyChanged("EXPVAL5")
					Me.OnEXPVAL5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LISOURCETYPE", DbType:="VarChar(24)")>  _
		Public Property LISOURCETYPE() As String
			Get
				Return Me._LISOURCETYPE
			End Get
			Set
				If (String.Equals(Me._LISOURCETYPE, value) = false) Then
					Me.OnLISOURCETYPEChanging(value)
					Me.SendPropertyChanging
					Me._LISOURCETYPE = value
					Me.SendPropertyChanged("LISOURCETYPE")
					Me.OnLISOURCETYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCLMNS", DbType:="SmallInt")>  _
		Public Property SOCLMNS() As System.Nullable(Of Short)
			Get
				Return Me._SOCLMNS
			End Get
			Set
				If (Me._SOCLMNS.Equals(value) = false) Then
					Me.OnSOCLMNSChanging(value)
					Me.SendPropertyChanging
					Me._SOCLMNS = value
					Me.SendPropertyChanged("SOCLMNS")
					Me.OnSOCLMNSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCLMNS1", DbType:="SmallInt")>  _
		Public Property SOCLMNS1() As System.Nullable(Of Short)
			Get
				Return Me._SOCLMNS1
			End Get
			Set
				If (Me._SOCLMNS1.Equals(value) = false) Then
					Me.OnSOCLMNS1Changing(value)
					Me.SendPropertyChanging
					Me._SOCLMNS1 = value
					Me.SendPropertyChanged("SOCLMNS1")
					Me.OnSOCLMNS1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRPRJCBLD", DbType:="SmallInt")>  _
		Public Property MTRPRJCBLD() As System.Nullable(Of Short)
			Get
				Return Me._MTRPRJCBLD
			End Get
			Set
				If (Me._MTRPRJCBLD.Equals(value) = false) Then
					Me.OnMTRPRJCBLDChanging(value)
					Me.SendPropertyChanging
					Me._MTRPRJCBLD = value
					Me.SendPropertyChanged("MTRPRJCBLD")
					Me.OnMTRPRJCBLDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOEXPTYPE", DbType:="SmallInt")>  _
		Public Property SOEXPTYPE() As System.Nullable(Of Short)
			Get
				Return Me._SOEXPTYPE
			End Get
			Set
				If (Me._SOEXPTYPE.Equals(value) = false) Then
					Me.OnSOEXPTYPEChanging(value)
					Me.SendPropertyChanging
					Me._SOEXPTYPE = value
					Me.SendPropertyChanged("SOEXPTYPE")
					Me.OnSOEXPTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SXMSKK", DbType:="Int")>  _
		Public Property SXMSKK() As System.Nullable(Of Integer)
			Get
				Return Me._SXMSKK
			End Get
			Set
				If (Me._SXMSKK.Equals(value) = false) Then
					Me.OnSXMSKKChanging(value)
					Me.SendPropertyChanging
					Me._SXMSKK = value
					Me.SendPropertyChanged("SXMSKK")
					Me.OnSXMSKKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRDLEVEL", DbType:="SmallInt")>  _
		Public Property PRDLEVEL() As System.Nullable(Of Short)
			Get
				Return Me._PRDLEVEL
			End Get
			Set
				If (Me._PRDLEVEL.Equals(value) = false) Then
					Me.OnPRDLEVELChanging(value)
					Me.SendPropertyChanging
					Me._PRDLEVEL = value
					Me.SendPropertyChanged("PRDLEVEL")
					Me.OnPRDLEVELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(2000)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRPACK", DbType:="Int")>  _
		Public Property MTRPACK() As System.Nullable(Of Integer)
			Get
				Return Me._MTRPACK
			End Get
			Set
				If (Me._MTRPACK.Equals(value) = false) Then
					Me.OnMTRPACKChanging(value)
					Me.SendPropertyChanging
					Me._MTRPACK = value
					Me.SendPropertyChanged("MTRPACK")
					Me.OnMTRPACKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIMCATEG1", DbType:="SmallInt")>  _
		Public Property CDIMCATEG1() As System.Nullable(Of Short)
			Get
				Return Me._CDIMCATEG1
			End Get
			Set
				If (Me._CDIMCATEG1.Equals(value) = false) Then
					Me.OnCDIMCATEG1Changing(value)
					Me.SendPropertyChanging
					Me._CDIMCATEG1 = value
					Me.SendPropertyChanged("CDIMCATEG1")
					Me.OnCDIMCATEG1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIM1", DbType:="Int")>  _
		Public Property CDIM1() As System.Nullable(Of Integer)
			Get
				Return Me._CDIM1
			End Get
			Set
				If (Me._CDIM1.Equals(value) = false) Then
					Me.OnCDIM1Changing(value)
					Me.SendPropertyChanging
					Me._CDIM1 = value
					Me.SendPropertyChanged("CDIM1")
					Me.OnCDIM1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIMCATEG2", DbType:="SmallInt")>  _
		Public Property CDIMCATEG2() As System.Nullable(Of Short)
			Get
				Return Me._CDIMCATEG2
			End Get
			Set
				If (Me._CDIMCATEG2.Equals(value) = false) Then
					Me.OnCDIMCATEG2Changing(value)
					Me.SendPropertyChanging
					Me._CDIMCATEG2 = value
					Me.SendPropertyChanged("CDIMCATEG2")
					Me.OnCDIMCATEG2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIM2", DbType:="Int")>  _
		Public Property CDIM2() As System.Nullable(Of Integer)
			Get
				Return Me._CDIM2
			End Get
			Set
				If (Me._CDIM2.Equals(value) = false) Then
					Me.OnCDIM2Changing(value)
					Me.SendPropertyChanging
					Me._CDIM2 = value
					Me.SendPropertyChanged("CDIM2")
					Me.OnCDIM2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIMCATEG3", DbType:="SmallInt")>  _
		Public Property CDIMCATEG3() As System.Nullable(Of Short)
			Get
				Return Me._CDIMCATEG3
			End Get
			Set
				If (Me._CDIMCATEG3.Equals(value) = false) Then
					Me.OnCDIMCATEG3Changing(value)
					Me.SendPropertyChanging
					Me._CDIMCATEG3 = value
					Me.SendPropertyChanged("CDIMCATEG3")
					Me.OnCDIMCATEG3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIM3", DbType:="Int")>  _
		Public Property CDIM3() As System.Nullable(Of Integer)
			Get
				Return Me._CDIM3
			End Get
			Set
				If (Me._CDIM3.Equals(value) = false) Then
					Me.OnCDIM3Changing(value)
					Me.SendPropertyChanging
					Me._CDIM3 = value
					Me.SendPropertyChanged("CDIM3")
					Me.OnCDIM3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIMLEVEL", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property CDIMLEVEL() As String
			Get
				Return Me._CDIMLEVEL
			End Get
			Set
				If (String.Equals(Me._CDIMLEVEL, value) = false) Then
					Me.OnCDIMLEVELChanging(value)
					Me.SendPropertyChanging
					Me._CDIMLEVEL = value
					Me.SendPropertyChanged("CDIMLEVEL")
					Me.OnCDIMLEVELChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRDEFWHS", DbType:="VarChar(1000)")>  _
		Public Property MTRDEFWHS() As String
			Get
				Return Me._MTRDEFWHS
			End Get
			Set
				If (String.Equals(Me._MTRDEFWHS, value) = false) Then
					Me.OnMTRDEFWHSChanging(value)
					Me.SendPropertyChanging
					Me._MTRDEFWHS = value
					Me.SendPropertyChanged("MTRDEFWHS")
					Me.OnMTRDEFWHSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VISITUNIT", DbType:="SmallInt")>  _
		Public Property VISITUNIT() As System.Nullable(Of Short)
			Get
				Return Me._VISITUNIT
			End Get
			Set
				If (Me._VISITUNIT.Equals(value) = false) Then
					Me.OnVISITUNITChanging(value)
					Me.SendPropertyChanging
					Me._VISITUNIT = value
					Me.SendPropertyChanged("VISITUNIT")
					Me.OnVISITUNITChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VISITNUM", DbType:="Float")>  _
		Public Property VISITNUM() As System.Nullable(Of Double)
			Get
				Return Me._VISITNUM
			End Get
			Set
				If (Me._VISITNUM.Equals(value) = false) Then
					Me.OnVISITNUMChanging(value)
					Me.SendPropertyChanging
					Me._VISITNUM = value
					Me.SendPropertyChanged("VISITNUM")
					Me.OnVISITNUMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATMTRL", DbType:="Int")>  _
		Public Property VATMTRL() As System.Nullable(Of Integer)
			Get
				Return Me._VATMTRL
			End Get
			Set
				If (Me._VATMTRL.Equals(value) = false) Then
					Me.OnVATMTRLChanging(value)
					Me.SendPropertyChanging
					Me._VATMTRL = value
					Me.SendPropertyChanged("VATMTRL")
					Me.OnVATMTRLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKS", DbType:="VarChar(25)")>  _
		Public Property ACNMSKS() As String
			Get
				Return Me._ACNMSKS
			End Get
			Set
				If (String.Equals(Me._ACNMSKS, value) = false) Then
					Me.OnACNMSKSChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKS = value
					Me.SendPropertyChanged("ACNMSKS")
					Me.OnACNMSKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKX", DbType:="VarChar(25)")>  _
		Public Property ACNMSKX() As String
			Get
				Return Me._ACNMSKX
			End Get
			Set
				If (String.Equals(Me._ACNMSKX, value) = false) Then
					Me.OnACNMSKXChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKX = value
					Me.SendPropertyChanged("ACNMSKX")
					Me.OnACNMSKXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKSXD", DbType:="VarChar(25)")>  _
		Public Property ACNMSKSXD() As String
			Get
				Return Me._ACNMSKSXD
			End Get
			Set
				If (String.Equals(Me._ACNMSKSXD, value) = false) Then
					Me.OnACNMSKSXDChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKSXD = value
					Me.SendPropertyChanged("ACNMSKSXD")
					Me.OnACNMSKSXDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK9", DbType:="VarChar(25)")>  _
		Public Property ACNMSK9() As String
			Get
				Return Me._ACNMSK9
			End Get
			Set
				If (String.Equals(Me._ACNMSK9, value) = false) Then
					Me.OnACNMSK9Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK9 = value
					Me.SendPropertyChanged("ACNMSK9")
					Me.OnACNMSK9Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GUARTIME", DbType:="SmallInt")>  _
		Public Property GUARTIME() As System.Nullable(Of Short)
			Get
				Return Me._GUARTIME
			End Get
			Set
				If (Me._GUARTIME.Equals(value) = false) Then
					Me.OnGUARTIMEChanging(value)
					Me.SendPropertyChanging
					Me._GUARTIME = value
					Me.SendPropertyChanged("GUARTIME")
					Me.OnGUARTIMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPAYVALUE", DbType:="SmallInt")>  _
		Public Property SOPAYVALUE() As System.Nullable(Of Short)
			Get
				Return Me._SOPAYVALUE
			End Get
			Set
				If (Me._SOPAYVALUE.Equals(value) = false) Then
					Me.OnSOPAYVALUEChanging(value)
					Me.SendPropertyChanging
					Me._SOPAYVALUE = value
					Me.SendPropertyChanged("SOPAYVALUE")
					Me.OnSOPAYVALUEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLA", DbType:="Int")>  _
		Public Property MTRLA() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLA
			End Get
			Set
				If (Me._MTRLA.Equals(value) = false) Then
					Me.OnMTRLAChanging(value)
					Me.SendPropertyChanging
					Me._MTRLA = value
					Me.SendPropertyChanged("MTRLA")
					Me.OnMTRLAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRLP", DbType:="Int")>  _
		Public Property MTRLP() As System.Nullable(Of Integer)
			Get
				Return Me._MTRLP
			End Get
			Set
				If (Me._MTRLP.Equals(value) = false) Then
					Me.OnMTRLPChanging(value)
					Me.SendPropertyChanging
					Me._MTRLP = value
					Me.SendPropertyChanged("MTRLP")
					Me.OnMTRLPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HASBAIL", DbType:="SmallInt NOT NULL")>  _
		Public Property HASBAIL() As Short
			Get
				Return Me._HASBAIL
			End Get
			Set
				If ((Me._HASBAIL = value)  _
							= false) Then
					Me.OnHASBAILChanging(value)
					Me.SendPropertyChanging
					Me._HASBAIL = value
					Me.SendPropertyChanged("HASBAIL")
					Me.OnHASBAILChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRENDFACTOR", DbType:="Float")>  _
		Public Property TRENDFACTOR() As System.Nullable(Of Double)
			Get
				Return Me._TRENDFACTOR
			End Get
			Set
				If (Me._TRENDFACTOR.Equals(value) = false) Then
					Me.OnTRENDFACTORChanging(value)
					Me.SendPropertyChanging
					Me._TRENDFACTOR = value
					Me.SendPropertyChanged("TRENDFACTOR")
					Me.OnTRENDFACTORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KADTAXIS", DbType:="Int")>  _
		Public Property KADTAXIS() As System.Nullable(Of Integer)
			Get
				Return Me._KADTAXIS
			End Get
			Set
				If (Me._KADTAXIS.Equals(value) = false) Then
					Me.OnKADTAXISChanging(value)
					Me.SendPropertyChanging
					Me._KADTAXIS = value
					Me.SendPropertyChanged("KADTAXIS")
					Me.OnKADTAXISChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNTYPE1", DbType:="SmallInt")>  _
		Public Property ACNTYPE1() As System.Nullable(Of Short)
			Get
				Return Me._ACNTYPE1
			End Get
			Set
				If (Me._ACNTYPE1.Equals(value) = false) Then
					Me.OnACNTYPE1Changing(value)
					Me.SendPropertyChanging
					Me._ACNTYPE1 = value
					Me.SendPropertyChanged("ACNTYPE1")
					Me.OnACNTYPE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCCode", DbType:="VarChar(25)")>  _
		Public Property ccCCode() As String
			Get
				Return Me._ccCCode
			End Get
			Set
				If (String.Equals(Me._ccCCode, value) = false) Then
					Me.OnccCCodeChanging(value)
					Me.SendPropertyChanging
					Me._ccCCode = value
					Me.SendPropertyChanged("ccCCode")
					Me.OnccCCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MYDATAVPRC", DbType:="SmallInt")>  _
		Public Property MYDATAVPRC() As System.Nullable(Of Short)
			Get
				Return Me._MYDATAVPRC
			End Get
			Set
				If (Me._MYDATAVPRC.Equals(value) = false) Then
					Me.OnMYDATAVPRCChanging(value)
					Me.SendPropertyChanging
					Me._MYDATAVPRC = value
					Me.SendPropertyChanged("MYDATAVPRC")
					Me.OnMYDATAVPRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MYDATACODE", DbType:="SmallInt")>  _
		Public Property MYDATACODE() As System.Nullable(Of Short)
			Get
				Return Me._MYDATACODE
			End Get
			Set
				If (Me._MYDATACODE.Equals(value) = false) Then
					Me.OnMYDATACODEChanging(value)
					Me.SendPropertyChanging
					Me._MYDATACODE = value
					Me.SendPropertyChanged("MYDATACODE")
					Me.OnMYDATACODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLASSTYPE", DbType:="Int")>  _
		Public Property CLASSTYPE() As System.Nullable(Of Integer)
			Get
				Return Me._CLASSTYPE
			End Get
			Set
				If (Me._CLASSTYPE.Equals(value) = false) Then
					Me.OnCLASSTYPEChanging(value)
					Me.SendPropertyChanging
					Me._CLASSTYPE = value
					Me.SendPropertyChanged("CLASSTYPE")
					Me.OnCLASSTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLASSCATEGORY", DbType:="Int")>  _
		Public Property CLASSCATEGORY() As System.Nullable(Of Integer)
			Get
				Return Me._CLASSCATEGORY
			End Get
			Set
				If (Me._CLASSCATEGORY.Equals(value) = false) Then
					Me.OnCLASSCATEGORYChanging(value)
					Me.SendPropertyChanging
					Me._CLASSCATEGORY = value
					Me.SendPropertyChanged("CLASSCATEGORY")
					Me.OnCLASSCATEGORYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCDescr", DbType:="VarChar(128)")>  _
		Public Property ccCDescr() As String
			Get
				Return Me._ccCDescr
			End Get
			Set
				If (String.Equals(Me._ccCDescr, value) = false) Then
					Me.OnccCDescrChanging(value)
					Me.SendPropertyChanging
					Me._ccCDescr = value
					Me.SendPropertyChanged("ccCDescr")
					Me.OnccCDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIMNUSE1", DbType:="VarChar(MAX)")>  _
		Public Property CDIMNUSE1() As String
			Get
				Return Me._CDIMNUSE1
			End Get
			Set
				If (String.Equals(Me._CDIMNUSE1, value) = false) Then
					Me.OnCDIMNUSE1Changing(value)
					Me.SendPropertyChanging
					Me._CDIMNUSE1 = value
					Me.SendPropertyChanged("CDIMNUSE1")
					Me.OnCDIMNUSE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIMNUSE2", DbType:="VarChar(MAX)")>  _
		Public Property CDIMNUSE2() As String
			Get
				Return Me._CDIMNUSE2
			End Get
			Set
				If (String.Equals(Me._CDIMNUSE2, value) = false) Then
					Me.OnCDIMNUSE2Changing(value)
					Me.SendPropertyChanging
					Me._CDIMNUSE2 = value
					Me.SendPropertyChanged("CDIMNUSE2")
					Me.OnCDIMNUSE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CDIMNUSE3", DbType:="VarChar(MAX)")>  _
		Public Property CDIMNUSE3() As String
			Get
				Return Me._CDIMNUSE3
			End Get
			Set
				If (String.Equals(Me._CDIMNUSE3, value) = false) Then
					Me.OnCDIMNUSE3Changing(value)
					Me.SendPropertyChanging
					Me._CDIMNUSE3 = value
					Me.SendPropertyChanged("CDIMNUSE3")
					Me.OnCDIMNUSE3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPAYCODE", DbType:="SmallInt")>  _
		Public Property SOPAYCODE() As System.Nullable(Of Short)
			Get
				Return Me._SOPAYCODE
			End Get
			Set
				If (Me._SOPAYCODE.Equals(value) = false) Then
					Me.OnSOPAYCODEChanging(value)
					Me.SendPropertyChanging
					Me._SOPAYCODE = value
					Me.SendPropertyChanged("SOPAYCODE")
					Me.OnSOPAYCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MTRL_MTRDOC", Storage:="_MTRDOCs", ThisKey:="MTRL", OtherKey:="MTRL")>  _
		Public Property MTRDOCs() As EntitySet(Of MTRDOC)
			Get
				Return Me._MTRDOCs
			End Get
			Set
				Me._MTRDOCs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MTRL_MTREXTRA", Storage:="_MTREXTRA", ThisKey:="MTRL", OtherKey:="MTRL", IsUnique:=true, IsForeignKey:=false)>  _
		Public Property MTREXTRA() As MTREXTRA
			Get
				Return Me._MTREXTRA.Entity
			End Get
			Set
				Dim previousValue As MTREXTRA = Me._MTREXTRA.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._MTREXTRA.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._MTREXTRA.Entity = Nothing
						previousValue.MTRL1 = Nothing
					End If
					Me._MTREXTRA.Entity = value
					If (Object.Equals(value, Nothing) = false) Then
						value.MTRL1 = Me
					End If
					Me.SendPropertyChanged("MTREXTRA")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MTRL_MTRLINE", Storage:="_MTRLINEs", ThisKey:="MTRL", OtherKey:="MTRL")>  _
		Public Property MTRLINEs() As EntitySet(Of MTRLINE)
			Get
				Return Me._MTRLINEs
			End Get
			Set
				Me._MTRLINEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VAT_MTRL", Storage:="_VAT1", ThisKey:="VAT", OtherKey:="VAT", IsForeignKey:=true)>  _
		Public Property VAT1() As VAT
			Get
				Return Me._VAT1.Entity
			End Get
			Set
				Dim previousValue As VAT = Me._VAT1.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._VAT1.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._VAT1.Entity = Nothing
						previousValue.MTRLs.Remove(Me)
					End If
					Me._VAT1.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.MTRLs.Add(Me)
						Me._VAT = value.VAT
					Else
						Me._VAT = CType(Nothing, Short)
					End If
					Me.SendPropertyChanged("VAT1")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_MTRDOCs(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.MTRL1 = Me
		End Sub
		
		Private Sub detach_MTRDOCs(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.MTRL1 = Nothing
		End Sub
		
		Private Sub attach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.MTRL1 = Me
		End Sub
		
		Private Sub detach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.MTRL1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BRANCH")>  _
	Partial Public Class BRANCH
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _BRANCH As Short
		
		Private _ISACTIVE As Short
		
		Private _SHORTCUT As String
		
		Private _NAME As String
		
		Private _CONTACT As String
		
		Private _ISCENTER As System.Nullable(Of Short)
		
		Private _IRSDATA As System.Nullable(Of Short)
		
		Private _ADDRESS As String
		
		Private _DISTRICT As String
		
		Private _CITY As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _ZIP As String
		
		Private _COUNTRY As System.Nullable(Of Short)
		
		Private _PHONE1 As String
		
		Private _PHONE2 As String
		
		Private _FAX As String
		
		Private _VATSTS As System.Nullable(Of Short)
		
		Private _VATPROVISIONS As System.Nullable(Of Short)
		
		Private _BUSUNITS As String
		
		Private _PRICEZONE As System.Nullable(Of Short)
		
		Private _FOLDER As System.Nullable(Of Short)
		
		Private _PAYADVTOBRN As Short
		
		Private _BNVSERIES As System.Nullable(Of Short)
		
		Private _ACNMSK As String
		
		Private _ACNMSK1 As String
		
		Private _ACNMSK2 As String
		
		Private _RETAILCODE As String
		
		Private _ACNMSKS As String
		
		Private _ACNMSKX As String
		
		Private _OLAFM As String
		
		Private _REMARKS As String
		
		Private _SEPEBRANCH As String
		
		Private _OAEDBRANCH As String
		
		Private _HOLIDAYJRNL As String
		
		Private _KADTAXIS As System.Nullable(Of Integer)
		
		Private _MYDATACODE As System.Nullable(Of Short)
		
		Private _LATITUDE As System.Nullable(Of Double)
		
		Private _LONGITUDE As System.Nullable(Of Double)
		
		Private _WHOUSES As String
		
		Private _SURFACE As System.Nullable(Of Double)
		
		Private _VOLUME As System.Nullable(Of Double)
		
		Private _SLENGTH As System.Nullable(Of Double)
		
		Private _MTRDOCs As EntitySet(Of MTRDOC)
		
		Private _SERIES As EntitySet(Of SERIES)
		
		Private _SERIES1 As EntitySet(Of SERIES)
		
		Private _FINDOCs As EntitySet(Of FINDOC)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnBRANCHChanging(value As Short)
    End Sub
    Partial Private Sub OnBRANCHChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnSHORTCUTChanging(value As String)
    End Sub
    Partial Private Sub OnSHORTCUTChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnCONTACTChanging(value As String)
    End Sub
    Partial Private Sub OnCONTACTChanged()
    End Sub
    Partial Private Sub OnISCENTERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnISCENTERChanged()
    End Sub
    Partial Private Sub OnIRSDATAChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnIRSDATAChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnDISTRICT1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDISTRICT1Changed()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnPHONE1Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE1Changed()
    End Sub
    Partial Private Sub OnPHONE2Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE2Changed()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnVATSTSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATSTSChanged()
    End Sub
    Partial Private Sub OnVATPROVISIONSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnVATPROVISIONSChanged()
    End Sub
    Partial Private Sub OnBUSUNITSChanging(value As String)
    End Sub
    Partial Private Sub OnBUSUNITSChanged()
    End Sub
    Partial Private Sub OnPRICEZONEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPRICEZONEChanged()
    End Sub
    Partial Private Sub OnFOLDERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFOLDERChanged()
    End Sub
    Partial Private Sub OnPAYADVTOBRNChanging(value As Short)
    End Sub
    Partial Private Sub OnPAYADVTOBRNChanged()
    End Sub
    Partial Private Sub OnBNVSERIESChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnBNVSERIESChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnACNMSK1Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK1Changed()
    End Sub
    Partial Private Sub OnACNMSK2Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK2Changed()
    End Sub
    Partial Private Sub OnRETAILCODEChanging(value As String)
    End Sub
    Partial Private Sub OnRETAILCODEChanged()
    End Sub
    Partial Private Sub OnACNMSKSChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKSChanged()
    End Sub
    Partial Private Sub OnACNMSKXChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKXChanged()
    End Sub
    Partial Private Sub OnOLAFMChanging(value As String)
    End Sub
    Partial Private Sub OnOLAFMChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnSEPEBRANCHChanging(value As String)
    End Sub
    Partial Private Sub OnSEPEBRANCHChanged()
    End Sub
    Partial Private Sub OnOAEDBRANCHChanging(value As String)
    End Sub
    Partial Private Sub OnOAEDBRANCHChanged()
    End Sub
    Partial Private Sub OnHOLIDAYJRNLChanging(value As String)
    End Sub
    Partial Private Sub OnHOLIDAYJRNLChanged()
    End Sub
    Partial Private Sub OnKADTAXISChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKADTAXISChanged()
    End Sub
    Partial Private Sub OnMYDATACODEChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMYDATACODEChanged()
    End Sub
    Partial Private Sub OnLATITUDEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLATITUDEChanged()
    End Sub
    Partial Private Sub OnLONGITUDEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLONGITUDEChanged()
    End Sub
    Partial Private Sub OnWHOUSESChanging(value As String)
    End Sub
    Partial Private Sub OnWHOUSESChanged()
    End Sub
    Partial Private Sub OnSURFACEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSURFACEChanged()
    End Sub
    Partial Private Sub OnVOLUMEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVOLUMEChanged()
    End Sub
    Partial Private Sub OnSLENGTHChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSLENGTHChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._MTRDOCs = New EntitySet(Of MTRDOC)(AddressOf Me.attach_MTRDOCs, AddressOf Me.detach_MTRDOCs)
			Me._SERIES = New EntitySet(Of SERIES)(AddressOf Me.attach_SERIES, AddressOf Me.detach_SERIES)
			Me._SERIES1 = New EntitySet(Of SERIES)(AddressOf Me.attach_SERIES1, AddressOf Me.detach_SERIES1)
			Me._FINDOCs = New EntitySet(Of FINDOC)(AddressOf Me.attach_FINDOCs, AddressOf Me.detach_FINDOCs)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRANCH", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property BRANCH() As Short
			Get
				Return Me._BRANCH
			End Get
			Set
				If ((Me._BRANCH = value)  _
							= false) Then
					Me.OnBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._BRANCH = value
					Me.SendPropertyChanged("BRANCH")
					Me.OnBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHORTCUT", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property SHORTCUT() As String
			Get
				Return Me._SHORTCUT
			End Get
			Set
				If (String.Equals(Me._SHORTCUT, value) = false) Then
					Me.OnSHORTCUTChanging(value)
					Me.SendPropertyChanging
					Me._SHORTCUT = value
					Me.SendPropertyChanged("SHORTCUT")
					Me.OnSHORTCUTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTACT", DbType:="VarChar(64)")>  _
		Public Property CONTACT() As String
			Get
				Return Me._CONTACT
			End Get
			Set
				If (String.Equals(Me._CONTACT, value) = false) Then
					Me.OnCONTACTChanging(value)
					Me.SendPropertyChanging
					Me._CONTACT = value
					Me.SendPropertyChanged("CONTACT")
					Me.OnCONTACTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISCENTER", DbType:="SmallInt")>  _
		Public Property ISCENTER() As System.Nullable(Of Short)
			Get
				Return Me._ISCENTER
			End Get
			Set
				If (Me._ISCENTER.Equals(value) = false) Then
					Me.OnISCENTERChanging(value)
					Me.SendPropertyChanging
					Me._ISCENTER = value
					Me.SendPropertyChanged("ISCENTER")
					Me.OnISCENTERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IRSDATA", DbType:="SmallInt")>  _
		Public Property IRSDATA() As System.Nullable(Of Short)
			Get
				Return Me._IRSDATA
			End Get
			Set
				If (Me._IRSDATA.Equals(value) = false) Then
					Me.OnIRSDATAChanging(value)
					Me.SendPropertyChanging
					Me._IRSDATA = value
					Me.SendPropertyChanged("IRSDATA")
					Me.OnIRSDATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(50)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me.OnADDRESSChanging(value)
					Me.SendPropertyChanging
					Me._ADDRESS = value
					Me.SendPropertyChanged("ADDRESS")
					Me.OnADDRESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="VarChar(40)")>  _
		Public Property DISTRICT() As String
			Get
				Return Me._DISTRICT
			End Get
			Set
				If (String.Equals(Me._DISTRICT, value) = false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me.OnCITYChanging(value)
					Me.SendPropertyChanging
					Me._CITY = value
					Me.SendPropertyChanged("CITY")
					Me.OnCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me.OnDISTRICT1Changing(value)
					Me.SendPropertyChanging
					Me._DISTRICT1 = value
					Me.SendPropertyChanged("DISTRICT1")
					Me.OnDISTRICT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)")>  _
		Public Property ZIP() As String
			Get
				Return Me._ZIP
			End Get
			Set
				If (String.Equals(Me._ZIP, value) = false) Then
					Me.OnZIPChanging(value)
					Me.SendPropertyChanging
					Me._ZIP = value
					Me.SendPropertyChanged("ZIP")
					Me.OnZIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="SmallInt")>  _
		Public Property COUNTRY() As System.Nullable(Of Short)
			Get
				Return Me._COUNTRY
			End Get
			Set
				If (Me._COUNTRY.Equals(value) = false) Then
					Me.OnCOUNTRYChanging(value)
					Me.SendPropertyChanging
					Me._COUNTRY = value
					Me.SendPropertyChanged("COUNTRY")
					Me.OnCOUNTRYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE1", DbType:="VarChar(20)")>  _
		Public Property PHONE1() As String
			Get
				Return Me._PHONE1
			End Get
			Set
				If (String.Equals(Me._PHONE1, value) = false) Then
					Me.OnPHONE1Changing(value)
					Me.SendPropertyChanging
					Me._PHONE1 = value
					Me.SendPropertyChanged("PHONE1")
					Me.OnPHONE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE2", DbType:="VarChar(20)")>  _
		Public Property PHONE2() As String
			Get
				Return Me._PHONE2
			End Get
			Set
				If (String.Equals(Me._PHONE2, value) = false) Then
					Me.OnPHONE2Changing(value)
					Me.SendPropertyChanging
					Me._PHONE2 = value
					Me.SendPropertyChanged("PHONE2")
					Me.OnPHONE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="VarChar(20)")>  _
		Public Property FAX() As String
			Get
				Return Me._FAX
			End Get
			Set
				If (String.Equals(Me._FAX, value) = false) Then
					Me.OnFAXChanging(value)
					Me.SendPropertyChanging
					Me._FAX = value
					Me.SendPropertyChanged("FAX")
					Me.OnFAXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATSTS", DbType:="SmallInt")>  _
		Public Property VATSTS() As System.Nullable(Of Short)
			Get
				Return Me._VATSTS
			End Get
			Set
				If (Me._VATSTS.Equals(value) = false) Then
					Me.OnVATSTSChanging(value)
					Me.SendPropertyChanging
					Me._VATSTS = value
					Me.SendPropertyChanged("VATSTS")
					Me.OnVATSTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATPROVISIONS", DbType:="SmallInt")>  _
		Public Property VATPROVISIONS() As System.Nullable(Of Short)
			Get
				Return Me._VATPROVISIONS
			End Get
			Set
				If (Me._VATPROVISIONS.Equals(value) = false) Then
					Me.OnVATPROVISIONSChanging(value)
					Me.SendPropertyChanging
					Me._VATPROVISIONS = value
					Me.SendPropertyChanged("VATPROVISIONS")
					Me.OnVATPROVISIONSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSUNITS", DbType:="VarChar(3000)")>  _
		Public Property BUSUNITS() As String
			Get
				Return Me._BUSUNITS
			End Get
			Set
				If (String.Equals(Me._BUSUNITS, value) = false) Then
					Me.OnBUSUNITSChanging(value)
					Me.SendPropertyChanging
					Me._BUSUNITS = value
					Me.SendPropertyChanged("BUSUNITS")
					Me.OnBUSUNITSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICEZONE", DbType:="SmallInt")>  _
		Public Property PRICEZONE() As System.Nullable(Of Short)
			Get
				Return Me._PRICEZONE
			End Get
			Set
				If (Me._PRICEZONE.Equals(value) = false) Then
					Me.OnPRICEZONEChanging(value)
					Me.SendPropertyChanging
					Me._PRICEZONE = value
					Me.SendPropertyChanged("PRICEZONE")
					Me.OnPRICEZONEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOLDER", DbType:="SmallInt")>  _
		Public Property FOLDER() As System.Nullable(Of Short)
			Get
				Return Me._FOLDER
			End Get
			Set
				If (Me._FOLDER.Equals(value) = false) Then
					Me.OnFOLDERChanging(value)
					Me.SendPropertyChanging
					Me._FOLDER = value
					Me.SendPropertyChanged("FOLDER")
					Me.OnFOLDERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYADVTOBRN", DbType:="SmallInt NOT NULL")>  _
		Public Property PAYADVTOBRN() As Short
			Get
				Return Me._PAYADVTOBRN
			End Get
			Set
				If ((Me._PAYADVTOBRN = value)  _
							= false) Then
					Me.OnPAYADVTOBRNChanging(value)
					Me.SendPropertyChanging
					Me._PAYADVTOBRN = value
					Me.SendPropertyChanged("PAYADVTOBRN")
					Me.OnPAYADVTOBRNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BNVSERIES", DbType:="SmallInt")>  _
		Public Property BNVSERIES() As System.Nullable(Of Short)
			Get
				Return Me._BNVSERIES
			End Get
			Set
				If (Me._BNVSERIES.Equals(value) = false) Then
					Me.OnBNVSERIESChanging(value)
					Me.SendPropertyChanging
					Me._BNVSERIES = value
					Me.SendPropertyChanged("BNVSERIES")
					Me.OnBNVSERIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK1", DbType:="VarChar(25)")>  _
		Public Property ACNMSK1() As String
			Get
				Return Me._ACNMSK1
			End Get
			Set
				If (String.Equals(Me._ACNMSK1, value) = false) Then
					Me.OnACNMSK1Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK1 = value
					Me.SendPropertyChanged("ACNMSK1")
					Me.OnACNMSK1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK2", DbType:="VarChar(25)")>  _
		Public Property ACNMSK2() As String
			Get
				Return Me._ACNMSK2
			End Get
			Set
				If (String.Equals(Me._ACNMSK2, value) = false) Then
					Me.OnACNMSK2Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK2 = value
					Me.SendPropertyChanged("ACNMSK2")
					Me.OnACNMSK2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RETAILCODE", DbType:="VarChar(25)")>  _
		Public Property RETAILCODE() As String
			Get
				Return Me._RETAILCODE
			End Get
			Set
				If (String.Equals(Me._RETAILCODE, value) = false) Then
					Me.OnRETAILCODEChanging(value)
					Me.SendPropertyChanging
					Me._RETAILCODE = value
					Me.SendPropertyChanged("RETAILCODE")
					Me.OnRETAILCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKS", DbType:="VarChar(25)")>  _
		Public Property ACNMSKS() As String
			Get
				Return Me._ACNMSKS
			End Get
			Set
				If (String.Equals(Me._ACNMSKS, value) = false) Then
					Me.OnACNMSKSChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKS = value
					Me.SendPropertyChanged("ACNMSKS")
					Me.OnACNMSKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKX", DbType:="VarChar(25)")>  _
		Public Property ACNMSKX() As String
			Get
				Return Me._ACNMSKX
			End Get
			Set
				If (String.Equals(Me._ACNMSKX, value) = false) Then
					Me.OnACNMSKXChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKX = value
					Me.SendPropertyChanged("ACNMSKX")
					Me.OnACNMSKXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLAFM", DbType:="VarChar(15)")>  _
		Public Property OLAFM() As String
			Get
				Return Me._OLAFM
			End Get
			Set
				If (String.Equals(Me._OLAFM, value) = false) Then
					Me.OnOLAFMChanging(value)
					Me.SendPropertyChanging
					Me._OLAFM = value
					Me.SendPropertyChanged("OLAFM")
					Me.OnOLAFMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(250)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEPEBRANCH", DbType:="VarChar(64)")>  _
		Public Property SEPEBRANCH() As String
			Get
				Return Me._SEPEBRANCH
			End Get
			Set
				If (String.Equals(Me._SEPEBRANCH, value) = false) Then
					Me.OnSEPEBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._SEPEBRANCH = value
					Me.SendPropertyChanged("SEPEBRANCH")
					Me.OnSEPEBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OAEDBRANCH", DbType:="VarChar(64)")>  _
		Public Property OAEDBRANCH() As String
			Get
				Return Me._OAEDBRANCH
			End Get
			Set
				If (String.Equals(Me._OAEDBRANCH, value) = false) Then
					Me.OnOAEDBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._OAEDBRANCH = value
					Me.SendPropertyChanged("OAEDBRANCH")
					Me.OnOAEDBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOLIDAYJRNL", DbType:="VarChar(100)")>  _
		Public Property HOLIDAYJRNL() As String
			Get
				Return Me._HOLIDAYJRNL
			End Get
			Set
				If (String.Equals(Me._HOLIDAYJRNL, value) = false) Then
					Me.OnHOLIDAYJRNLChanging(value)
					Me.SendPropertyChanging
					Me._HOLIDAYJRNL = value
					Me.SendPropertyChanged("HOLIDAYJRNL")
					Me.OnHOLIDAYJRNLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KADTAXIS", DbType:="Int")>  _
		Public Property KADTAXIS() As System.Nullable(Of Integer)
			Get
				Return Me._KADTAXIS
			End Get
			Set
				If (Me._KADTAXIS.Equals(value) = false) Then
					Me.OnKADTAXISChanging(value)
					Me.SendPropertyChanging
					Me._KADTAXIS = value
					Me.SendPropertyChanged("KADTAXIS")
					Me.OnKADTAXISChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MYDATACODE", DbType:="SmallInt")>  _
		Public Property MYDATACODE() As System.Nullable(Of Short)
			Get
				Return Me._MYDATACODE
			End Get
			Set
				If (Me._MYDATACODE.Equals(value) = false) Then
					Me.OnMYDATACODEChanging(value)
					Me.SendPropertyChanging
					Me._MYDATACODE = value
					Me.SendPropertyChanged("MYDATACODE")
					Me.OnMYDATACODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LATITUDE", DbType:="Float")>  _
		Public Property LATITUDE() As System.Nullable(Of Double)
			Get
				Return Me._LATITUDE
			End Get
			Set
				If (Me._LATITUDE.Equals(value) = false) Then
					Me.OnLATITUDEChanging(value)
					Me.SendPropertyChanging
					Me._LATITUDE = value
					Me.SendPropertyChanged("LATITUDE")
					Me.OnLATITUDEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LONGITUDE", DbType:="Float")>  _
		Public Property LONGITUDE() As System.Nullable(Of Double)
			Get
				Return Me._LONGITUDE
			End Get
			Set
				If (Me._LONGITUDE.Equals(value) = false) Then
					Me.OnLONGITUDEChanging(value)
					Me.SendPropertyChanging
					Me._LONGITUDE = value
					Me.SendPropertyChanged("LONGITUDE")
					Me.OnLONGITUDEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSES", DbType:="VarChar(MAX)")>  _
		Public Property WHOUSES() As String
			Get
				Return Me._WHOUSES
			End Get
			Set
				If (String.Equals(Me._WHOUSES, value) = false) Then
					Me.OnWHOUSESChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSES = value
					Me.SendPropertyChanged("WHOUSES")
					Me.OnWHOUSESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURFACE", DbType:="Float")>  _
		Public Property SURFACE() As System.Nullable(Of Double)
			Get
				Return Me._SURFACE
			End Get
			Set
				If (Me._SURFACE.Equals(value) = false) Then
					Me.OnSURFACEChanging(value)
					Me.SendPropertyChanging
					Me._SURFACE = value
					Me.SendPropertyChanged("SURFACE")
					Me.OnSURFACEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOLUME", DbType:="Float")>  _
		Public Property VOLUME() As System.Nullable(Of Double)
			Get
				Return Me._VOLUME
			End Get
			Set
				If (Me._VOLUME.Equals(value) = false) Then
					Me.OnVOLUMEChanging(value)
					Me.SendPropertyChanging
					Me._VOLUME = value
					Me.SendPropertyChanged("VOLUME")
					Me.OnVOLUMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SLENGTH", DbType:="Float")>  _
		Public Property SLENGTH() As System.Nullable(Of Double)
			Get
				Return Me._SLENGTH
			End Get
			Set
				If (Me._SLENGTH.Equals(value) = false) Then
					Me.OnSLENGTHChanging(value)
					Me.SendPropertyChanging
					Me._SLENGTH = value
					Me.SendPropertyChanged("SLENGTH")
					Me.OnSLENGTHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_MTRDOC", Storage:="_MTRDOCs", ThisKey:="COMPANY,BRANCH", OtherKey:="COMPANY,BRANCHSEC")>  _
		Public Property MTRDOCs() As EntitySet(Of MTRDOC)
			Get
				Return Me._MTRDOCs
			End Get
			Set
				Me._MTRDOCs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_SERIES", Storage:="_SERIES", ThisKey:="COMPANY,BRANCH", OtherKey:="COMPANY,BRANCH")>  _
		Public Property SERIES() As EntitySet(Of SERIES)
			Get
				Return Me._SERIES
			End Get
			Set
				Me._SERIES.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_SERIES1", Storage:="_SERIES1", ThisKey:="COMPANY,BRANCH", OtherKey:="COMPANY,BRANCHSEC")>  _
		Public Property SERIES1() As EntitySet(Of SERIES)
			Get
				Return Me._SERIES1
			End Get
			Set
				Me._SERIES1.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BRANCH_FINDOC", Storage:="_FINDOCs", ThisKey:="COMPANY,BRANCH", OtherKey:="COMPANY,BRANCH")>  _
		Public Property FINDOCs() As EntitySet(Of FINDOC)
			Get
				Return Me._FINDOCs
			End Get
			Set
				Me._FINDOCs.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_MTRDOCs(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.BRANCH = Me
		End Sub
		
		Private Sub detach_MTRDOCs(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.BRANCH = Nothing
		End Sub
		
		Private Sub attach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.BRANCH1 = Me
		End Sub
		
		Private Sub detach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.BRANCH1 = Nothing
		End Sub
		
		Private Sub attach_SERIES1(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.BRANCH2 = Me
		End Sub
		
		Private Sub detach_SERIES1(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.BRANCH2 = Nothing
		End Sub
		
		Private Sub attach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.BRANCH1 = Me
		End Sub
		
		Private Sub detach_FINDOCs(ByVal entity As FINDOC)
			Me.SendPropertyChanging
			entity.BRANCH1 = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.USERS")>  _
	Partial Public Class USER
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _USERS As Short
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
		Private _SOPASSWORD As String
		
		Private _VLPASSWORD As String
		
		Private _USRAUTH As System.Nullable(Of Short)
		
		Private _FINALDATE As System.Nullable(Of Date)
		
		Private _SOADMINISTRATOR As Short
		
		Private _DEFCOMPANY As System.Nullable(Of Short)
		
		Private _DEFBRANCH As System.Nullable(Of Short)
		
		Private _GROUPS As System.Nullable(Of Short)
		
		Private _ALLCOMPANIES As Short
		
		Private _SOCASH As System.Nullable(Of Short)
		
		Private _EMAIL As String
		
		Private _REMARKS As String
		
		Private _USERACCESS As String
		
		Private _NONCONTROPER As Short
		
		Private _ISWEBUSER As Short
		
		Private _NOPRINT As Short
		
		Private _NOEXPORT As Short
		
		Private _WRKNAME As String
		
		Private _SOUNLOCK As Short
		
		Private _MASSCALCELMS As String
		
		Private _CSTMENU As System.Nullable(Of Integer)
		
		Private _CSTRIBBON As System.Nullable(Of Integer)
		
		Private _EMAILACCOUNTS As System.Nullable(Of Short)
		
		Private _IKAUSR As String
		
		Private _IKAPSW As String
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _INSUSER As System.Nullable(Of Short)
		
		Private _UPDDATE As System.Nullable(Of Date)
		
		Private _UPDUSER As System.Nullable(Of Short)
		
		Private _SODATA As String
		
		Private _PRIVACYCHK As Short
		
		Private _SOLANG As String
		
		Private _TFAFLG As System.Nullable(Of Short)
		
		Private _MOBILEPHONE As String
		
		Private _CODE1 As String
		
		Private _TFAEXPIRED As System.Nullable(Of Short)
		
		Private _ccCSerDel As String
		
		Private _GROUP As EntityRef(Of [GROUP])
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUSERSChanging(value As Short)
    End Sub
    Partial Private Sub OnUSERSChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnSOPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnSOPASSWORDChanged()
    End Sub
    Partial Private Sub OnVLPASSWORDChanging(value As String)
    End Sub
    Partial Private Sub OnVLPASSWORDChanged()
    End Sub
    Partial Private Sub OnUSRAUTHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUSRAUTHChanged()
    End Sub
    Partial Private Sub OnFINALDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFINALDATEChanged()
    End Sub
    Partial Private Sub OnSOADMINISTRATORChanging(value As Short)
    End Sub
    Partial Private Sub OnSOADMINISTRATORChanged()
    End Sub
    Partial Private Sub OnDEFCOMPANYChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDEFCOMPANYChanged()
    End Sub
    Partial Private Sub OnDEFBRANCHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDEFBRANCHChanged()
    End Sub
    Partial Private Sub OnGROUPSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnGROUPSChanged()
    End Sub
    Partial Private Sub OnALLCOMPANIESChanging(value As Short)
    End Sub
    Partial Private Sub OnALLCOMPANIESChanged()
    End Sub
    Partial Private Sub OnSOCASHChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnSOCASHChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnUSERACCESSChanging(value As String)
    End Sub
    Partial Private Sub OnUSERACCESSChanged()
    End Sub
    Partial Private Sub OnNONCONTROPERChanging(value As Short)
    End Sub
    Partial Private Sub OnNONCONTROPERChanged()
    End Sub
    Partial Private Sub OnISWEBUSERChanging(value As Short)
    End Sub
    Partial Private Sub OnISWEBUSERChanged()
    End Sub
    Partial Private Sub OnNOPRINTChanging(value As Short)
    End Sub
    Partial Private Sub OnNOPRINTChanged()
    End Sub
    Partial Private Sub OnNOEXPORTChanging(value As Short)
    End Sub
    Partial Private Sub OnNOEXPORTChanged()
    End Sub
    Partial Private Sub OnWRKNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWRKNAMEChanged()
    End Sub
    Partial Private Sub OnSOUNLOCKChanging(value As Short)
    End Sub
    Partial Private Sub OnSOUNLOCKChanged()
    End Sub
    Partial Private Sub OnMASSCALCELMSChanging(value As String)
    End Sub
    Partial Private Sub OnMASSCALCELMSChanged()
    End Sub
    Partial Private Sub OnCSTMENUChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCSTMENUChanged()
    End Sub
    Partial Private Sub OnCSTRIBBONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCSTRIBBONChanged()
    End Sub
    Partial Private Sub OnEMAILACCOUNTSChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnEMAILACCOUNTSChanged()
    End Sub
    Partial Private Sub OnIKAUSRChanging(value As String)
    End Sub
    Partial Private Sub OnIKAUSRChanged()
    End Sub
    Partial Private Sub OnIKAPSWChanging(value As String)
    End Sub
    Partial Private Sub OnIKAPSWChanged()
    End Sub
    Partial Private Sub OnINSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSDATEChanged()
    End Sub
    Partial Private Sub OnINSUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnINSUSERChanged()
    End Sub
    Partial Private Sub OnUPDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDDATEChanged()
    End Sub
    Partial Private Sub OnUPDUSERChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnUPDUSERChanged()
    End Sub
    Partial Private Sub OnSODATAChanging(value As String)
    End Sub
    Partial Private Sub OnSODATAChanged()
    End Sub
    Partial Private Sub OnPRIVACYCHKChanging(value As Short)
    End Sub
    Partial Private Sub OnPRIVACYCHKChanged()
    End Sub
    Partial Private Sub OnSOLANGChanging(value As String)
    End Sub
    Partial Private Sub OnSOLANGChanged()
    End Sub
    Partial Private Sub OnTFAFLGChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTFAFLGChanged()
    End Sub
    Partial Private Sub OnMOBILEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnMOBILEPHONEChanged()
    End Sub
    Partial Private Sub OnCODE1Changing(value As String)
    End Sub
    Partial Private Sub OnCODE1Changed()
    End Sub
    Partial Private Sub OnTFAEXPIREDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTFAEXPIREDChanged()
    End Sub
    Partial Private Sub OnccCSerDelChanging(value As String)
    End Sub
    Partial Private Sub OnccCSerDelChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._GROUP = CType(Nothing, EntityRef(Of [GROUP]))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USERS", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property USERS() As Short
			Get
				Return Me._USERS
			End Get
			Set
				If ((Me._USERS = value)  _
							= false) Then
					Me.OnUSERSChanging(value)
					Me.SendPropertyChanging
					Me._USERS = value
					Me.SendPropertyChanged("USERS")
					Me.OnUSERSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me.OnCODEChanging(value)
					Me.SendPropertyChanging
					Me._CODE = value
					Me.SendPropertyChanged("CODE")
					Me.OnCODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOPASSWORD", DbType:="VarChar(256)")>  _
		Public Property SOPASSWORD() As String
			Get
				Return Me._SOPASSWORD
			End Get
			Set
				If (String.Equals(Me._SOPASSWORD, value) = false) Then
					Me.OnSOPASSWORDChanging(value)
					Me.SendPropertyChanging
					Me._SOPASSWORD = value
					Me.SendPropertyChanged("SOPASSWORD")
					Me.OnSOPASSWORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VLPASSWORD", DbType:="VarChar(256)")>  _
		Public Property VLPASSWORD() As String
			Get
				Return Me._VLPASSWORD
			End Get
			Set
				If (String.Equals(Me._VLPASSWORD, value) = false) Then
					Me.OnVLPASSWORDChanging(value)
					Me.SendPropertyChanging
					Me._VLPASSWORD = value
					Me.SendPropertyChanged("VLPASSWORD")
					Me.OnVLPASSWORDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USRAUTH", DbType:="SmallInt")>  _
		Public Property USRAUTH() As System.Nullable(Of Short)
			Get
				Return Me._USRAUTH
			End Get
			Set
				If (Me._USRAUTH.Equals(value) = false) Then
					Me.OnUSRAUTHChanging(value)
					Me.SendPropertyChanging
					Me._USRAUTH = value
					Me.SendPropertyChanged("USRAUTH")
					Me.OnUSRAUTHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINALDATE", DbType:="DateTime")>  _
		Public Property FINALDATE() As System.Nullable(Of Date)
			Get
				Return Me._FINALDATE
			End Get
			Set
				If (Me._FINALDATE.Equals(value) = false) Then
					Me.OnFINALDATEChanging(value)
					Me.SendPropertyChanging
					Me._FINALDATE = value
					Me.SendPropertyChanged("FINALDATE")
					Me.OnFINALDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOADMINISTRATOR", DbType:="SmallInt NOT NULL")>  _
		Public Property SOADMINISTRATOR() As Short
			Get
				Return Me._SOADMINISTRATOR
			End Get
			Set
				If ((Me._SOADMINISTRATOR = value)  _
							= false) Then
					Me.OnSOADMINISTRATORChanging(value)
					Me.SendPropertyChanging
					Me._SOADMINISTRATOR = value
					Me.SendPropertyChanged("SOADMINISTRATOR")
					Me.OnSOADMINISTRATORChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEFCOMPANY", DbType:="SmallInt")>  _
		Public Property DEFCOMPANY() As System.Nullable(Of Short)
			Get
				Return Me._DEFCOMPANY
			End Get
			Set
				If (Me._DEFCOMPANY.Equals(value) = false) Then
					Me.OnDEFCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._DEFCOMPANY = value
					Me.SendPropertyChanged("DEFCOMPANY")
					Me.OnDEFCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEFBRANCH", DbType:="SmallInt")>  _
		Public Property DEFBRANCH() As System.Nullable(Of Short)
			Get
				Return Me._DEFBRANCH
			End Get
			Set
				If (Me._DEFBRANCH.Equals(value) = false) Then
					Me.OnDEFBRANCHChanging(value)
					Me.SendPropertyChanging
					Me._DEFBRANCH = value
					Me.SendPropertyChanged("DEFBRANCH")
					Me.OnDEFBRANCHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPS", DbType:="SmallInt")>  _
		Public Property GROUPS() As System.Nullable(Of Short)
			Get
				Return Me._GROUPS
			End Get
			Set
				If (Me._GROUPS.Equals(value) = false) Then
					If Me._GROUP.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnGROUPSChanging(value)
					Me.SendPropertyChanging
					Me._GROUPS = value
					Me.SendPropertyChanged("GROUPS")
					Me.OnGROUPSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLCOMPANIES", DbType:="SmallInt NOT NULL")>  _
		Public Property ALLCOMPANIES() As Short
			Get
				Return Me._ALLCOMPANIES
			End Get
			Set
				If ((Me._ALLCOMPANIES = value)  _
							= false) Then
					Me.OnALLCOMPANIESChanging(value)
					Me.SendPropertyChanging
					Me._ALLCOMPANIES = value
					Me.SendPropertyChanged("ALLCOMPANIES")
					Me.OnALLCOMPANIESChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOCASH", DbType:="SmallInt")>  _
		Public Property SOCASH() As System.Nullable(Of Short)
			Get
				Return Me._SOCASH
			End Get
			Set
				If (Me._SOCASH.Equals(value) = false) Then
					Me.OnSOCASHChanging(value)
					Me.SendPropertyChanging
					Me._SOCASH = value
					Me.SendPropertyChanged("SOCASH")
					Me.OnSOCASHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="VarChar(128)")>  _
		Public Property EMAIL() As String
			Get
				Return Me._EMAIL
			End Get
			Set
				If (String.Equals(Me._EMAIL, value) = false) Then
					Me.OnEMAILChanging(value)
					Me.SendPropertyChanging
					Me._EMAIL = value
					Me.SendPropertyChanged("EMAIL")
					Me.OnEMAILChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(250)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USERACCESS", DbType:="VarChar(255)")>  _
		Public Property USERACCESS() As String
			Get
				Return Me._USERACCESS
			End Get
			Set
				If (String.Equals(Me._USERACCESS, value) = false) Then
					Me.OnUSERACCESSChanging(value)
					Me.SendPropertyChanging
					Me._USERACCESS = value
					Me.SendPropertyChanged("USERACCESS")
					Me.OnUSERACCESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NONCONTROPER", DbType:="SmallInt NOT NULL")>  _
		Public Property NONCONTROPER() As Short
			Get
				Return Me._NONCONTROPER
			End Get
			Set
				If ((Me._NONCONTROPER = value)  _
							= false) Then
					Me.OnNONCONTROPERChanging(value)
					Me.SendPropertyChanging
					Me._NONCONTROPER = value
					Me.SendPropertyChanged("NONCONTROPER")
					Me.OnNONCONTROPERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISWEBUSER", DbType:="SmallInt NOT NULL")>  _
		Public Property ISWEBUSER() As Short
			Get
				Return Me._ISWEBUSER
			End Get
			Set
				If ((Me._ISWEBUSER = value)  _
							= false) Then
					Me.OnISWEBUSERChanging(value)
					Me.SendPropertyChanging
					Me._ISWEBUSER = value
					Me.SendPropertyChanged("ISWEBUSER")
					Me.OnISWEBUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOPRINT", DbType:="SmallInt NOT NULL")>  _
		Public Property NOPRINT() As Short
			Get
				Return Me._NOPRINT
			End Get
			Set
				If ((Me._NOPRINT = value)  _
							= false) Then
					Me.OnNOPRINTChanging(value)
					Me.SendPropertyChanging
					Me._NOPRINT = value
					Me.SendPropertyChanged("NOPRINT")
					Me.OnNOPRINTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOEXPORT", DbType:="SmallInt NOT NULL")>  _
		Public Property NOEXPORT() As Short
			Get
				Return Me._NOEXPORT
			End Get
			Set
				If ((Me._NOEXPORT = value)  _
							= false) Then
					Me.OnNOEXPORTChanging(value)
					Me.SendPropertyChanging
					Me._NOEXPORT = value
					Me.SendPropertyChanged("NOEXPORT")
					Me.OnNOEXPORTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRKNAME", DbType:="VarChar(255)")>  _
		Public Property WRKNAME() As String
			Get
				Return Me._WRKNAME
			End Get
			Set
				If (String.Equals(Me._WRKNAME, value) = false) Then
					Me.OnWRKNAMEChanging(value)
					Me.SendPropertyChanging
					Me._WRKNAME = value
					Me.SendPropertyChanged("WRKNAME")
					Me.OnWRKNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOUNLOCK", DbType:="SmallInt NOT NULL")>  _
		Public Property SOUNLOCK() As Short
			Get
				Return Me._SOUNLOCK
			End Get
			Set
				If ((Me._SOUNLOCK = value)  _
							= false) Then
					Me.OnSOUNLOCKChanging(value)
					Me.SendPropertyChanging
					Me._SOUNLOCK = value
					Me.SendPropertyChanged("SOUNLOCK")
					Me.OnSOUNLOCKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MASSCALCELMS", DbType:="VarChar(150)")>  _
		Public Property MASSCALCELMS() As String
			Get
				Return Me._MASSCALCELMS
			End Get
			Set
				If (String.Equals(Me._MASSCALCELMS, value) = false) Then
					Me.OnMASSCALCELMSChanging(value)
					Me.SendPropertyChanging
					Me._MASSCALCELMS = value
					Me.SendPropertyChanged("MASSCALCELMS")
					Me.OnMASSCALCELMSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSTMENU", DbType:="Int")>  _
		Public Property CSTMENU() As System.Nullable(Of Integer)
			Get
				Return Me._CSTMENU
			End Get
			Set
				If (Me._CSTMENU.Equals(value) = false) Then
					Me.OnCSTMENUChanging(value)
					Me.SendPropertyChanging
					Me._CSTMENU = value
					Me.SendPropertyChanged("CSTMENU")
					Me.OnCSTMENUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CSTRIBBON", DbType:="Int")>  _
		Public Property CSTRIBBON() As System.Nullable(Of Integer)
			Get
				Return Me._CSTRIBBON
			End Get
			Set
				If (Me._CSTRIBBON.Equals(value) = false) Then
					Me.OnCSTRIBBONChanging(value)
					Me.SendPropertyChanging
					Me._CSTRIBBON = value
					Me.SendPropertyChanged("CSTRIBBON")
					Me.OnCSTRIBBONChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAILACCOUNTS", DbType:="SmallInt")>  _
		Public Property EMAILACCOUNTS() As System.Nullable(Of Short)
			Get
				Return Me._EMAILACCOUNTS
			End Get
			Set
				If (Me._EMAILACCOUNTS.Equals(value) = false) Then
					Me.OnEMAILACCOUNTSChanging(value)
					Me.SendPropertyChanging
					Me._EMAILACCOUNTS = value
					Me.SendPropertyChanged("EMAILACCOUNTS")
					Me.OnEMAILACCOUNTSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IKAUSR", DbType:="VarChar(24)")>  _
		Public Property IKAUSR() As String
			Get
				Return Me._IKAUSR
			End Get
			Set
				If (String.Equals(Me._IKAUSR, value) = false) Then
					Me.OnIKAUSRChanging(value)
					Me.SendPropertyChanging
					Me._IKAUSR = value
					Me.SendPropertyChanged("IKAUSR")
					Me.OnIKAUSRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IKAPSW", DbType:="VarChar(256)")>  _
		Public Property IKAPSW() As String
			Get
				Return Me._IKAPSW
			End Get
			Set
				If (String.Equals(Me._IKAPSW, value) = false) Then
					Me.OnIKAPSWChanging(value)
					Me.SendPropertyChanging
					Me._IKAPSW = value
					Me.SendPropertyChanged("IKAPSW")
					Me.OnIKAPSWChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me.OnINSDATEChanging(value)
					Me.SendPropertyChanging
					Me._INSDATE = value
					Me.SendPropertyChanged("INSDATE")
					Me.OnINSDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSUSER", DbType:="SmallInt")>  _
		Public Property INSUSER() As System.Nullable(Of Short)
			Get
				Return Me._INSUSER
			End Get
			Set
				If (Me._INSUSER.Equals(value) = false) Then
					Me.OnINSUSERChanging(value)
					Me.SendPropertyChanging
					Me._INSUSER = value
					Me.SendPropertyChanged("INSUSER")
					Me.OnINSUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDDATE", DbType:="DateTime")>  _
		Public Property UPDDATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDDATE
			End Get
			Set
				If (Me._UPDDATE.Equals(value) = false) Then
					Me.OnUPDDATEChanging(value)
					Me.SendPropertyChanging
					Me._UPDDATE = value
					Me.SendPropertyChanged("UPDDATE")
					Me.OnUPDDATEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDUSER", DbType:="SmallInt")>  _
		Public Property UPDUSER() As System.Nullable(Of Short)
			Get
				Return Me._UPDUSER
			End Get
			Set
				If (Me._UPDUSER.Equals(value) = false) Then
					Me.OnUPDUSERChanging(value)
					Me.SendPropertyChanging
					Me._UPDUSER = value
					Me.SendPropertyChanged("UPDUSER")
					Me.OnUPDUSERChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SODATA", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property SODATA() As String
			Get
				Return Me._SODATA
			End Get
			Set
				If (String.Equals(Me._SODATA, value) = false) Then
					Me.OnSODATAChanging(value)
					Me.SendPropertyChanging
					Me._SODATA = value
					Me.SendPropertyChanged("SODATA")
					Me.OnSODATAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIVACYCHK", DbType:="SmallInt NOT NULL")>  _
		Public Property PRIVACYCHK() As Short
			Get
				Return Me._PRIVACYCHK
			End Get
			Set
				If ((Me._PRIVACYCHK = value)  _
							= false) Then
					Me.OnPRIVACYCHKChanging(value)
					Me.SendPropertyChanging
					Me._PRIVACYCHK = value
					Me.SendPropertyChanged("PRIVACYCHK")
					Me.OnPRIVACYCHKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOLANG", DbType:="VarChar(2)")>  _
		Public Property SOLANG() As String
			Get
				Return Me._SOLANG
			End Get
			Set
				If (String.Equals(Me._SOLANG, value) = false) Then
					Me.OnSOLANGChanging(value)
					Me.SendPropertyChanging
					Me._SOLANG = value
					Me.SendPropertyChanged("SOLANG")
					Me.OnSOLANGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFAFLG", DbType:="SmallInt")>  _
		Public Property TFAFLG() As System.Nullable(Of Short)
			Get
				Return Me._TFAFLG
			End Get
			Set
				If (Me._TFAFLG.Equals(value) = false) Then
					Me.OnTFAFLGChanging(value)
					Me.SendPropertyChanging
					Me._TFAFLG = value
					Me.SendPropertyChanged("TFAFLG")
					Me.OnTFAFLGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILEPHONE", DbType:="VarChar(15)")>  _
		Public Property MOBILEPHONE() As String
			Get
				Return Me._MOBILEPHONE
			End Get
			Set
				If (String.Equals(Me._MOBILEPHONE, value) = false) Then
					Me.OnMOBILEPHONEChanging(value)
					Me.SendPropertyChanging
					Me._MOBILEPHONE = value
					Me.SendPropertyChanged("MOBILEPHONE")
					Me.OnMOBILEPHONEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE1", DbType:="VarChar(32)")>  _
		Public Property CODE1() As String
			Get
				Return Me._CODE1
			End Get
			Set
				If (String.Equals(Me._CODE1, value) = false) Then
					Me.OnCODE1Changing(value)
					Me.SendPropertyChanging
					Me._CODE1 = value
					Me.SendPropertyChanged("CODE1")
					Me.OnCODE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFAEXPIRED", DbType:="SmallInt")>  _
		Public Property TFAEXPIRED() As System.Nullable(Of Short)
			Get
				Return Me._TFAEXPIRED
			End Get
			Set
				If (Me._TFAEXPIRED.Equals(value) = false) Then
					Me.OnTFAEXPIREDChanging(value)
					Me.SendPropertyChanging
					Me._TFAEXPIRED = value
					Me.SendPropertyChanged("TFAEXPIRED")
					Me.OnTFAEXPIREDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCSerDel", DbType:="VarChar(300)")>  _
		Public Property ccCSerDel() As String
			Get
				Return Me._ccCSerDel
			End Get
			Set
				If (String.Equals(Me._ccCSerDel, value) = false) Then
					Me.OnccCSerDelChanging(value)
					Me.SendPropertyChanging
					Me._ccCSerDel = value
					Me.SendPropertyChanged("ccCSerDel")
					Me.OnccCSerDelChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GROUP_USER", Storage:="_GROUP", ThisKey:="GROUPS", OtherKey:="GROUPS", IsForeignKey:=true)>  _
		Public Property [GROUP]() As [GROUP]
			Get
				Return Me._GROUP.Entity
			End Get
			Set
				Dim previousValue As [GROUP] = Me._GROUP.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._GROUP.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._GROUP.Entity = Nothing
						previousValue.USERs.Remove(Me)
					End If
					Me._GROUP.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.USERs.Add(Me)
						Me._GROUPS = value.GROUPS
					Else
						Me._GROUPS = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("[GROUP]")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WHOUSEG")>  _
	Partial Public Class WHOUSEG
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _WHOUSEG As Short
		
		Private _NAME As String
		
		Private _ISACTIVE As Short
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnWHOUSEGChanging(value As Short)
    End Sub
    Partial Private Sub OnWHOUSEGChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSEG", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property WHOUSEG() As Short
			Get
				Return Me._WHOUSEG
			End Get
			Set
				If ((Me._WHOUSEG = value)  _
							= false) Then
					Me.OnWHOUSEGChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSEG = value
					Me.SendPropertyChanged("WHOUSEG")
					Me.OnWHOUSEGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WHOUSE")>  _
	Partial Public Class WHOUSE
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _COMPANY As Short
		
		Private _WHOUSE As Short
		
		Private _SHORTCUT As String
		
		Private _ISACTIVE As Short
		
		Private _NAME As String
		
		Private _CONTACT As String
		
		Private _ADDRESS As String
		
		Private _DISTRICT As String
		
		Private _CITY As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _ZIP As String
		
		Private _PHONE1 As String
		
		Private _PHONE2 As String
		
		Private _FAX As String
		
		Private _SURFACE As System.Nullable(Of Double)
		
		Private _VOLUME As System.Nullable(Of Double)
		
		Private _ISVAN As System.Nullable(Of Short)
		
		Private _COSTMD As Short
		
		Private _ACNMSK As String
		
		Private _ACNMSK1 As String
		
		Private _ACNMSK2 As String
		
		Private _OLVOLUME As System.Nullable(Of Double)
		
		Private _REMAINMODE As Short
		
		Private _REMARKS As String
		
		Private _ACNMSK9 As String
		
		Private _ccCBeginCity As System.Nullable(Of Integer)
		
		Private _WHOUSEG As String
		
		Private _CUSTOMSTYPE As Short
		
		Private _ACNMSKS As String
		
		Private _ACNMSKX As String
		
		Private _COSTGROUP As System.Nullable(Of Short)
		
		Private _LATITUDE As System.Nullable(Of Double)
		
		Private _LONGITUDE As System.Nullable(Of Double)
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _MTRDOCs As EntitySet(Of MTRDOC)
		
		Private _MTRDOCs1 As EntitySet(Of MTRDOC)
		
		Private _SERIES As EntitySet(Of SERIES)
		
		Private _SERIES1 As EntitySet(Of SERIES)
		
		Private _WHOUSEBINs As EntitySet(Of WHOUSEBIN)
		
		Private _MTRLINEs As EntitySet(Of MTRLINE)
		
		Private _MTRLINEs1 As EntitySet(Of MTRLINE)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANYChanging(value As Short)
    End Sub
    Partial Private Sub OnCOMPANYChanged()
    End Sub
    Partial Private Sub OnWHOUSEChanging(value As Short)
    End Sub
    Partial Private Sub OnWHOUSEChanged()
    End Sub
    Partial Private Sub OnSHORTCUTChanging(value As String)
    End Sub
    Partial Private Sub OnSHORTCUTChanged()
    End Sub
    Partial Private Sub OnISACTIVEChanging(value As Short)
    End Sub
    Partial Private Sub OnISACTIVEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnCONTACTChanging(value As String)
    End Sub
    Partial Private Sub OnCONTACTChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnDISTRICT1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnDISTRICT1Changed()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnPHONE1Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE1Changed()
    End Sub
    Partial Private Sub OnPHONE2Changing(value As String)
    End Sub
    Partial Private Sub OnPHONE2Changed()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnSURFACEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSURFACEChanged()
    End Sub
    Partial Private Sub OnVOLUMEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVOLUMEChanged()
    End Sub
    Partial Private Sub OnISVANChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnISVANChanged()
    End Sub
    Partial Private Sub OnCOSTMDChanging(value As Short)
    End Sub
    Partial Private Sub OnCOSTMDChanged()
    End Sub
    Partial Private Sub OnACNMSKChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKChanged()
    End Sub
    Partial Private Sub OnACNMSK1Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK1Changed()
    End Sub
    Partial Private Sub OnACNMSK2Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK2Changed()
    End Sub
    Partial Private Sub OnOLVOLUMEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOLVOLUMEChanged()
    End Sub
    Partial Private Sub OnREMAINMODEChanging(value As Short)
    End Sub
    Partial Private Sub OnREMAINMODEChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnACNMSK9Changing(value As String)
    End Sub
    Partial Private Sub OnACNMSK9Changed()
    End Sub
    Partial Private Sub OnccCBeginCityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnccCBeginCityChanged()
    End Sub
    Partial Private Sub OnWHOUSEGChanging(value As String)
    End Sub
    Partial Private Sub OnWHOUSEGChanged()
    End Sub
    Partial Private Sub OnCUSTOMSTYPEChanging(value As Short)
    End Sub
    Partial Private Sub OnCUSTOMSTYPEChanged()
    End Sub
    Partial Private Sub OnACNMSKSChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKSChanged()
    End Sub
    Partial Private Sub OnACNMSKXChanging(value As String)
    End Sub
    Partial Private Sub OnACNMSKXChanged()
    End Sub
    Partial Private Sub OnCOSTGROUPChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnCOSTGROUPChanged()
    End Sub
    Partial Private Sub OnLATITUDEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLATITUDEChanged()
    End Sub
    Partial Private Sub OnLONGITUDEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLONGITUDEChanged()
    End Sub
    Partial Private Sub OnTRDRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRDRChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._MTRDOCs = New EntitySet(Of MTRDOC)(AddressOf Me.attach_MTRDOCs, AddressOf Me.detach_MTRDOCs)
			Me._MTRDOCs1 = New EntitySet(Of MTRDOC)(AddressOf Me.attach_MTRDOCs1, AddressOf Me.detach_MTRDOCs1)
			Me._SERIES = New EntitySet(Of SERIES)(AddressOf Me.attach_SERIES, AddressOf Me.detach_SERIES)
			Me._SERIES1 = New EntitySet(Of SERIES)(AddressOf Me.attach_SERIES1, AddressOf Me.detach_SERIES1)
			Me._WHOUSEBINs = New EntitySet(Of WHOUSEBIN)(AddressOf Me.attach_WHOUSEBINs, AddressOf Me.detach_WHOUSEBINs)
			Me._MTRLINEs = New EntitySet(Of MTRLINE)(AddressOf Me.attach_MTRLINEs, AddressOf Me.detach_MTRLINEs)
			Me._MTRLINEs1 = New EntitySet(Of MTRLINE)(AddressOf Me.attach_MTRLINEs1, AddressOf Me.detach_MTRLINEs1)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me.OnCOMPANYChanging(value)
					Me.SendPropertyChanging
					Me._COMPANY = value
					Me.SendPropertyChanged("COMPANY")
					Me.OnCOMPANYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Public Property WHOUSE() As Short
			Get
				Return Me._WHOUSE
			End Get
			Set
				If ((Me._WHOUSE = value)  _
							= false) Then
					Me.OnWHOUSEChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSE = value
					Me.SendPropertyChanged("WHOUSE")
					Me.OnWHOUSEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHORTCUT", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property SHORTCUT() As String
			Get
				Return Me._SHORTCUT
			End Get
			Set
				If (String.Equals(Me._SHORTCUT, value) = false) Then
					Me.OnSHORTCUTChanging(value)
					Me.SendPropertyChanging
					Me._SHORTCUT = value
					Me.SendPropertyChanged("SHORTCUT")
					Me.OnSHORTCUTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISACTIVE", DbType:="SmallInt NOT NULL")>  _
		Public Property ISACTIVE() As Short
			Get
				Return Me._ISACTIVE
			End Get
			Set
				If ((Me._ISACTIVE = value)  _
							= false) Then
					Me.OnISACTIVEChanging(value)
					Me.SendPropertyChanging
					Me._ISACTIVE = value
					Me.SendPropertyChanged("ISACTIVE")
					Me.OnISACTIVEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me.OnNAMEChanging(value)
					Me.SendPropertyChanging
					Me._NAME = value
					Me.SendPropertyChanged("NAME")
					Me.OnNAMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTACT", DbType:="VarChar(64)")>  _
		Public Property CONTACT() As String
			Get
				Return Me._CONTACT
			End Get
			Set
				If (String.Equals(Me._CONTACT, value) = false) Then
					Me.OnCONTACTChanging(value)
					Me.SendPropertyChanging
					Me._CONTACT = value
					Me.SendPropertyChanged("CONTACT")
					Me.OnCONTACTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(50)")>  _
		Public Property ADDRESS() As String
			Get
				Return Me._ADDRESS
			End Get
			Set
				If (String.Equals(Me._ADDRESS, value) = false) Then
					Me.OnADDRESSChanging(value)
					Me.SendPropertyChanging
					Me._ADDRESS = value
					Me.SendPropertyChanged("ADDRESS")
					Me.OnADDRESSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="VarChar(40)")>  _
		Public Property DISTRICT() As String
			Get
				Return Me._DISTRICT
			End Get
			Set
				If (String.Equals(Me._DISTRICT, value) = false) Then
					Me.OnDISTRICTChanging(value)
					Me.SendPropertyChanging
					Me._DISTRICT = value
					Me.SendPropertyChanged("DISTRICT")
					Me.OnDISTRICTChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(30)")>  _
		Public Property CITY() As String
			Get
				Return Me._CITY
			End Get
			Set
				If (String.Equals(Me._CITY, value) = false) Then
					Me.OnCITYChanging(value)
					Me.SendPropertyChanging
					Me._CITY = value
					Me.SendPropertyChanged("CITY")
					Me.OnCITYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me.OnDISTRICT1Changing(value)
					Me.SendPropertyChanging
					Me._DISTRICT1 = value
					Me.SendPropertyChanged("DISTRICT1")
					Me.OnDISTRICT1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)")>  _
		Public Property ZIP() As String
			Get
				Return Me._ZIP
			End Get
			Set
				If (String.Equals(Me._ZIP, value) = false) Then
					Me.OnZIPChanging(value)
					Me.SendPropertyChanging
					Me._ZIP = value
					Me.SendPropertyChanged("ZIP")
					Me.OnZIPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE1", DbType:="VarChar(20)")>  _
		Public Property PHONE1() As String
			Get
				Return Me._PHONE1
			End Get
			Set
				If (String.Equals(Me._PHONE1, value) = false) Then
					Me.OnPHONE1Changing(value)
					Me.SendPropertyChanging
					Me._PHONE1 = value
					Me.SendPropertyChanged("PHONE1")
					Me.OnPHONE1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE2", DbType:="VarChar(20)")>  _
		Public Property PHONE2() As String
			Get
				Return Me._PHONE2
			End Get
			Set
				If (String.Equals(Me._PHONE2, value) = false) Then
					Me.OnPHONE2Changing(value)
					Me.SendPropertyChanging
					Me._PHONE2 = value
					Me.SendPropertyChanged("PHONE2")
					Me.OnPHONE2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="VarChar(20)")>  _
		Public Property FAX() As String
			Get
				Return Me._FAX
			End Get
			Set
				If (String.Equals(Me._FAX, value) = false) Then
					Me.OnFAXChanging(value)
					Me.SendPropertyChanging
					Me._FAX = value
					Me.SendPropertyChanged("FAX")
					Me.OnFAXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURFACE", DbType:="Float")>  _
		Public Property SURFACE() As System.Nullable(Of Double)
			Get
				Return Me._SURFACE
			End Get
			Set
				If (Me._SURFACE.Equals(value) = false) Then
					Me.OnSURFACEChanging(value)
					Me.SendPropertyChanging
					Me._SURFACE = value
					Me.SendPropertyChanged("SURFACE")
					Me.OnSURFACEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOLUME", DbType:="Float")>  _
		Public Property VOLUME() As System.Nullable(Of Double)
			Get
				Return Me._VOLUME
			End Get
			Set
				If (Me._VOLUME.Equals(value) = false) Then
					Me.OnVOLUMEChanging(value)
					Me.SendPropertyChanging
					Me._VOLUME = value
					Me.SendPropertyChanged("VOLUME")
					Me.OnVOLUMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISVAN", DbType:="SmallInt")>  _
		Public Property ISVAN() As System.Nullable(Of Short)
			Get
				Return Me._ISVAN
			End Get
			Set
				If (Me._ISVAN.Equals(value) = false) Then
					Me.OnISVANChanging(value)
					Me.SendPropertyChanging
					Me._ISVAN = value
					Me.SendPropertyChanged("ISVAN")
					Me.OnISVANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTMD", DbType:="SmallInt NOT NULL")>  _
		Public Property COSTMD() As Short
			Get
				Return Me._COSTMD
			End Get
			Set
				If ((Me._COSTMD = value)  _
							= false) Then
					Me.OnCOSTMDChanging(value)
					Me.SendPropertyChanging
					Me._COSTMD = value
					Me.SendPropertyChanged("COSTMD")
					Me.OnCOSTMDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK", DbType:="VarChar(25)")>  _
		Public Property ACNMSK() As String
			Get
				Return Me._ACNMSK
			End Get
			Set
				If (String.Equals(Me._ACNMSK, value) = false) Then
					Me.OnACNMSKChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSK = value
					Me.SendPropertyChanged("ACNMSK")
					Me.OnACNMSKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK1", DbType:="VarChar(25)")>  _
		Public Property ACNMSK1() As String
			Get
				Return Me._ACNMSK1
			End Get
			Set
				If (String.Equals(Me._ACNMSK1, value) = false) Then
					Me.OnACNMSK1Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK1 = value
					Me.SendPropertyChanged("ACNMSK1")
					Me.OnACNMSK1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK2", DbType:="VarChar(25)")>  _
		Public Property ACNMSK2() As String
			Get
				Return Me._ACNMSK2
			End Get
			Set
				If (String.Equals(Me._ACNMSK2, value) = false) Then
					Me.OnACNMSK2Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK2 = value
					Me.SendPropertyChanged("ACNMSK2")
					Me.OnACNMSK2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLVOLUME", DbType:="Float")>  _
		Public Property OLVOLUME() As System.Nullable(Of Double)
			Get
				Return Me._OLVOLUME
			End Get
			Set
				If (Me._OLVOLUME.Equals(value) = false) Then
					Me.OnOLVOLUMEChanging(value)
					Me.SendPropertyChanging
					Me._OLVOLUME = value
					Me.SendPropertyChanged("OLVOLUME")
					Me.OnOLVOLUMEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMAINMODE", DbType:="SmallInt NOT NULL")>  _
		Public Property REMAINMODE() As Short
			Get
				Return Me._REMAINMODE
			End Get
			Set
				If ((Me._REMAINMODE = value)  _
							= false) Then
					Me.OnREMAINMODEChanging(value)
					Me.SendPropertyChanging
					Me._REMAINMODE = value
					Me.SendPropertyChanged("REMAINMODE")
					Me.OnREMAINMODEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(250)")>  _
		Public Property REMARKS() As String
			Get
				Return Me._REMARKS
			End Get
			Set
				If (String.Equals(Me._REMARKS, value) = false) Then
					Me.OnREMARKSChanging(value)
					Me.SendPropertyChanging
					Me._REMARKS = value
					Me.SendPropertyChanged("REMARKS")
					Me.OnREMARKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSK9", DbType:="VarChar(15)")>  _
		Public Property ACNMSK9() As String
			Get
				Return Me._ACNMSK9
			End Get
			Set
				If (String.Equals(Me._ACNMSK9, value) = false) Then
					Me.OnACNMSK9Changing(value)
					Me.SendPropertyChanging
					Me._ACNMSK9 = value
					Me.SendPropertyChanged("ACNMSK9")
					Me.OnACNMSK9Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ccCBeginCity", DbType:="Int")>  _
		Public Property ccCBeginCity() As System.Nullable(Of Integer)
			Get
				Return Me._ccCBeginCity
			End Get
			Set
				If (Me._ccCBeginCity.Equals(value) = false) Then
					Me.OnccCBeginCityChanging(value)
					Me.SendPropertyChanging
					Me._ccCBeginCity = value
					Me.SendPropertyChanged("ccCBeginCity")
					Me.OnccCBeginCityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSEG", DbType:="VarChar(255)")>  _
		Public Property WHOUSEG() As String
			Get
				Return Me._WHOUSEG
			End Get
			Set
				If (String.Equals(Me._WHOUSEG, value) = false) Then
					Me.OnWHOUSEGChanging(value)
					Me.SendPropertyChanging
					Me._WHOUSEG = value
					Me.SendPropertyChanged("WHOUSEG")
					Me.OnWHOUSEGChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMSTYPE", DbType:="SmallInt NOT NULL")>  _
		Public Property CUSTOMSTYPE() As Short
			Get
				Return Me._CUSTOMSTYPE
			End Get
			Set
				If ((Me._CUSTOMSTYPE = value)  _
							= false) Then
					Me.OnCUSTOMSTYPEChanging(value)
					Me.SendPropertyChanging
					Me._CUSTOMSTYPE = value
					Me.SendPropertyChanged("CUSTOMSTYPE")
					Me.OnCUSTOMSTYPEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKS", DbType:="VarChar(25)")>  _
		Public Property ACNMSKS() As String
			Get
				Return Me._ACNMSKS
			End Get
			Set
				If (String.Equals(Me._ACNMSKS, value) = false) Then
					Me.OnACNMSKSChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKS = value
					Me.SendPropertyChanged("ACNMSKS")
					Me.OnACNMSKSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACNMSKX", DbType:="VarChar(25)")>  _
		Public Property ACNMSKX() As String
			Get
				Return Me._ACNMSKX
			End Get
			Set
				If (String.Equals(Me._ACNMSKX, value) = false) Then
					Me.OnACNMSKXChanging(value)
					Me.SendPropertyChanging
					Me._ACNMSKX = value
					Me.SendPropertyChanged("ACNMSKX")
					Me.OnACNMSKXChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COSTGROUP", DbType:="SmallInt")>  _
		Public Property COSTGROUP() As System.Nullable(Of Short)
			Get
				Return Me._COSTGROUP
			End Get
			Set
				If (Me._COSTGROUP.Equals(value) = false) Then
					Me.OnCOSTGROUPChanging(value)
					Me.SendPropertyChanging
					Me._COSTGROUP = value
					Me.SendPropertyChanged("COSTGROUP")
					Me.OnCOSTGROUPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LATITUDE", DbType:="Float")>  _
		Public Property LATITUDE() As System.Nullable(Of Double)
			Get
				Return Me._LATITUDE
			End Get
			Set
				If (Me._LATITUDE.Equals(value) = false) Then
					Me.OnLATITUDEChanging(value)
					Me.SendPropertyChanging
					Me._LATITUDE = value
					Me.SendPropertyChanged("LATITUDE")
					Me.OnLATITUDEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LONGITUDE", DbType:="Float")>  _
		Public Property LONGITUDE() As System.Nullable(Of Double)
			Get
				Return Me._LONGITUDE
			End Get
			Set
				If (Me._LONGITUDE.Equals(value) = false) Then
					Me.OnLONGITUDEChanging(value)
					Me.SendPropertyChanging
					Me._LONGITUDE = value
					Me.SendPropertyChanged("LONGITUDE")
					Me.OnLONGITUDEChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					Me.OnTRDRChanging(value)
					Me.SendPropertyChanging
					Me._TRDR = value
					Me.SendPropertyChanged("TRDR")
					Me.OnTRDRChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRDOC", Storage:="_MTRDOCs", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE")>  _
		Public Property MTRDOCs() As EntitySet(Of MTRDOC)
			Get
				Return Me._MTRDOCs
			End Get
			Set
				Me._MTRDOCs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRDOC1", Storage:="_MTRDOCs1", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSESEC")>  _
		Public Property MTRDOCs1() As EntitySet(Of MTRDOC)
			Get
				Return Me._MTRDOCs1
			End Get
			Set
				Me._MTRDOCs1.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_SERIES", Storage:="_SERIES", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE")>  _
		Public Property SERIES() As EntitySet(Of SERIES)
			Get
				Return Me._SERIES
			End Get
			Set
				Me._SERIES.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_SERIES1", Storage:="_SERIES1", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSESEC")>  _
		Public Property SERIES1() As EntitySet(Of SERIES)
			Get
				Return Me._SERIES1
			End Get
			Set
				Me._SERIES1.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_WHOUSEBIN", Storage:="_WHOUSEBINs", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE")>  _
		Public Property WHOUSEBINs() As EntitySet(Of WHOUSEBIN)
			Get
				Return Me._WHOUSEBINs
			End Get
			Set
				Me._WHOUSEBINs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRLINE", Storage:="_MTRLINEs", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSE")>  _
		Public Property MTRLINEs() As EntitySet(Of MTRLINE)
			Get
				Return Me._MTRLINEs
			End Get
			Set
				Me._MTRLINEs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WHOUSE_MTRLINE1", Storage:="_MTRLINEs1", ThisKey:="COMPANY,WHOUSE", OtherKey:="COMPANY,WHOUSESEC")>  _
		Public Property MTRLINEs1() As EntitySet(Of MTRLINE)
			Get
				Return Me._MTRLINEs1
			End Get
			Set
				Me._MTRLINEs1.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_MTRDOCs(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Me
		End Sub
		
		Private Sub detach_MTRDOCs(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Nothing
		End Sub
		
		Private Sub attach_MTRDOCs1(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.WHOUSE2 = Me
		End Sub
		
		Private Sub detach_MTRDOCs1(ByVal entity As MTRDOC)
			Me.SendPropertyChanging
			entity.WHOUSE2 = Nothing
		End Sub
		
		Private Sub attach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Me
		End Sub
		
		Private Sub detach_SERIES(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Nothing
		End Sub
		
		Private Sub attach_SERIES1(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.WHOUSE2 = Me
		End Sub
		
		Private Sub detach_SERIES1(ByVal entity As SERIES)
			Me.SendPropertyChanging
			entity.WHOUSE2 = Nothing
		End Sub
		
		Private Sub attach_WHOUSEBINs(ByVal entity As WHOUSEBIN)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Me
		End Sub
		
		Private Sub detach_WHOUSEBINs(ByVal entity As WHOUSEBIN)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Nothing
		End Sub
		
		Private Sub attach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Me
		End Sub
		
		Private Sub detach_MTRLINEs(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.WHOUSE1 = Nothing
		End Sub
		
		Private Sub attach_MTRLINEs1(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.WHOUSE2 = Me
		End Sub
		
		Private Sub detach_MTRLINEs1(ByVal entity As MTRLINE)
			Me.SendPropertyChanging
			entity.WHOUSE2 = Nothing
		End Sub
	End Class
	
	Partial Public Class testFetchWhousesResult
		
		Private _MTRL As Integer
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _MTRUNIT1 As Short
		
		Private _MX_NUM05 As System.Nullable(Of Double)
		
		Private _MU1NAME As String
		
		Private _OPNWH As System.Nullable(Of Double)
		
		Private _TRNWH As System.Nullable(Of Double)
		
		Private _ONWAYDIF As System.Nullable(Of Double)
		
		Private _SKISDIF As System.Nullable(Of Double)
		
		Private _DFDIF As System.Nullable(Of Double)
		
		Private _EKRDIF As System.Nullable(Of Double)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", DbType:="Int NOT NULL")>  _
		Public Property MTRL() As Integer
			Get
				Return Me._MTRL
			End Get
			Set
				If ((Me._MTRL = value)  _
							= false) Then
					Me._MTRL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT1", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRUNIT1() As Short
			Get
				Return Me._MTRUNIT1
			End Get
			Set
				If ((Me._MTRUNIT1 = value)  _
							= false) Then
					Me._MTRUNIT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MX_NUM05", DbType:="Float")>  _
		Public Property MX_NUM05() As System.Nullable(Of Double)
			Get
				Return Me._MX_NUM05
			End Get
			Set
				If (Me._MX_NUM05.Equals(value) = false) Then
					Me._MX_NUM05 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU1NAME", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property MU1NAME() As String
			Get
				Return Me._MU1NAME
			End Get
			Set
				If (String.Equals(Me._MU1NAME, value) = false) Then
					Me._MU1NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNWH", DbType:="Float")>  _
		Public Property OPNWH() As System.Nullable(Of Double)
			Get
				Return Me._OPNWH
			End Get
			Set
				If (Me._OPNWH.Equals(value) = false) Then
					Me._OPNWH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNWH", DbType:="Float")>  _
		Public Property TRNWH() As System.Nullable(Of Double)
			Get
				Return Me._TRNWH
			End Get
			Set
				If (Me._TRNWH.Equals(value) = false) Then
					Me._TRNWH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ONWAYDIF", DbType:="Float")>  _
		Public Property ONWAYDIF() As System.Nullable(Of Double)
			Get
				Return Me._ONWAYDIF
			End Get
			Set
				If (Me._ONWAYDIF.Equals(value) = false) Then
					Me._ONWAYDIF = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SKISDIF", DbType:="Float")>  _
		Public Property SKISDIF() As System.Nullable(Of Double)
			Get
				Return Me._SKISDIF
			End Get
			Set
				If (Me._SKISDIF.Equals(value) = false) Then
					Me._SKISDIF = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DFDIF", DbType:="Float")>  _
		Public Property DFDIF() As System.Nullable(Of Double)
			Get
				Return Me._DFDIF
			End Get
			Set
				If (Me._DFDIF.Equals(value) = false) Then
					Me._DFDIF = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EKRDIF", DbType:="Float")>  _
		Public Property EKRDIF() As System.Nullable(Of Double)
			Get
				Return Me._EKRDIF
			End Get
			Set
				If (Me._EKRDIF.Equals(value) = false) Then
					Me._EKRDIF = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class fnCheQueOpenResult
		
		Private _CHEQUE As System.Nullable(Of Integer)
		
		Private _FINDOC As System.Nullable(Of Integer)
		
		Private _TRNDATE As System.Nullable(Of Date)
		
		Private _TRNSTATE As System.Nullable(Of Short)
		
		Private _TRNTYPEPOSS As System.Nullable(Of Short)
		
		Private _TRNHOLDERNAME As String
		
		Private _TRNFOLDER As System.Nullable(Of Short)
		
		Private _TRNBALANCE As System.Nullable(Of Double)
		
		Private _LTRNBALANCE As System.Nullable(Of Double)
		
		Private _CHEQUEUPD As System.Nullable(Of Short)
		
		Private _NAME As String
		
		Private _OPENBAL As System.Nullable(Of Short)
		
		Private _PAYBAL As System.Nullable(Of Short)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUE", DbType:="Int")>  _
		Public Property CHEQUE() As System.Nullable(Of Integer)
			Get
				Return Me._CHEQUE
			End Get
			Set
				If (Me._CHEQUE.Equals(value) = false) Then
					Me._CHEQUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int")>  _
		Public Property FINDOC() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOC
			End Get
			Set
				If (Me._FINDOC.Equals(value) = false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime")>  _
		Public Property TRNDATE() As System.Nullable(Of Date)
			Get
				Return Me._TRNDATE
			End Get
			Set
				If (Me._TRNDATE.Equals(value) = false) Then
					Me._TRNDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNSTATE", DbType:="SmallInt")>  _
		Public Property TRNSTATE() As System.Nullable(Of Short)
			Get
				Return Me._TRNSTATE
			End Get
			Set
				If (Me._TRNSTATE.Equals(value) = false) Then
					Me._TRNSTATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNTYPEPOSS", DbType:="SmallInt")>  _
		Public Property TRNTYPEPOSS() As System.Nullable(Of Short)
			Get
				Return Me._TRNTYPEPOSS
			End Get
			Set
				If (Me._TRNTYPEPOSS.Equals(value) = false) Then
					Me._TRNTYPEPOSS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNHOLDERNAME", DbType:="VarChar(64)")>  _
		Public Property TRNHOLDERNAME() As String
			Get
				Return Me._TRNHOLDERNAME
			End Get
			Set
				If (String.Equals(Me._TRNHOLDERNAME, value) = false) Then
					Me._TRNHOLDERNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNFOLDER", DbType:="SmallInt")>  _
		Public Property TRNFOLDER() As System.Nullable(Of Short)
			Get
				Return Me._TRNFOLDER
			End Get
			Set
				If (Me._TRNFOLDER.Equals(value) = false) Then
					Me._TRNFOLDER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNBALANCE", DbType:="Float")>  _
		Public Property TRNBALANCE() As System.Nullable(Of Double)
			Get
				Return Me._TRNBALANCE
			End Get
			Set
				If (Me._TRNBALANCE.Equals(value) = false) Then
					Me._TRNBALANCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTRNBALANCE", DbType:="Float")>  _
		Public Property LTRNBALANCE() As System.Nullable(Of Double)
			Get
				Return Me._LTRNBALANCE
			End Get
			Set
				If (Me._LTRNBALANCE.Equals(value) = false) Then
					Me._LTRNBALANCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEUPD", DbType:="SmallInt")>  _
		Public Property CHEQUEUPD() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUEUPD
			End Get
			Set
				If (Me._CHEQUEUPD.Equals(value) = false) Then
					Me._CHEQUEUPD = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50)")>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPENBAL", DbType:="SmallInt")>  _
		Public Property OPENBAL() As System.Nullable(Of Short)
			Get
				Return Me._OPENBAL
			End Get
			Set
				If (Me._OPENBAL.Equals(value) = false) Then
					Me._OPENBAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYBAL", DbType:="SmallInt")>  _
		Public Property PAYBAL() As System.Nullable(Of Short)
			Get
				Return Me._PAYBAL
			End Get
			Set
				If (Me._PAYBAL.Equals(value) = false) Then
					Me._PAYBAL = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class fnCheQueBalResult
		
		Private _CHEQUE As System.Nullable(Of Integer)
		
		Private _TRNBALANCE As System.Nullable(Of Double)
		
		Private _CHEQUESTATES As System.Nullable(Of Short)
		
		Private _NAME As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUE", DbType:="Int")>  _
		Public Property CHEQUE() As System.Nullable(Of Integer)
			Get
				Return Me._CHEQUE
			End Get
			Set
				If (Me._CHEQUE.Equals(value) = false) Then
					Me._CHEQUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNBALANCE", DbType:="Float")>  _
		Public Property TRNBALANCE() As System.Nullable(Of Double)
			Get
				Return Me._TRNBALANCE
			End Get
			Set
				If (Me._TRNBALANCE.Equals(value) = false) Then
					Me._TRNBALANCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUESTATES", DbType:="SmallInt")>  _
		Public Property CHEQUESTATES() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUESTATES
			End Get
			Set
				If (Me._CHEQUESTATES.Equals(value) = false) Then
					Me._CHEQUESTATES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(50)")>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class FetchWhousesResult
		
		Private _WHOUSE As Short
		
		Private _SHORTCUT As String
		
		Private _WHNAME As String
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _MTRUNITNAME As String
		
		Private _TBAL As System.Nullable(Of Double)
		
		Private _CODEWB As String
		
		Private _NAMETD As String
		
		Private _NAME2 As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHOUSE", DbType:="SmallInt NOT NULL")>  _
		Public Property WHOUSE() As Short
			Get
				Return Me._WHOUSE
			End Get
			Set
				If ((Me._WHOUSE = value)  _
							= false) Then
					Me._WHOUSE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHORTCUT", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property SHORTCUT() As String
			Get
				Return Me._SHORTCUT
			End Get
			Set
				If (String.Equals(Me._SHORTCUT, value) = false) Then
					Me._SHORTCUT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHNAME", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property WHNAME() As String
			Get
				Return Me._WHNAME
			End Get
			Set
				If (String.Equals(Me._WHNAME, value) = false) Then
					Me._WHNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNITNAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property MTRUNITNAME() As String
			Get
				Return Me._MTRUNITNAME
			End Get
			Set
				If (String.Equals(Me._MTRUNITNAME, value) = false) Then
					Me._MTRUNITNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TBAL", DbType:="Float")>  _
		Public Property TBAL() As System.Nullable(Of Double)
			Get
				Return Me._TBAL
			End Get
			Set
				If (Me._TBAL.Equals(value) = false) Then
					Me._TBAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODEWB", DbType:="VarChar(10)")>  _
		Public Property CODEWB() As String
			Get
				Return Me._CODEWB
			End Get
			Set
				If (String.Equals(Me._CODEWB, value) = false) Then
					Me._CODEWB = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMETD", DbType:="VarChar(128)")>  _
		Public Property NAMETD() As String
			Get
				Return Me._NAMETD
			End Get
			Set
				If (String.Equals(Me._NAMETD, value) = false) Then
					Me._NAMETD = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME2", DbType:="VarChar(64)")>  _
		Public Property NAME2() As String
			Get
				Return Me._NAME2
			End Get
			Set
				If (String.Equals(Me._NAME2, value) = false) Then
					Me._NAME2 = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class FetchWhousesDailyResult
		
		Private _COMPANY As Short
		
		Private _SERIES As Short
		
		Private _FINDOC As Integer
		
		Private _TRNDATE As Date
		
		Private _INSDATE As System.Nullable(Of Date)
		
		Private _FPRMS As Short
		
		Private _TFPRMS As Short
		
		Private _FP_NAME As String
		
		Private _FINCODE As String
		
		Private _SL_DNAME As String
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _P_CODE As String
		
		Private _P_NAME As String
		
		Private _TRDBRANCH As System.Nullable(Of Integer)
		
		Private _TB_CODE As String
		
		Private _TB_NAME As String
		
		Private _SHORTCUT As String
		
		Private _DISTRICT1 As System.Nullable(Of Short)
		
		Private _DI_NAME As String
		
		Private _MTRL As System.Nullable(Of Integer)
		
		Private _M_CODE As String
		
		Private _M_NAME As String
		
		Private _MTRUNIT1 As System.Nullable(Of Short)
		
		Private _MU_SHORTCUT As String
		
		Private _QTY1 As System.Nullable(Of Double)
		
		Private _QTY1COV As System.Nullable(Of Double)
		
		Private _QTY1CANC As System.Nullable(Of Double)
		
		Private _DIAFORA As System.Nullable(Of Double)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY", DbType:="SmallInt NOT NULL")>  _
		Public Property COMPANY() As Short
			Get
				Return Me._COMPANY
			End Get
			Set
				If ((Me._COMPANY = value)  _
							= false) Then
					Me._COMPANY = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIES", DbType:="SmallInt NOT NULL")>  _
		Public Property SERIES() As Short
			Get
				Return Me._SERIES
			End Get
			Set
				If ((Me._SERIES = value)  _
							= false) Then
					Me._SERIES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int NOT NULL")>  _
		Public Property FINDOC() As Integer
			Get
				Return Me._FINDOC
			End Get
			Set
				If ((Me._FINDOC = value)  _
							= false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime NOT NULL")>  _
		Public Property TRNDATE() As Date
			Get
				Return Me._TRNDATE
			End Get
			Set
				If ((Me._TRNDATE = value)  _
							= false) Then
					Me._TRNDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSDATE", DbType:="DateTime")>  _
		Public Property INSDATE() As System.Nullable(Of Date)
			Get
				Return Me._INSDATE
			End Get
			Set
				If (Me._INSDATE.Equals(value) = false) Then
					Me._INSDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property FPRMS() As Short
			Get
				Return Me._FPRMS
			End Get
			Set
				If ((Me._FPRMS = value)  _
							= false) Then
					Me._FPRMS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFPRMS", DbType:="SmallInt NOT NULL")>  _
		Public Property TFPRMS() As Short
			Get
				Return Me._TFPRMS
			End Get
			Set
				If ((Me._TFPRMS = value)  _
							= false) Then
					Me._TFPRMS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FP_NAME", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property FP_NAME() As String
			Get
				Return Me._FP_NAME
			End Get
			Set
				If (String.Equals(Me._FP_NAME, value) = false) Then
					Me._FP_NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODE", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property FINCODE() As String
			Get
				Return Me._FINCODE
			End Get
			Set
				If (String.Equals(Me._FINCODE, value) = false) Then
					Me._FINCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SL_DNAME", DbType:="VarChar(66) NOT NULL", CanBeNull:=false)>  _
		Public Property SL_DNAME() As String
			Get
				Return Me._SL_DNAME
			End Get
			Set
				If (String.Equals(Me._SL_DNAME, value) = false) Then
					Me._SL_DNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P_CODE", DbType:="VarChar(25)")>  _
		Public Property P_CODE() As String
			Get
				Return Me._P_CODE
			End Get
			Set
				If (String.Equals(Me._P_CODE, value) = false) Then
					Me._P_CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P_NAME", DbType:="VarChar(128)")>  _
		Public Property P_NAME() As String
			Get
				Return Me._P_NAME
			End Get
			Set
				If (String.Equals(Me._P_NAME, value) = false) Then
					Me._P_NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDBRANCH", DbType:="Int")>  _
		Public Property TRDBRANCH() As System.Nullable(Of Integer)
			Get
				Return Me._TRDBRANCH
			End Get
			Set
				If (Me._TRDBRANCH.Equals(value) = false) Then
					Me._TRDBRANCH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TB_CODE", DbType:="VarChar(25)")>  _
		Public Property TB_CODE() As String
			Get
				Return Me._TB_CODE
			End Get
			Set
				If (String.Equals(Me._TB_CODE, value) = false) Then
					Me._TB_CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TB_NAME", DbType:="VarChar(64)")>  _
		Public Property TB_NAME() As String
			Get
				Return Me._TB_NAME
			End Get
			Set
				If (String.Equals(Me._TB_NAME, value) = false) Then
					Me._TB_NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHORTCUT", DbType:="VarChar(10)")>  _
		Public Property SHORTCUT() As String
			Get
				Return Me._SHORTCUT
			End Get
			Set
				If (String.Equals(Me._SHORTCUT, value) = false) Then
					Me._SHORTCUT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT1", DbType:="SmallInt")>  _
		Public Property DISTRICT1() As System.Nullable(Of Short)
			Get
				Return Me._DISTRICT1
			End Get
			Set
				If (Me._DISTRICT1.Equals(value) = false) Then
					Me._DISTRICT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DI_NAME", DbType:="VarChar(50)")>  _
		Public Property DI_NAME() As String
			Get
				Return Me._DI_NAME
			End Get
			Set
				If (String.Equals(Me._DI_NAME, value) = false) Then
					Me._DI_NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", DbType:="Int")>  _
		Public Property MTRL() As System.Nullable(Of Integer)
			Get
				Return Me._MTRL
			End Get
			Set
				If (Me._MTRL.Equals(value) = false) Then
					Me._MTRL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_M_CODE", DbType:="VarChar(25)")>  _
		Public Property M_CODE() As String
			Get
				Return Me._M_CODE
			End Get
			Set
				If (String.Equals(Me._M_CODE, value) = false) Then
					Me._M_CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_M_NAME", DbType:="VarChar(128)")>  _
		Public Property M_NAME() As String
			Get
				Return Me._M_NAME
			End Get
			Set
				If (String.Equals(Me._M_NAME, value) = false) Then
					Me._M_NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT1", DbType:="SmallInt")>  _
		Public Property MTRUNIT1() As System.Nullable(Of Short)
			Get
				Return Me._MTRUNIT1
			End Get
			Set
				If (Me._MTRUNIT1.Equals(value) = false) Then
					Me._MTRUNIT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU_SHORTCUT", DbType:="VarChar(5)")>  _
		Public Property MU_SHORTCUT() As String
			Get
				Return Me._MU_SHORTCUT
			End Get
			Set
				If (String.Equals(Me._MU_SHORTCUT, value) = false) Then
					Me._MU_SHORTCUT = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1", DbType:="Float")>  _
		Public Property QTY1() As System.Nullable(Of Double)
			Get
				Return Me._QTY1
			End Get
			Set
				If (Me._QTY1.Equals(value) = false) Then
					Me._QTY1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1COV", DbType:="Float")>  _
		Public Property QTY1COV() As System.Nullable(Of Double)
			Get
				Return Me._QTY1COV
			End Get
			Set
				If (Me._QTY1COV.Equals(value) = false) Then
					Me._QTY1COV = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY1CANC", DbType:="Float")>  _
		Public Property QTY1CANC() As System.Nullable(Of Double)
			Get
				Return Me._QTY1CANC
			End Get
			Set
				If (Me._QTY1CANC.Equals(value) = false) Then
					Me._QTY1CANC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIAFORA", DbType:="Float")>  _
		Public Property DIAFORA() As System.Nullable(Of Double)
			Get
				Return Me._DIAFORA
			End Get
			Set
				If (Me._DIAFORA.Equals(value) = false) Then
					Me._DIAFORA = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class FetchChequeInSpecificDateResult
		
		Private _CHEQUE As Integer
		
		Private _TRDFLINES As System.Nullable(Of Integer)
		
		Private _FINDOC As System.Nullable(Of Integer)
		
		Private _FINCODE As String
		
		Private _CRTDATE As System.Nullable(Of Date)
		
		Private _TRNDATE As System.Nullable(Of Date)
		
		Private _TRNSTATE As System.Nullable(Of Short)
		
		Private _CHEQUESTATE As System.Nullable(Of Short)
		
		Private _TRNTYPEPOSS As System.Nullable(Of Short)
		
		Private _CHEQUETYPEPOSS As System.Nullable(Of Short)
		
		Private _TRNHOLDERNAME As String
		
		Private _CHEQUEHOLDERNAME As String
		
		Private _TRNFOLDER As System.Nullable(Of Short)
		
		Private _CHEQUEFOLDER As System.Nullable(Of Short)
		
		Private _TRNBALANCE As System.Nullable(Of Double)
		
		Private _LTRNBALANCE As System.Nullable(Of Double)
		
		Private _CHEQUEBALANCE As System.Nullable(Of Double)
		
		Private _CHEQUERATE As Double
		
		Private _CHEQUEUPD As System.Nullable(Of Short)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUE", DbType:="Int NOT NULL")>  _
		Public Property CHEQUE() As Integer
			Get
				Return Me._CHEQUE
			End Get
			Set
				If ((Me._CHEQUE = value)  _
							= false) Then
					Me._CHEQUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDFLINES", DbType:="Int")>  _
		Public Property TRDFLINES() As System.Nullable(Of Integer)
			Get
				Return Me._TRDFLINES
			End Get
			Set
				If (Me._TRDFLINES.Equals(value) = false) Then
					Me._TRDFLINES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int")>  _
		Public Property FINDOC() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOC
			End Get
			Set
				If (Me._FINDOC.Equals(value) = false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODE", DbType:="VarChar(30)")>  _
		Public Property FINCODE() As String
			Get
				Return Me._FINCODE
			End Get
			Set
				If (String.Equals(Me._FINCODE, value) = false) Then
					Me._FINCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRTDATE", DbType:="DateTime")>  _
		Public Property CRTDATE() As System.Nullable(Of Date)
			Get
				Return Me._CRTDATE
			End Get
			Set
				If (Me._CRTDATE.Equals(value) = false) Then
					Me._CRTDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime")>  _
		Public Property TRNDATE() As System.Nullable(Of Date)
			Get
				Return Me._TRNDATE
			End Get
			Set
				If (Me._TRNDATE.Equals(value) = false) Then
					Me._TRNDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNSTATE", DbType:="SmallInt")>  _
		Public Property TRNSTATE() As System.Nullable(Of Short)
			Get
				Return Me._TRNSTATE
			End Get
			Set
				If (Me._TRNSTATE.Equals(value) = false) Then
					Me._TRNSTATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUESTATE", DbType:="SmallInt")>  _
		Public Property CHEQUESTATE() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUESTATE
			End Get
			Set
				If (Me._CHEQUESTATE.Equals(value) = false) Then
					Me._CHEQUESTATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNTYPEPOSS", DbType:="SmallInt")>  _
		Public Property TRNTYPEPOSS() As System.Nullable(Of Short)
			Get
				Return Me._TRNTYPEPOSS
			End Get
			Set
				If (Me._TRNTYPEPOSS.Equals(value) = false) Then
					Me._TRNTYPEPOSS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUETYPEPOSS", DbType:="SmallInt")>  _
		Public Property CHEQUETYPEPOSS() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUETYPEPOSS
			End Get
			Set
				If (Me._CHEQUETYPEPOSS.Equals(value) = false) Then
					Me._CHEQUETYPEPOSS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNHOLDERNAME", DbType:="VarChar(128)")>  _
		Public Property TRNHOLDERNAME() As String
			Get
				Return Me._TRNHOLDERNAME
			End Get
			Set
				If (String.Equals(Me._TRNHOLDERNAME, value) = false) Then
					Me._TRNHOLDERNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEHOLDERNAME", DbType:="VarChar(128)")>  _
		Public Property CHEQUEHOLDERNAME() As String
			Get
				Return Me._CHEQUEHOLDERNAME
			End Get
			Set
				If (String.Equals(Me._CHEQUEHOLDERNAME, value) = false) Then
					Me._CHEQUEHOLDERNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNFOLDER", DbType:="SmallInt")>  _
		Public Property TRNFOLDER() As System.Nullable(Of Short)
			Get
				Return Me._TRNFOLDER
			End Get
			Set
				If (Me._TRNFOLDER.Equals(value) = false) Then
					Me._TRNFOLDER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEFOLDER", DbType:="SmallInt")>  _
		Public Property CHEQUEFOLDER() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUEFOLDER
			End Get
			Set
				If (Me._CHEQUEFOLDER.Equals(value) = false) Then
					Me._CHEQUEFOLDER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNBALANCE", DbType:="Float")>  _
		Public Property TRNBALANCE() As System.Nullable(Of Double)
			Get
				Return Me._TRNBALANCE
			End Get
			Set
				If (Me._TRNBALANCE.Equals(value) = false) Then
					Me._TRNBALANCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LTRNBALANCE", DbType:="Float")>  _
		Public Property LTRNBALANCE() As System.Nullable(Of Double)
			Get
				Return Me._LTRNBALANCE
			End Get
			Set
				If (Me._LTRNBALANCE.Equals(value) = false) Then
					Me._LTRNBALANCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEBALANCE", DbType:="Float")>  _
		Public Property CHEQUEBALANCE() As System.Nullable(Of Double)
			Get
				Return Me._CHEQUEBALANCE
			End Get
			Set
				If (Me._CHEQUEBALANCE.Equals(value) = false) Then
					Me._CHEQUEBALANCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUERATE", DbType:="Float NOT NULL")>  _
		Public Property CHEQUERATE() As Double
			Get
				Return Me._CHEQUERATE
			End Get
			Set
				If ((Me._CHEQUERATE = value)  _
							= false) Then
					Me._CHEQUERATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEUPD", DbType:="SmallInt")>  _
		Public Property CHEQUEUPD() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUEUPD
			End Get
			Set
				If (Me._CHEQUEUPD.Equals(value) = false) Then
					Me._CHEQUEUPD = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class fnCheQueOpenAllResult
		
		Private _CHEQUE As System.Nullable(Of Integer)
		
		Private _FINDOC As System.Nullable(Of Integer)
		
		Private _FINCODE As String
		
		Private _TRDR As System.Nullable(Of Integer)
		
		Private _TRNDATE As System.Nullable(Of Date)
		
		Private _TRNSTATE As System.Nullable(Of Short)
		
		Private _TRNSTATENAME As String
		
		Private _CHQTPRMSNAME As String
		
		Private _TRNTYPEPOSS As System.Nullable(Of Short)
		
		Private _TRNFOLDER As System.Nullable(Of Short)
		
		Private _TRNBALANCE As System.Nullable(Of Double)
		
		Private _LINEVAL As System.Nullable(Of Double)
		
		Private _LLINEVAL As System.Nullable(Of Double)
		
		Private _CHEQUEUPD As System.Nullable(Of Short)
		
		Private _CHEQUEUPDNAME As String
		
		Private _TRDFLINESCHEQUESTATESNAME As String
		
		Private _OPENBAL As System.Nullable(Of Short)
		
		Private _PAYBAL As System.Nullable(Of Short)
		
		Private _CODE As String
		
		Private _SERIESNUM As System.Nullable(Of Integer)
		
		Private _BNKNAME As String
		
		Private _CRTDATE As System.Nullable(Of Date)
		
		Private _FINALDATE As System.Nullable(Of Date)
		
		Private _TDCODE As String
		
		Private _TDBCODE As String
		
		Private _TDBNAME As String
		
		Private _CREATORNAME As String
		
		Private _CHEQUESTATES As System.Nullable(Of Short)
		
		Private _CHEQUESTATESNAME As String
		
		Private _CHEQUEBAL As System.Nullable(Of Double)
		
		Private _POSSTYPE As String
		
		Private _TRNHOLDERNAME As String
		
		Private _CHEQUENUMBER As String
		
		Private _CHEQUEVAL As System.Nullable(Of Double)
		
		Private _LDATE As System.Nullable(Of Date)
		
		Private _BFDATE As System.Nullable(Of Date)
		
		Private _LBFDIFFDATE As System.Nullable(Of Integer)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUE", DbType:="Int")>  _
		Public Property CHEQUE() As System.Nullable(Of Integer)
			Get
				Return Me._CHEQUE
			End Get
			Set
				If (Me._CHEQUE.Equals(value) = false) Then
					Me._CHEQUE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINDOC", DbType:="Int")>  _
		Public Property FINDOC() As System.Nullable(Of Integer)
			Get
				Return Me._FINDOC
			End Get
			Set
				If (Me._FINDOC.Equals(value) = false) Then
					Me._FINDOC = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINCODE", DbType:="VarChar(30)")>  _
		Public Property FINCODE() As String
			Get
				Return Me._FINCODE
			End Get
			Set
				If (String.Equals(Me._FINCODE, value) = false) Then
					Me._FINCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDR", DbType:="Int")>  _
		Public Property TRDR() As System.Nullable(Of Integer)
			Get
				Return Me._TRDR
			End Get
			Set
				If (Me._TRDR.Equals(value) = false) Then
					Me._TRDR = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNDATE", DbType:="DateTime")>  _
		Public Property TRNDATE() As System.Nullable(Of Date)
			Get
				Return Me._TRNDATE
			End Get
			Set
				If (Me._TRNDATE.Equals(value) = false) Then
					Me._TRNDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNSTATE", DbType:="SmallInt")>  _
		Public Property TRNSTATE() As System.Nullable(Of Short)
			Get
				Return Me._TRNSTATE
			End Get
			Set
				If (Me._TRNSTATE.Equals(value) = false) Then
					Me._TRNSTATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNSTATENAME", DbType:="VarChar(50)")>  _
		Public Property TRNSTATENAME() As String
			Get
				Return Me._TRNSTATENAME
			End Get
			Set
				If (String.Equals(Me._TRNSTATENAME, value) = false) Then
					Me._TRNSTATENAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHQTPRMSNAME", DbType:="VarChar(50)")>  _
		Public Property CHQTPRMSNAME() As String
			Get
				Return Me._CHQTPRMSNAME
			End Get
			Set
				If (String.Equals(Me._CHQTPRMSNAME, value) = false) Then
					Me._CHQTPRMSNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNTYPEPOSS", DbType:="SmallInt")>  _
		Public Property TRNTYPEPOSS() As System.Nullable(Of Short)
			Get
				Return Me._TRNTYPEPOSS
			End Get
			Set
				If (Me._TRNTYPEPOSS.Equals(value) = false) Then
					Me._TRNTYPEPOSS = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNFOLDER", DbType:="SmallInt")>  _
		Public Property TRNFOLDER() As System.Nullable(Of Short)
			Get
				Return Me._TRNFOLDER
			End Get
			Set
				If (Me._TRNFOLDER.Equals(value) = false) Then
					Me._TRNFOLDER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNBALANCE", DbType:="Float")>  _
		Public Property TRNBALANCE() As System.Nullable(Of Double)
			Get
				Return Me._TRNBALANCE
			End Get
			Set
				If (Me._TRNBALANCE.Equals(value) = false) Then
					Me._TRNBALANCE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINEVAL", DbType:="Float")>  _
		Public Property LINEVAL() As System.Nullable(Of Double)
			Get
				Return Me._LINEVAL
			End Get
			Set
				If (Me._LINEVAL.Equals(value) = false) Then
					Me._LINEVAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LLINEVAL", DbType:="Float")>  _
		Public Property LLINEVAL() As System.Nullable(Of Double)
			Get
				Return Me._LLINEVAL
			End Get
			Set
				If (Me._LLINEVAL.Equals(value) = false) Then
					Me._LLINEVAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEUPD", DbType:="SmallInt")>  _
		Public Property CHEQUEUPD() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUEUPD
			End Get
			Set
				If (Me._CHEQUEUPD.Equals(value) = false) Then
					Me._CHEQUEUPD = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEUPDNAME", DbType:="VarChar(50)")>  _
		Public Property CHEQUEUPDNAME() As String
			Get
				Return Me._CHEQUEUPDNAME
			End Get
			Set
				If (String.Equals(Me._CHEQUEUPDNAME, value) = false) Then
					Me._CHEQUEUPDNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRDFLINESCHEQUESTATESNAME", DbType:="VarChar(50)")>  _
		Public Property TRDFLINESCHEQUESTATESNAME() As String
			Get
				Return Me._TRDFLINESCHEQUESTATESNAME
			End Get
			Set
				If (String.Equals(Me._TRDFLINESCHEQUESTATESNAME, value) = false) Then
					Me._TRDFLINESCHEQUESTATESNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPENBAL", DbType:="SmallInt")>  _
		Public Property OPENBAL() As System.Nullable(Of Short)
			Get
				Return Me._OPENBAL
			End Get
			Set
				If (Me._OPENBAL.Equals(value) = false) Then
					Me._OPENBAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYBAL", DbType:="SmallInt")>  _
		Public Property PAYBAL() As System.Nullable(Of Short)
			Get
				Return Me._PAYBAL
			End Get
			Set
				If (Me._PAYBAL.Equals(value) = false) Then
					Me._PAYBAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25)")>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SERIESNUM", DbType:="Int")>  _
		Public Property SERIESNUM() As System.Nullable(Of Integer)
			Get
				Return Me._SERIESNUM
			End Get
			Set
				If (Me._SERIESNUM.Equals(value) = false) Then
					Me._SERIESNUM = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BNKNAME", DbType:="VarChar(64)")>  _
		Public Property BNKNAME() As String
			Get
				Return Me._BNKNAME
			End Get
			Set
				If (String.Equals(Me._BNKNAME, value) = false) Then
					Me._BNKNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRTDATE", DbType:="DateTime")>  _
		Public Property CRTDATE() As System.Nullable(Of Date)
			Get
				Return Me._CRTDATE
			End Get
			Set
				If (Me._CRTDATE.Equals(value) = false) Then
					Me._CRTDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINALDATE", DbType:="DateTime")>  _
		Public Property FINALDATE() As System.Nullable(Of Date)
			Get
				Return Me._FINALDATE
			End Get
			Set
				If (Me._FINALDATE.Equals(value) = false) Then
					Me._FINALDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDCODE", DbType:="VarChar(25)")>  _
		Public Property TDCODE() As String
			Get
				Return Me._TDCODE
			End Get
			Set
				If (String.Equals(Me._TDCODE, value) = false) Then
					Me._TDCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDBCODE", DbType:="VarChar(25)")>  _
		Public Property TDBCODE() As String
			Get
				Return Me._TDBCODE
			End Get
			Set
				If (String.Equals(Me._TDBCODE, value) = false) Then
					Me._TDBCODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDBNAME", DbType:="VarChar(128)")>  _
		Public Property TDBNAME() As String
			Get
				Return Me._TDBNAME
			End Get
			Set
				If (String.Equals(Me._TDBNAME, value) = false) Then
					Me._TDBNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATORNAME", DbType:="VarChar(128)")>  _
		Public Property CREATORNAME() As String
			Get
				Return Me._CREATORNAME
			End Get
			Set
				If (String.Equals(Me._CREATORNAME, value) = false) Then
					Me._CREATORNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUESTATES", DbType:="SmallInt")>  _
		Public Property CHEQUESTATES() As System.Nullable(Of Short)
			Get
				Return Me._CHEQUESTATES
			End Get
			Set
				If (Me._CHEQUESTATES.Equals(value) = false) Then
					Me._CHEQUESTATES = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUESTATESNAME", DbType:="VarChar(50)")>  _
		Public Property CHEQUESTATESNAME() As String
			Get
				Return Me._CHEQUESTATESNAME
			End Get
			Set
				If (String.Equals(Me._CHEQUESTATESNAME, value) = false) Then
					Me._CHEQUESTATESNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEBAL", DbType:="Float")>  _
		Public Property CHEQUEBAL() As System.Nullable(Of Double)
			Get
				Return Me._CHEQUEBAL
			End Get
			Set
				If (Me._CHEQUEBAL.Equals(value) = false) Then
					Me._CHEQUEBAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSSTYPE", DbType:="VarChar(25)")>  _
		Public Property POSSTYPE() As String
			Get
				Return Me._POSSTYPE
			End Get
			Set
				If (String.Equals(Me._POSSTYPE, value) = false) Then
					Me._POSSTYPE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNHOLDERNAME", DbType:="VarChar(128)")>  _
		Public Property TRNHOLDERNAME() As String
			Get
				Return Me._TRNHOLDERNAME
			End Get
			Set
				If (String.Equals(Me._TRNHOLDERNAME, value) = false) Then
					Me._TRNHOLDERNAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUENUMBER", DbType:="VarChar(40)")>  _
		Public Property CHEQUENUMBER() As String
			Get
				Return Me._CHEQUENUMBER
			End Get
			Set
				If (String.Equals(Me._CHEQUENUMBER, value) = false) Then
					Me._CHEQUENUMBER = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEQUEVAL", DbType:="Float")>  _
		Public Property CHEQUEVAL() As System.Nullable(Of Double)
			Get
				Return Me._CHEQUEVAL
			End Get
			Set
				If (Me._CHEQUEVAL.Equals(value) = false) Then
					Me._CHEQUEVAL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LDATE", DbType:="DateTime")>  _
		Public Property LDATE() As System.Nullable(Of Date)
			Get
				Return Me._LDATE
			End Get
			Set
				If (Me._LDATE.Equals(value) = false) Then
					Me._LDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BFDATE", DbType:="DateTime")>  _
		Public Property BFDATE() As System.Nullable(Of Date)
			Get
				Return Me._BFDATE
			End Get
			Set
				If (Me._BFDATE.Equals(value) = false) Then
					Me._BFDATE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LBFDIFFDATE", DbType:="Int")>  _
		Public Property LBFDIFFDATE() As System.Nullable(Of Integer)
			Get
				Return Me._LBFDIFFDATE
			End Get
			Set
				If (Me._LBFDIFFDATE.Equals(value) = false) Then
					Me._LBFDIFFDATE = value
				End If
			End Set
		End Property
	End Class
	
	Partial Public Class FetchWhousesBalResult
		
		Private _MTRL As Integer
		
		Private _CODE As String
		
		Private _NAME As String
		
		Private _MTRUNIT1 As Short
		
		Private _MU1NAME As String
		
		Private _OPNWH As System.Nullable(Of Double)
		
		Private _TRNWH As System.Nullable(Of Double)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRL", DbType:="Int NOT NULL")>  _
		Public Property MTRL() As Integer
			Get
				Return Me._MTRL
			End Get
			Set
				If ((Me._MTRL = value)  _
							= false) Then
					Me._MTRL = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="VarChar(25) NOT NULL", CanBeNull:=false)>  _
		Public Property CODE() As String
			Get
				Return Me._CODE
			End Get
			Set
				If (String.Equals(Me._CODE, value) = false) Then
					Me._CODE = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property NAME() As String
			Get
				Return Me._NAME
			End Get
			Set
				If (String.Equals(Me._NAME, value) = false) Then
					Me._NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTRUNIT1", DbType:="SmallInt NOT NULL")>  _
		Public Property MTRUNIT1() As Short
			Get
				Return Me._MTRUNIT1
			End Get
			Set
				If ((Me._MTRUNIT1 = value)  _
							= false) Then
					Me._MTRUNIT1 = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MU1NAME", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
		Public Property MU1NAME() As String
			Get
				Return Me._MU1NAME
			End Get
			Set
				If (String.Equals(Me._MU1NAME, value) = false) Then
					Me._MU1NAME = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNWH", DbType:="Float")>  _
		Public Property OPNWH() As System.Nullable(Of Double)
			Get
				Return Me._OPNWH
			End Get
			Set
				If (Me._OPNWH.Equals(value) = false) Then
					Me._OPNWH = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRNWH", DbType:="Float")>  _
		Public Property TRNWH() As System.Nullable(Of Double)
			Get
				Return Me._TRNWH
			End Get
			Set
				If (Me._TRNWH.Equals(value) = false) Then
					Me._TRNWH = value
				End If
			End Set
		End Property
	End Class
End Namespace
